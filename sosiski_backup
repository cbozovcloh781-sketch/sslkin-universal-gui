if not game:IsLoaded() then game.Loaded:Wait() end

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

-- Configurations
local Config = {
    ESP = {
        Enabled     = true,
        TeamCheck   = false,
        ShowOutline = true,
        ShowLines   = false,
        Rainbow     = false,
        FillColor   = Color3.fromRGB(255,255,255),
        OutlineColor= Color3.fromRGB(255,255,255),
        TextColor   = Color3.fromRGB(255,255,255),
        LineColor   = Color3.fromRGB(255,255,255),
        FillTransparency    = 0.5,
        OutlineTransparency = 0,
        Font        = Enum.Font.SciFi,
        TeamColor   = Color3.fromRGB(0,255,0),
        EnemyColor  = Color3.fromRGB(255,0,0),
        ToggleKey   = nil,
    },
    Aimbot = {
        Enabled         = false,
        TeamCheck       = false,
        VisibilityCheck = true,
        FOV             = 150,
        ToggleKey       = nil,
        FOVColor        = Color3.fromRGB(255,128,128),
        FOVRainbow      = false,
    },
    MenuCollapsed = false,
}

local FlyConfig = {
    Enabled = false,
    Speed = 1,
    ToggleKey = nil,
}

local NoClipConfig = {
    Enabled = false,
    ToggleKey = nil,
    ForceToggleKey = nil,
}

local SpeedHackConfig = {
    Enabled = false,
    Speed = 1,
    ToggleKey = nil,
    UseJumpPower = false,
}

local LongJumpConfig = {
    Enabled = false,
    JumpPower = 150,
    ToggleKey = nil,
}

local InfiniteJumpConfig = {
    Enabled = false,
    JumpPower = 50,
    ToggleKey = nil,
}

local TeleportConfig = {
    Enabled = false,
    TargetPlayer = nil,
    OriginalPosition = nil,
    ToggleKey = nil,
    SelectedPlayerName = nil,
    UseStealthMode = true,
    TeleportSpeed = 1200,
    ReturnSpeed = 2000,
    BehindPlayerDistance = 3.0,
    StabilizationTime = 0.5,
    MaxSpeedResetTime = 2.0,
    SpeedResetThreshold = 50,
    InstantTurnSpeed = 600,
    SmoothingFactor = 0.15,
    MaxCorrectionSpeed = 300,
    StabilizationThreshold = 0.8,
}

local YBAConfig = {
    Enabled = false,
    ToggleKey = nil,
    StandRange = 100000,
    FreezePlayer = true,
    SwitchCamera = true,
    TransferControl = true,
    AutoFindStands = true,
    MaxStandDistance = 10000,
    CameraDistance = 15,
    CameraHeight = 5,
    StandControlSpeed = 1.0,
    StandControlSmoothing = 0.1,
    MouseSensitivity = 0.01,
    CameraSmoothing = 0.08,
    CameraFollowDistance = 20.2,
    CameraFollowHeight = 6.1,
    MouseLookSensitivity = 0.003,
    StandRotationSpeed = 0.05,
    UndergroundControl = {
        FlightSpeed = 50,
        AutoNoClip = true,
        OriginalPosition = nil,
    },
    ItemESP = {
        Enabled = false,
        ToggleKey = nil,
        MaxDistance = 1000,
        MaxRenderDistance = 5000,
        UpdateInterval = 0.3,
        ShowOutline = true,
        ShowText = true,
        ShowFill = true,
        FillColor = Color3.fromRGB(255, 215, 0),
        OutlineColor = Color3.fromRGB(255, 255, 0),
        TextColor = Color3.fromRGB(255, 255, 255),
        TextBackgroundColor = Color3.fromRGB(0, 0, 0),
        FillTransparency = 0.3,
        OutlineTransparency = 0.1,
        TextBackgroundTransparency = 0.3,
        TextSize = 10,
        DistanceTextSize = 9,
        Font = Enum.Font.GothamBold,
        Items = {
            ["Mysterious Arrow"] = true,
            ["Rokakaka"] = true,
            ["Pure Rokakaka"] = true,
            ["Diamond"] = true,
            ["Gold Coin"] = true,
            ["Steel Ball"] = true,
            ["Clackers"] = true,
            ["Caesar's Headband"] = true,
            ["Zeppeli's Hat"] = true,
            ["Zeppeli's Scarf"] = true,
            ["Ancient Scroll"] = true,
            ["Quinton's Glove"] = true,
            ["Stone Mask"] = true,
            ["Lucky Arrow"] = true,
            ["Lucky Stone Mask"] = true,
            ["Rib Cage of The Saint's Corpse"] = true,
            ["DIO's Diary"] = true,
            ["DIO's Bone"] = true,
            ["DIO's Diary Page"] = true,
        }
    }
}

local AntiTimeStopConfig = {
    Enabled = false,
    ToggleKey = nil,
    MovementSpeed = 1.5,
    JumpPower = 50,
    WalkSpeed = 16,
    AutoActivate = true,
    DetectionRange = 100,
    VisualEffect = true,
    SoundEffect = false,
    AntiFreeze = true,
    TimeStopBypass = true,
    MovementOverride = true,
    DisableOnAttack = true,
    ServerSync = true,
}

-- State variables
local isFlying = false
local flyConnections = {}
local originalGravity = workspace.Gravity

local isNoClipping = false
local noClipConnections = {}

local isSpeedHacking = false
local speedHackConnections = {}
local originalWalkSpeed = 16
local originalJumpPower = 50

local isLongJumping = false
local longJumpConnections = {}
local originalLongJumpPower = 50

local isUndergroundControlEnabled = false
local undergroundControlConnections = {}
local controlledStandForUnderground = nil
local isShiftPressed = false

local isInfiniteJumping = false
local infiniteJumpConnections = {}
local lastJumpTime = 0

local isTeleporting = false
local teleportConnections = {}
local playerSelectionWindow = nil
local lastTeleportPosition = nil
local stabilizationStartTime = nil
local isStabilizing = false
local speedResetTimer = 0
local lastSpeedCheck = tick()
local lastBehindDistance = 0

local isYBAEnabled = false
local ybaConnections = {}
local originalPlayerPosition = nil
local originalPlayerCFrame = nil
local originalCameraCFrame = nil
local controlledStand = nil
local standControlConnections = {}
local originalYBAWalkSpeed = 16
local originalYBAJumpPower = 50

local isAntiTimeStopEnabled = false
local antiTimeStopConnections = {}
local originalAntiTimeStopWalkSpeed = 16
local originalAntiTimeStopJumpPower = 50
local timeStopDetected = false
local timeStopStartTime = 0
local timeStopDuration = 0
local antiTimeStopEffect = nil

local itemESPConnections = {}
local itemESPElements = {}
local itemESPEnabled = false

-- Real functionality functions
local function startFly()
    local plr = Players.LocalPlayer
    local char = plr.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    local root = char and char:FindFirstChild("HumanoidRootPart")
    
    if not hum or not root then return end
    
    isFlying = true
    
    local flyOriginalJumpPower = hum.JumpPower
    local flyOriginalJumpHeight = hum.JumpHeight
    local flyOriginalGravity = workspace.Gravity
    local flyOriginalHipHeight = hum.HipHeight
    
    hum.JumpPower = 0
    hum.JumpHeight = 0
    workspace.Gravity = 0
    hum.HipHeight = 0
    
    local ctrl = {f = 0, b = 0, l = 0, r = 0, u = 0, d = 0}
    
    local inputDown = UserInputService.InputBegan:Connect(function(input, gp)
        if gp then return end
        if input.KeyCode == Enum.KeyCode.W then ctrl.f = 1
        elseif input.KeyCode == Enum.KeyCode.S then ctrl.b = -1
        elseif input.KeyCode == Enum.KeyCode.A then ctrl.l = -1
        elseif input.KeyCode == Enum.KeyCode.D then ctrl.r = 1
        elseif input.KeyCode == Enum.KeyCode.Space then ctrl.u = 1
        elseif input.KeyCode == Enum.KeyCode.LeftControl then ctrl.d = -1 end
    end)
    
    local inputUp = UserInputService.InputEnded:Connect(function(input, gp)
        if gp then return end
        if input.KeyCode == Enum.KeyCode.W then ctrl.f = 0
        elseif input.KeyCode == Enum.KeyCode.S then ctrl.b = 0
        elseif input.KeyCode == Enum.KeyCode.A then ctrl.l = 0
        elseif input.KeyCode == Enum.KeyCode.D then ctrl.r = 0
        elseif input.KeyCode == Enum.KeyCode.Space then ctrl.u = 0
        elseif input.KeyCode == Enum.KeyCode.LeftControl then ctrl.d = 0 end
    end)
    
    local renderConnection = RunService.RenderStepped:Connect(function()
        if not isFlying or not char or not char:FindFirstChild("Humanoid") or not root then
            if hum then
                hum.JumpPower = flyOriginalJumpPower
                hum.JumpHeight = flyOriginalJumpHeight
                hum.HipHeight = flyOriginalHipHeight
            end
            if not isNoClipping then
                workspace.Gravity = flyOriginalGravity
            end
            
            inputDown:Disconnect()
            inputUp:Disconnect()
            renderConnection:Disconnect()
            return
        end
        
        local cam = workspace.CurrentCamera
        if not cam then return end
        
        local forward = cam.CFrame.lookVector
        local right = cam.CFrame.rightVector
        local up = Vector3.new(0, 1, 0)
        
        local moveVector = Vector3.new(0, 0, 0)
        moveVector = moveVector + (forward * (ctrl.f + ctrl.b))
        moveVector = moveVector + (right * (ctrl.r + ctrl.l))
        moveVector = moveVector + (up * (ctrl.u + ctrl.d))
        
        if moveVector.Magnitude > 0 then
            moveVector = moveVector.Unit * (FlyConfig.Speed * 10)
            local bv = root:FindFirstChild("BodyVelocity")
            if not bv then
                bv = Instance.new("BodyVelocity", root)
                bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
            end
            bv.Velocity = moveVector
        else
            local bv = root:FindFirstChild("BodyVelocity")
            if bv then
                bv.Velocity = Vector3.new(0, 0, 0)
            end
        end
    end)
    
    table.insert(flyConnections, inputDown)
    table.insert(flyConnections, inputUp)
    table.insert(flyConnections, renderConnection)
end

local function stopFly()
    isFlying = false
    
    local char = Players.LocalPlayer.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    local root = char and char:FindFirstChild("HumanoidRootPart")
    
    if hum then
        hum.JumpPower = 50
        hum.JumpHeight = 7.2
        hum.HipHeight = 2
    end
    
    workspace.Gravity = 196.2
    
    if root then
        local bv = root:FindFirstChild("BodyVelocity")
        if bv then
            bv:Destroy()
        end
    end
    
    for _, connection in ipairs(flyConnections) do
        if connection then
            pcall(function() connection:Disconnect() end)
        end
    end
    flyConnections = {}
end

local function startNoClip()
    local char = Players.LocalPlayer.Character
    if not char then return end
    
    isNoClipping = true
    
    for _, part in pairs(char:GetDescendants()) do
        if part:IsA("BasePart") and part.CanCollide then
            part.CanCollide = false
        end
    end
    
    local function noclip()
        if not char or not char.Parent then return end
        
        for _, part in pairs(char:GetDescendants()) do
            if part:IsA("BasePart") and part.CanCollide then
                part.CanCollide = false
            end
        end
    end
    
    local noClipLoop = RunService.Heartbeat:Connect(function()
        if not isNoClipping or not char or not char.Parent then
            return
        end
        noclip()
    end)
    
    table.insert(noClipConnections, noClipLoop)
    
    local function setupNoClipForPart(part)
        if part:IsA("BasePart") and part.CanCollide then
            part.CanCollide = false
        end
    end
    
    local descendantAdded = char.DescendantAdded:Connect(setupNoClipForPart)
    table.insert(noClipConnections, descendantAdded)
    
    task.spawn(function()
        task.wait(0.5)
        if isNoClipping and char and char.Parent then
            noclip()
        end
    end)
end

local function stopNoClip()
    isNoClipping = false
    
    local char = Players.LocalPlayer.Character
    if not char then return end
    
    for _, part in pairs(char:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = true
        end
    end
    
    for _, connection in ipairs(noClipConnections) do
        if connection then
            if typeof(connection) == "RBXScriptConnection" then
                pcall(function() connection:Disconnect() end)
            elseif typeof(connection) == "Instance" then
                pcall(function() connection:Destroy() end)
            end
        end
    end
    noClipConnections = {}
end

local function startSpeedHack()
    local char = Players.LocalPlayer.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    if not hum then return end
    
    isSpeedHacking = true
    originalWalkSpeed = hum.WalkSpeed
    originalJumpPower = hum.JumpPower
    
    hum.WalkSpeed = SpeedHackConfig.Speed * 16
    
    if SpeedHackConfig.UseJumpPower then
        hum.JumpPower = SpeedHackConfig.Speed * 50
    end
    
    local function onCharacterAdded(newChar)
        local newHum = newChar:WaitForChild("Humanoid")
        if isSpeedHacking then
            newHum.WalkSpeed = SpeedHackConfig.Speed * 16
            if SpeedHackConfig.UseJumpPower then
                newHum.JumpPower = SpeedHackConfig.Speed * 50
            end
        end
    end
    
    local characterAddedConnection = Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
    table.insert(speedHackConnections, characterAddedConnection)
    
    local speedLoop = RunService.Heartbeat:Connect(function()
        if not isSpeedHacking then return end
        
        local currentChar = Players.LocalPlayer.Character
        local currentHum = currentChar and currentChar:FindFirstChildOfClass("Humanoid")
        
        if currentHum then
            if currentHum.WalkSpeed ~= SpeedHackConfig.Speed * 16 then
                currentHum.WalkSpeed = SpeedHackConfig.Speed * 16
            end
            
            if SpeedHackConfig.UseJumpPower and currentHum.JumpPower ~= SpeedHackConfig.Speed * 50 then
                currentHum.JumpPower = SpeedHackConfig.Speed * 50
            end
        end
    end)
    
    table.insert(speedHackConnections, speedLoop)
end

local function stopSpeedHack()
    isSpeedHacking = false
    
    local char = Players.LocalPlayer.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.WalkSpeed = originalWalkSpeed
        hum.JumpPower = originalJumpPower
    end
    
    for _, connection in ipairs(speedHackConnections) do
        if connection then
            if typeof(connection) == "RBXScriptConnection" then
                pcall(function() connection:Disconnect() end)
            elseif typeof(connection) == "Instance" then
                pcall(function() connection:Destroy() end)
            end
        end
    end
    speedHackConnections = {}
end

local function startLongJump()
    local char = Players.LocalPlayer.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    if not hum then return end
    
    isLongJumping = true
    originalLongJumpPower = hum.JumpPower
    
    hum.JumpPower = LongJumpConfig.JumpPower
    
    local function onCharacterAdded(newChar)
        local newHum = newChar:WaitForChild("Humanoid")
        if isLongJumping then
            newHum.JumpPower = LongJumpConfig.JumpPower
        end
    end
    
    local characterAddedConnection = Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
    table.insert(longJumpConnections, characterAddedConnection)
    
    local longJumpLoop = RunService.Heartbeat:Connect(function()
        if not isLongJumping then return end
        
        local currentChar = Players.LocalPlayer.Character
        local currentHum = currentChar and currentChar:FindFirstChildOfClass("Humanoid")
        
        if currentHum and currentHum.JumpPower ~= LongJumpConfig.JumpPower then
            currentHum.JumpPower = LongJumpConfig.JumpPower
        end
    end)
    
    table.insert(longJumpConnections, longJumpLoop)
end

local function stopLongJump()
    isLongJumping = false
    
    local char = Players.LocalPlayer.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.JumpPower = originalLongJumpPower
    end
    
    for _, connection in ipairs(longJumpConnections) do
        if connection then
            if typeof(connection) == "RBXScriptConnection" then
                pcall(function() connection:Disconnect() end)
            elseif typeof(connection) == "Instance" then
                pcall(function() connection:Destroy() end)
            end
        end
    end
    longJumpConnections = {}
end

local function startInfiniteJump()
    local char = Players.LocalPlayer.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    local root = char and char:FindFirstChild("HumanoidRootPart")
    if not hum or not root then return end
    
    isInfiniteJumping = true
    lastJumpTime = 0
    
    local function onJumpRequest()
        if not isInfiniteJumping then return end
        
        local currentTime = tick()
        if currentTime - lastJumpTime < 0.1 then return end 
        
        lastJumpTime = currentTime
        
        local bv = Instance.new("BodyVelocity", root)
        bv.MaxForce = Vector3.new(0, math.huge, 0)
        bv.Velocity = Vector3.new(0, InfiniteJumpConfig.JumpPower, 0)
        
        task.spawn(function()
            task.wait(0.3)
            if bv and bv.Parent then
                bv:Destroy()
            end
        end)
    end
    
    local jumpConnection = hum.Jumping:Connect(onJumpRequest)
    table.insert(infiniteJumpConnections, jumpConnection)
    
    local function onInputBegan(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == Enum.KeyCode.Space then
            onJumpRequest()
        end
    end
    
    local inputConnection = UserInputService.InputBegan:Connect(onInputBegan)
    table.insert(infiniteJumpConnections, inputConnection)
    
    local function onCharacterAdded(newChar)
        if isInfiniteJumping then
            task.wait(1) 
            startInfiniteJump() 
        end
    end
    
    local characterAddedConnection = Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
    table.insert(infiniteJumpConnections, characterAddedConnection)
end

local function stopInfiniteJump()
    isInfiniteJumping = false
    lastJumpTime = 0
    
    for _, connection in ipairs(infiniteJumpConnections) do
        if connection then
            if typeof(connection) == "RBXScriptConnection" then
                pcall(function() connection:Disconnect() end)
            elseif typeof(connection) == "Instance" then
                pcall(function() connection:Destroy() end)
            end
        end
    end
    infiniteJumpConnections = {}
    
    local char = Players.LocalPlayer.Character
    local root = char and char:FindFirstChild("HumanoidRootPart")
    if root then
        for _, child in pairs(root:GetChildren()) do
            if child:IsA("BodyVelocity") then
                child:Destroy()
            end
        end
    end
end

-- Function stubs (these will be implemented later)
local function startYBA()
    print("YBA started")
    isYBAEnabled = true
end

local function stopYBA()
    print("YBA stopped")
    isYBAEnabled = false
end

local function startUndergroundControl()
    print("UndergroundControl started")
    isUndergroundControlEnabled = true
end

local function stopUndergroundControl()
    print("UndergroundControl stopped")
    isUndergroundControlEnabled = false
end

local function startItemESP()
    print("ItemESP started")
    itemESPEnabled = true
end

local function stopItemESP()
    print("ItemESP stopped")
    itemESPEnabled = false
end

local function startTeleport()
    print("Teleport started")
    isTeleporting = true
end

local function stopTeleport()
    print("Teleport stopped")
    isTeleporting = false
end

local function updatePlayerList()
    print("Player list updated")
end

-- Frostware Modern Menu - UI Components Only
-- This file contains only the UI components for the menu interface

-- Create main GUI
local FrostwareGui = Instance.new("ScreenGui", CoreGui)
FrostwareGui.Name = "FrostwareGui"
FrostwareGui.ResetOnSpawn = false

-- Main frame
local mainFrame = Instance.new("Frame", FrostwareGui)
mainFrame.Name = "MainFrame"
mainFrame.Position = UDim2.new(0, 60, 0.5, -220)
mainFrame.Size = UDim2.new(0, 420, 0, 440)
mainFrame.BackgroundColor3 = Color3.fromRGB(18, 18, 22)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 12)

-- Hide/Show button
local showBtn = Instance.new("TextButton", FrostwareGui)
showBtn.Size = UDim2.new(0, 40, 0, 40)
showBtn.Position = UDim2.new(1, -60, 0, 20)
showBtn.AnchorPoint = Vector2.new(1, 0)
showBtn.Text = "≡"
showBtn.Font = Enum.Font.GothamBold
showBtn.TextSize = 24
showBtn.TextColor3 = Color3.fromRGB(220,220,240)
showBtn.BackgroundColor3 = Color3.fromRGB(24, 24, 32)
Instance.new("UICorner", showBtn).CornerRadius = UDim.new(1, 20)
showBtn.Visible = false

-- Menu visibility function
local function setMenuVisible(visible)
    mainFrame.Visible = visible
    showBtn.Visible = not visible
end
setMenuVisible(true)

-- Close button (X)
local closeBtn = Instance.new("TextButton", mainFrame)
closeBtn.Size = UDim2.new(0, 32, 0, 32)
closeBtn.Position = UDim2.new(1, -40, 0, -15)
closeBtn.Text = "×"
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 22
closeBtn.TextColor3 = Color3.fromRGB(220,100,100)
closeBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(1, 16)

closeBtn.MouseButton1Click:Connect(function()
    setMenuVisible(false)
end)
showBtn.MouseButton1Click:Connect(function()
    setMenuVisible(true)
end)

-- Insert key support
UserInputService.InputBegan:Connect(function(input, gp)
    if not gp and input.KeyCode == Enum.KeyCode.Insert then
        setMenuVisible(not mainFrame.Visible)
    end
end)

-- Sidebar
local sidebar = Instance.new("Frame", mainFrame)
sidebar.Name = "Sidebar"
sidebar.Size = UDim2.new(0, 110, 1, 0)
sidebar.Position = UDim2.new(0, 0, 0, 0)
sidebar.BackgroundColor3 = Color3.fromRGB(24, 24, 32)
sidebar.BorderSizePixel = 0
Instance.new("UICorner", sidebar).CornerRadius = UDim.new(0, 12)

local tabList = Instance.new("Frame", sidebar)
tabList.Size = UDim2.new(1, 0, 1, 0)
tabList.BackgroundTransparency = 1

local tabLayout = Instance.new("UIListLayout", tabList)
tabLayout.SortOrder = Enum.SortOrder.LayoutOrder
tabLayout.Padding = UDim.new(0, 8)

-- Content frame
local contentFrame = Instance.new("Frame", mainFrame)
contentFrame.Name = "ContentFrame"
contentFrame.Position = UDim2.new(0, 110, 0, 0)
contentFrame.Size = UDim2.new(1, -110, 1, 0)
contentFrame.BackgroundTransparency = 1

-- Tab definitions
local tabs = {
    {name = "ESP", icon = "👁"},
    {name = "Aimbot", icon = "🎯"},
    {name = "Fly", icon = "🦅"},
    {name = "NoClip", icon = "🚪"},
    {name = "Speed", icon = "⚡"},
    {name = "Jump", icon = "🦘"},
    {name = "YBA", icon = "👊"},
    {name = "Teleport", icon = "📍"},
    {name = "Settings", icon = "⚙️"},
}

local tabButtons = {}
local tabFrames = {}
local tabContainers = {}

-- Helper: Toggle switch
local function createToggle(parent, label, state, callback)
    local row = Instance.new("Frame", parent)
    row.Size = UDim2.new(1, 0, 0, 36)
    row.BackgroundTransparency = 1

    local lbl = Instance.new("TextLabel", row)
    lbl.Text = label
    lbl.Size = UDim2.new(0.7, 0, 1, 0)
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 14
    lbl.TextColor3 = Color3.new(1,1,1)
    lbl.BackgroundTransparency = 1
    lbl.TextXAlignment = Enum.TextXAlignment.Left

    local toggle = Instance.new("Frame", row)
    toggle.Size = UDim2.new(0, 44, 0, 22)
    toggle.Position = UDim2.new(1, -54, 0.5, -11)
    toggle.BackgroundColor3 = state and Color3.fromRGB(0, 200, 120) or Color3.fromRGB(60, 60, 60)
    toggle.BorderSizePixel = 0
    Instance.new("UICorner", toggle).CornerRadius = UDim.new(1, 11)

    local knob = Instance.new("Frame", toggle)
    knob.Size = UDim2.new(0, 18, 0, 18)
    knob.Position = state and UDim2.new(1, -20, 0.5, -9) or UDim2.new(0, 2, 0.5, -9)
    knob.BackgroundColor3 = Color3.fromRGB(240,240,240)
    knob.BorderSizePixel = 0
    Instance.new("UICorner", knob).CornerRadius = UDim.new(1, 9)

    local function setState(on)
        state = on
        toggle.BackgroundColor3 = on and Color3.fromRGB(0, 200, 120) or Color3.fromRGB(60, 60, 60)
        knob:TweenPosition(on and UDim2.new(1, -20, 0.5, -9) or UDim2.new(0, 2, 0.5, -9), "Out", "Quad", 0.15, true)
        if callback then callback(on) end
    end

    row.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            setState(not state)
        end
    end)
    
    return row
end

-- Helper: Slider
local function createSlider(parent, label, min, max, value, callback)
    local row = Instance.new("Frame", parent)
    row.Size = UDim2.new(1, 0, 0, 38)
    row.BackgroundTransparency = 1

    local lbl = Instance.new("TextLabel", row)
    lbl.Text = label .. ": " .. value
    lbl.Size = UDim2.new(0.5, 0, 1, 0)
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 13
    lbl.TextColor3 = Color3.new(1,1,1)
    lbl.BackgroundTransparency = 1
    lbl.TextXAlignment = Enum.TextXAlignment.Left

    local sliderBack = Instance.new("Frame", row)
    sliderBack.Position = UDim2.new(0.5, 10, 0.5, -7)
    sliderBack.Size = UDim2.new(0.45, -20, 0, 14)
    sliderBack.BackgroundColor3 = Color3.fromRGB(60,60,60)
    Instance.new("UICorner", sliderBack).CornerRadius = UDim.new(1,7)

    local sliderFill = Instance.new("Frame", sliderBack)
    sliderFill.Size = UDim2.new((value-min)/(max-min), 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(0, 200, 120)
    Instance.new("UICorner", sliderFill).CornerRadius = UDim.new(1,7)

    local dragging = false
    local connection
    
    local function updateSlider(input)
        local pos = input.Position.X
        local abs = sliderBack.AbsolutePosition.X
        local width = sliderBack.AbsoluteSize.X
        local pct = math.clamp((pos - abs) / width, 0, 1)
        local newVal = math.floor((min + (max - min) * pct) * 10) / 10
        sliderFill.Size = UDim2.new(pct, 0, 1, 0)
        lbl.Text = label .. ": " .. newVal
        if callback then callback(newVal) end
    end

    sliderBack.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            updateSlider(input)
            
            connection = UserInputService.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    updateSlider(input)
                end
            end)
        end
    end)
    
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
            if connection then
                connection:Disconnect()
                connection = nil
            end
        end
    end)
    
    return row
end

-- Helper: Color picker
local function createColorPicker(parent, label, currentColor, callback)
    local row = Instance.new("Frame", parent)
    row.Size = UDim2.new(1, 0, 0, 32)
    row.BackgroundTransparency = 1

    local lbl = Instance.new("TextLabel", row)
    lbl.Text = label
    lbl.Size = UDim2.new(0.5, 0, 1, 0)
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 13
    lbl.TextColor3 = Color3.new(1,1,1)
    lbl.BackgroundTransparency = 1
    lbl.TextXAlignment = Enum.TextXAlignment.Left

    local colorBtn = Instance.new("TextButton", row)
    colorBtn.Size = UDim2.new(0, 32, 0, 24)
    colorBtn.Position = UDim2.new(1, -40, 0.5, -12)
    colorBtn.BackgroundColor3 = currentColor or Color3.fromRGB(255, 255, 255)
    colorBtn.Text = ""
    colorBtn.AutoButtonColor = true
    Instance.new("UICorner", colorBtn).CornerRadius = UDim.new(1, 12)

    local colors = {
        Color3.fromRGB(255, 255, 255),
        Color3.fromRGB(255, 0, 0),
        Color3.fromRGB(0, 255, 0),
        Color3.fromRGB(0, 0, 255),
        Color3.fromRGB(255, 255, 0),
        Color3.fromRGB(255, 0, 255),
        Color3.fromRGB(0, 255, 255),
        Color3.fromRGB(255, 165, 0),
        Color3.fromRGB(128, 0, 128),
        Color3.fromRGB(0, 128, 0),
    }

    local colorIndex = 1
    colorBtn.MouseButton1Click:Connect(function()
        colorIndex = (colorIndex % #colors) + 1
        local newColor = colors[colorIndex]
        colorBtn.BackgroundColor3 = newColor
        if callback then callback(newColor) end
    end)
    
    return row
end

-- Helper: Section header
local function sectionHeader(parent, text)
    local lbl = Instance.new("TextLabel", parent)
    lbl.Text = text
    lbl.Size = UDim2.new(1, 0, 0, 28)
    lbl.Font = Enum.Font.GothamBold
    lbl.TextSize = 15
    lbl.TextColor3 = Color3.fromRGB(180,180,200)
    lbl.BackgroundTransparency = 1
    lbl.TextXAlignment = Enum.TextXAlignment.Left
    return lbl
end

-- Helper: Button
local function createButton(parent, text, callback)
    local btn = Instance.new("TextButton", parent)
    btn.Size = UDim2.new(1, 0, 0, 32)
    btn.Text = text
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 14
    btn.TextColor3 = Color3.new(1,1,1)
    btn.BackgroundColor3 = Color3.fromRGB(40,40,60)
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)
    if callback then
        btn.MouseButton1Click:Connect(callback)
    end
    return btn
end

-- Create tabs
for i, tab in ipairs(tabs) do
    -- Tab button
    local btn = Instance.new("TextButton", tabList)
    btn.Size = UDim2.new(1, -16, 0, 38)
    btn.Text = tab.icon .. "  " .. tab.name
    btn.Font = Enum.Font.GothamBold
    btn.TextSize = 15
    btn.TextColor3 = Color3.fromRGB(220,220,240)
    btn.BackgroundColor3 = i == 1 and Color3.fromRGB(40, 40, 60) or Color3.fromRGB(30, 30, 40)
    btn.AutoButtonColor = false
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)
    tabButtons[tab.name] = btn

    -- Tab content frame
    local tabFrame = Instance.new("Frame", contentFrame)
    tabFrame.Name = tab.name .. "Tab"
    tabFrame.Size = UDim2.new(1, 0, 1, 0)
    tabFrame.BackgroundTransparency = 1
    tabFrame.Visible = (i == 1)
    tabFrames[tab.name] = tabFrame

    -- Scrolling frame
    local scrollFrame = Instance.new("ScrollingFrame", tabFrame)
    scrollFrame.Size = UDim2.new(1, 0, 1, 0)
    scrollFrame.Position = UDim2.new(0, 0, 0, 0)
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
    scrollFrame.ScrollBarThickness = 6
    scrollFrame.BackgroundTransparency = 1
    scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
    scrollFrame.ClipsDescendants = true

    -- Container
    local container = Instance.new("Frame", scrollFrame)
    container.Size = UDim2.new(1, -20, 0, 0)
    container.Position = UDim2.new(0, 10, 0, 50)
    container.BackgroundTransparency = 1
    container.AutomaticSize = Enum.AutomaticSize.Y

    local layout = Instance.new("UIListLayout", container)
    layout.Padding = UDim.new(0, 8)
    layout.SortOrder = Enum.SortOrder.LayoutOrder

    -- Tab switching
    btn.MouseButton1Click:Connect(function()
        for _, f in pairs(tabFrames) do f.Visible = false end
        for _, b in pairs(tabButtons) do b.BackgroundColor3 = Color3.fromRGB(30, 30, 40) end
        tabFrame.Visible = true
        btn.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
    end)

    -- Store container
    tabContainers[tab.name] = container
end

-- Example content for each tab (you can customize these)
local function createExampleContent()
    -- ESP Tab
    local espContainer = tabContainers["ESP"]
    createToggle(espContainer, "ESP", Config.ESP.Enabled, function(v) 
        Config.ESP.Enabled = v 
        print("ESP:", v) 
    end)
    createToggle(espContainer, "Team Check", Config.ESP.TeamCheck, function(v) 
        Config.ESP.TeamCheck = v 
        print("Team Check:", v) 
    end)
    createToggle(espContainer, "Show Outline", Config.ESP.ShowOutline, function(v) 
        Config.ESP.ShowOutline = v 
        print("Show Outline:", v) 
    end)
    createColorPicker(espContainer, "Fill Color", Config.ESP.FillColor, function(c) 
        Config.ESP.FillColor = c 
        print("Fill Color:", c) 
    end)
    createSlider(espContainer, "Fill Transparency", 0, 1, Config.ESP.FillTransparency, function(v) 
        Config.ESP.FillTransparency = v 
        print("Fill Transparency:", v) 
    end)

    -- Aimbot Tab
    local aimbotContainer = tabContainers["Aimbot"]
    createToggle(aimbotContainer, "Aimbot", Config.Aimbot.Enabled, function(v) 
        Config.Aimbot.Enabled = v 
        print("Aimbot:", v) 
    end)
    createToggle(aimbotContainer, "Team Check", Config.Aimbot.TeamCheck, function(v) 
        Config.Aimbot.TeamCheck = v 
        print("Team Check:", v) 
    end)
    createSlider(aimbotContainer, "FOV Radius", 10, 500, Config.Aimbot.FOV, function(v) 
        Config.Aimbot.FOV = v 
        print("FOV Radius:", v) 
    end)

    -- Fly Tab
    local flyContainer = tabContainers["Fly"]
    createToggle(flyContainer, "Fly", FlyConfig.Enabled, function(v) 
        FlyConfig.Enabled = v 
        if v then startFly() else stopFly() end
        print("Fly:", v) 
    end)
    createSlider(flyContainer, "Fly Speed", 0.1, 10, FlyConfig.Speed, function(v) 
        FlyConfig.Speed = v 
        print("Fly Speed:", v) 
    end)

    -- NoClip Tab
    local noClipContainer = tabContainers["NoClip"]
    createToggle(noClipContainer, "NoClip", NoClipConfig.Enabled, function(v) 
        NoClipConfig.Enabled = v 
        if v then startNoClip() else stopNoClip() end
        print("NoClip:", v) 
    end)
    createButton(noClipContainer, "Force NoClip Toggle", function() 
        if isNoClipping then
            stopNoClip()
        else
            startNoClip()
        end
        print("Force NoClip Toggle clicked") 
    end)

    -- Speed Tab
    local speedContainer = tabContainers["Speed"]
    createToggle(speedContainer, "SpeedHack", SpeedHackConfig.Enabled, function(v) 
        SpeedHackConfig.Enabled = v 
        if v then startSpeedHack() else stopSpeedHack() end
        print("SpeedHack:", v) 
    end)
    createSlider(speedContainer, "SpeedHack Speed", 0.1, 10, SpeedHackConfig.Speed, function(v) 
        SpeedHackConfig.Speed = v 
        print("SpeedHack Speed:", v) 
    end)

    -- Jump Tab
    local jumpContainer = tabContainers["Jump"]
    createToggle(jumpContainer, "Long Jump", LongJumpConfig.Enabled, function(v) 
        LongJumpConfig.Enabled = v 
        if v then startLongJump() else stopLongJump() end
        print("Long Jump:", v) 
    end)
    createToggle(jumpContainer, "Infinite Jump", InfiniteJumpConfig.Enabled, function(v) 
        InfiniteJumpConfig.Enabled = v 
        if v then startInfiniteJump() else stopInfiniteJump() end
        print("Infinite Jump:", v) 
    end)
    createSlider(jumpContainer, "Jump Power", 50, 500, LongJumpConfig.JumpPower, function(v) 
        LongJumpConfig.JumpPower = v 
        print("Jump Power:", v) 
    end)

    -- YBA Tab
    local ybaContainer = tabContainers["YBA"]
    createToggle(ybaContainer, "Stand Range Hack", YBAConfig.Enabled, function(v) 
        YBAConfig.Enabled = v 
        if v then startYBA() else stopYBA() end
        print("Stand Range Hack:", v) 
    end)
    createToggle(ybaContainer, "Underground Flight", false, function(v) 
        if v then startUndergroundControl() else stopUndergroundControl() end
        print("Underground Flight:", v) 
    end)
    createToggle(ybaContainer, "Item ESP", YBAConfig.ItemESP.Enabled, function(v) 
        YBAConfig.ItemESP.Enabled = v 
        if v then startItemESP() else stopItemESP() end
        print("Item ESP:", v) 
    end)

    -- Teleport Tab
    local teleportContainer = tabContainers["Teleport"]
    createToggle(teleportContainer, "Teleport", TeleportConfig.Enabled, function(v) 
        TeleportConfig.Enabled = v 
        if v and TeleportConfig.TargetPlayer then
            startTeleport()
        else
            stopTeleport()
        end
        print("Teleport:", v) 
    end)
    createButton(teleportContainer, "Start Teleport", function() 
        if TeleportConfig.TargetPlayer then
            startTeleport()
            TeleportConfig.Enabled = true
        else
            print("Select player first!")
        end
        print("Start Teleport clicked") 
    end)
    createButton(teleportContainer, "Stop Teleport", function() 
        stopTeleport()
        TeleportConfig.Enabled = false
        print("Stop Teleport clicked") 
    end)

    -- Settings Tab
    local settingsContainer = tabContainers["Settings"]
    createButton(settingsContainer, "Update Player List", function() 
        updatePlayerList()
        print("Update Player List clicked") 
    end)
    sectionHeader(settingsContainer, "Hotkeys")
    createButton(settingsContainer, "ESP Hotkey: [" .. (Config.ESP.ToggleKey and tostring(Config.ESP.ToggleKey.Name) or "None") .. "]", function() 
        print("ESP Hotkey clicked") 
    end)
    createButton(settingsContainer, "Aimbot Hotkey: [" .. (Config.Aimbot.ToggleKey and tostring(Config.Aimbot.ToggleKey.Name) or "None") .. "]", function() 
        print("Aimbot Hotkey clicked") 
    end)
end

-- Create example content
createExampleContent()

-- Return the main GUI and containers for external use
local guiCallbacks = {}
return {
    Gui = FrostwareGui,
    MainFrame = mainFrame,
    TabContainers = tabContainers,
    TabFrames = tabFrames,
    TabButtons = tabButtons,
    setMenuVisible = setMenuVisible,
    guiCallbacks = guiCallbacks
}
