if not game:IsLoaded() then game.Loaded:Wait() end


local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")


local Config = {
    ESP = {
        Enabled     = true,
        TeamCheck   = false,
        ShowOutline = true,
        ShowLines   = false,
        Rainbow     = false,
        FillColor   = Color3.fromRGB(255,255,255),
        OutlineColor= Color3.fromRGB(255,255,255),
        TextColor   = Color3.fromRGB(255,255,255),
        LineColor   = Color3.fromRGB(255,255,255),
        FillTransparency    = 0.5,
        OutlineTransparency = 0,
        Font        = Enum.Font.SciFi,
        TeamColor   = Color3.fromRGB(0,255,0),
        EnemyColor  = Color3.fromRGB(255,0,0),
        ToggleKey   = nil,
    },
    Aimbot = {
        Enabled         = false,
        TeamCheck       = false,
        VisibilityCheck = true,
        FOV             = 150,
        ToggleKey       = nil,
        FOVColor        = Color3.fromRGB(255,128,128),
        FOVRainbow      = false,
    },
    MenuCollapsed = false,
}


local FlyConfig = {
    Enabled = false,
    Speed = 1,
    ToggleKey = nil,
}


local NoClipConfig = {
    Enabled = false,
    ToggleKey = nil,
    ForceToggleKey = nil,
}


local SpeedHackConfig = {
    Enabled = false,
    Speed = 1,
    ToggleKey = nil,
    UseJumpPower = false,
}

local LongJumpConfig = {
    Enabled = false,
    JumpPower = 150,
    ToggleKey = nil,
}

local InfiniteJumpConfig = {
    Enabled = false,
    JumpPower = 50,
    ToggleKey = nil,
}


local TeleportConfig = {
    Enabled = false,
    TargetPlayer = nil,
    OriginalPosition = nil,
    ToggleKey = nil,
    SelectedPlayerName = nil,
    UseStealthMode = true,
    TeleportSpeed = 2000,
    ReturnSpeed = 2400,
    BehindPlayerDistance = 2.6,
    StabilizationTime = 0.25,
    MaxSpeedResetTime = 2.0,
    SpeedResetThreshold = 50,
    InstantTurnSpeed = 600,
    SmoothingFactor = 0.2,
    MaxCorrectionSpeed = 180,
    StabilizationThreshold = 0.9,
}

local YBAConfig = {
    Enabled = false,
    ToggleKey = nil,
    StandRange = 100000,
    FreezePlayer = true,
    SwitchCamera = true,
    TransferControl = true,
    AutoFindStands = true,
    MaxStandDistance = 10000,
    CameraDistance = 15,
    CameraHeight = 5,
    StandControlSpeed = 1.0,
    StandControlSmoothing = 0.1,
    MouseSensitivity = 0.01,
    CameraSmoothing = 0.08,
    CameraFollowDistance = 20.2,
    CameraFollowHeight = 6.1,
    MouseLookSensitivity = 0.003,
    StandRotationSpeed = 0.05,
    UndergroundControl = {
        FlightSpeed = 50,
        AutoNoClip = true,
        OriginalPosition = nil,
    },
    ItemESP = {
        Enabled = false,
        ToggleKey = nil,
        MaxDistance = 1000,
        MaxRenderDistance = 5000,
        UpdateInterval = 0.3,
        ShowOutline = true,
        ShowText = true,
        ShowFill = true,
        FillColor = Color3.fromRGB(255, 215, 0),
        OutlineColor = Color3.fromRGB(255, 255, 0),
        TextColor = Color3.fromRGB(255, 255, 255),
        TextBackgroundColor = Color3.fromRGB(0, 0, 0),
        FillTransparency = 0.3,
        OutlineTransparency = 0.1,
        TextBackgroundTransparency = 0.3,
        TextSize = 10,
        DistanceTextSize = 9,
        Font = Enum.Font.GothamBold,
        Items = {
            ["Mysterious Arrow"] = true,
            ["Rokakaka"] = true,
            ["Pure Rokakaka"] = true,
            ["Diamond"] = true,
            ["Gold Coin"] = true,
            ["Steel Ball"] = true,
            ["Clackers"] = true,
            ["Caesar's Headband"] = true,
            ["Zeppeli's Hat"] = true,
            ["Zeppeli's Scarf"] = true,
            ["Ancient Scroll"] = true,
            ["Quinton's Glove"] = true,
            ["Stone Mask"] = true,
            ["Lucky Arrow"] = true,
            ["Lucky Stone Mask"] = true,
            ["Rib Cage of The Saint's Corpse"] = true,
            ["DIO's Diary"] = true,
        }
    }
}

local AntiTimeStopConfig = {
    Enabled = false,
    ToggleKey = nil,
    MovementSpeed = 1.5,
    JumpPower = 50,
    WalkSpeed = 16,
    AutoActivate = true,
    DetectionRange = 100,
    VisualEffect = true,
    SoundEffect = false,
    AntiFreeze = true,
    TimeStopBypass = true,
    MovementOverride = true,
    DisableOnAttack = true,
    ServerSync = true,
}

local isFlying = false
local flyConnections = {}
local originalGravity = workspace.Gravity

local isNoClipping = false
local noClipConnections = {}

local isSpeedHacking = false
local speedHackConnections = {}
local originalWalkSpeed = 16
local originalJumpPower = 50

local isLongJumping = false
local longJumpConnections = {}
local originalLongJumpPower = 50

local isUndergroundControlEnabled = false
local undergroundControlConnections = {}
local controlledStandForUnderground = nil
local isShiftPressed = false

local isInfiniteJumping = false
local infiniteJumpConnections = {}
local lastJumpTime = 0

local isTeleporting = false
local teleportConnections = {}
local playerSelectionWindow = nil
local lastTeleportPosition = nil
local stabilizationStartTime = nil
local isStabilizing = false
local speedResetTimer = 0
local lastSpeedCheck = tick()
local lastBehindDistance = 0
local lastUpdateTime = tick()

local isYBAEnabled = false
local ybaConnections = {}
local originalPlayerPosition = nil
local originalPlayerCFrame = nil
local originalCameraCFrame = nil
local controlledStand = nil
local standControlConnections = {}
local originalGravity = workspace.Gravity
local originalYBAWalkSpeed = 16
local originalYBAJumpPower = 50

local isAntiTimeStopEnabled = false
local antiTimeStopConnections = {}
local originalAntiTimeStopWalkSpeed = 16
local originalAntiTimeStopJumpPower = 50
local timeStopDetected = false
local timeStopStartTime = 0
local timeStopDuration = 0
local antiTimeStopEffect = nil

local isStandControlActive = false
local currentControlledStand = nil
local standCameraConnections = {}
local originalStandCameraCFrame = nil
local standControlActive = false

local freeCameraActive = false
local freeCameraConnections = {}
local freeCameraRotation = Vector2.new(0, 0)
local freeCameraDistance = 10
local freeCameraHeight = 5
local freeCameraTarget = nil
local freeCameraLastMousePos = Vector2.new(0, 0)
local lastCameraUpdate = nil

local itemESPConnections = {}
local itemESPElements = {}
local itemESPEnabled = false

-- Player ESP variables
local playerESPConnections = {}
local playerESPElements = {}
local userStandESPEnabled = false
local userStyleESPEnabled = false

-- Старые переменные камеры больше не нужны - используется YBAFreeCamera

-- Player ESP Functions
local function getPlayerStand(player)
    if not player or not player.Character then return nil end
    local playersFolder = game:FindFirstChild("players") or game:FindFirstChild("Players")
    if not playersFolder then return nil end
    local playerFolder = playersFolder:FindFirstChild(player.Name)
    if not playerFolder then return nil end
    local playerStatsFolder = playerFolder:FindFirstChild("playerstats") or playerFolder:FindFirstChild("PlayerStats")
    if not playerStatsFolder then return nil end
    local standFile = playerStatsFolder:FindFirstChild("stand") or playerStatsFolder:FindFirstChild("Stand")
    if not standFile then return nil end
    return standFile.Value
end

local function getPlayerStyle(player)
    if not player or not player.Character then return nil end
    local playersFolder = game:FindFirstChild("players") or game:FindFirstChild("Players")
    if not playersFolder then return nil end
    local playerFolder = playersFolder:FindFirstChild(player.Name)
    if not playerFolder then return nil end
    local playerStatsFolder = playerFolder:FindFirstChild("playerstats") or playerFolder:FindFirstChild("PlayerStats")
    if not playerStatsFolder then return nil end
    local specFile = playerStatsFolder:FindFirstChild("spec") or playerStatsFolder:FindFirstChild("Spec")
    if not specFile then return nil end
    return specFile.Value
end

-- GUI элементы
local teleportBtn = nil

local MenuSettings = {
    BlurEnabled = true,
    AccentColor = Color3.fromRGB(0, 150, 0),
    Language = "English", -- "English" или "Russian"
}

local Languages = {
    English = {
        MainFunctions = "MAIN FUNCTIONS",
        YBAHacks = "YBA HACKS",
        MenuSettings = "MENU SETTINGS",
        
        BlurEffect = "Blur Effect",
        AccentColor = "Accent Color", 
        Language = "Language",
        
        ESP = "ESP",
        TeamCheck = "Team Check",
        ShowOutline = "Show Outline",
        ShowLines = "Show Lines",
        RainbowColors = "Rainbow Colors",
        Aimbot = "Aimbot",
        VisibilityCheck = "Visibility Check",
        FOVRainbow = "FOV Rainbow",
        Fly = "Fly",
        SpeedHack = "SpeedHack",
        UseJumpPowerMethod = "Use JumpPower Method",
        LongJump = "Long Jump",
        InfiniteJump = "Infinite Jump",
        ForceNoClip = "Force NoClip",
        TeleportToPlayer = "Teleport to Player",
        SelectedPlayer = "Selected Player",
        SelectPlayerForTeleport = "Select Player for Teleport",
        YBAStandRange = "Stand Range Hacks",
        StandSpeed = "Stand Speed",
        ItemESP = "Item ESP",
        AntiTimeStop = "ANTI TIME STOP",
        StartTeleport = "START TELEPORT",
        StopTeleport = "STOP TELEPORT",
        -- YBA Items
        MysteriousArrow = "Mysterious Arrow",
        Rokakaka = "Rokakaka",
        PureRokakaka = "Pure Rokakaka",
        Diamond = "Diamond",
        GoldCoin = "Gold Coin",
        SteelBall = "Steel Ball",
        Clackers = "Clackers",
        CaesarsHeadband = "Caesar's Headband",
        ZeppeliHat = "Zeppeli's Hat",
        ZeppeliScarf = "Zeppeli's Scarf",
        QuintonsGlove = "Quinton's Glove",
        StoneMask = "Stone Mask",
        RibCage = "Rib Cage of The Saint's Corpse",
        AncientScroll = "Ancient Scroll",
        DiosDiary = "DIO's Diary",
        LuckyStoneMask = "Lucky Stone Mask",
        LuckyArrow = "Lucky Arrow",
    },
    Russian = {
        MainFunctions = "ОСНОВНЫЕ ФУНКЦИИ",
        YBAHacks = "YBA ХАКИ",
        MenuSettings = "НАСТРОЙКИ МЕНЮ",
        
        BlurEffect = "Эффект размытия",
        AccentColor = "Цвет акцента",
        Language = "Язык",
        
        ESP = "ESP",
        TeamCheck = "Проверка команды",
        ShowOutline = "Показать обводку",
        ShowLines = "Показать линии",
        RainbowColors = "Радужные цвета",
        Aimbot = "Аимбот",
        VisibilityCheck = "Проверка видимости",
        FOVRainbow = "Радужный FOV",
        Fly = "Полет",
        SpeedHack = "Ускорение",
        UseJumpPowerMethod = "Использовать метод JumpPower",
        LongJump = "Длинный прыжок",
        InfiniteJump = "Бесконечный прыжок",
        ForceNoClip = "Принудительный NoClip",
        TeleportToPlayer = "Телепорт к игроку",
        SelectedPlayer = "Выбранный игрок",
        SelectPlayerForTeleport = "Выбрать игрока для телепорта",
        YBAStandRange = "Хаки дальности стенда",
        StandSpeed = "Скорость стенда",
        ItemESP = "ESP предметов",
        AntiTimeStop = "АНТИ ОСТАНОВКА ВРЕМЕНИ",
        StartTeleport = "НАЧАТЬ ТЕЛЕПОРТ",
        StopTeleport = "ОСТАНОВИТЬ ТЕЛЕПОРТ",
        -- YBA Items
        MysteriousArrow = "Таинственная стрела",
        Rokakaka = "Рокакака",
        PureRokakaka = "Чистая рокакака",
        Diamond = "Алмаз",
        GoldCoin = "Золотая монета",
        SteelBall = "Стальной шар",
        Clackers = "Клакеры",
        CaesarsHeadband = "Повязка Цезаря",
        ZeppeliHat = "Шляпа Цеппели",
        ZeppeliScarf = "Шарф Цеппели",
        QuintonsGlove = "Перчатка Квинтона",
        StoneMask = "Каменная маска",
        RibCage = "Ребро святого корпуса",
        AncientScroll = "Древний свиток",
        DiosDiary = "Дневник ДИО",
        LuckyStoneMask = "Счастливая каменная маска",
        LuckyArrow = "Счастливая стрела",
    }
}

-- Функция получения текста на текущем языке
local function getText(key)
    return Languages[MenuSettings.Language][key] or Languages.English[key] or key
end

local function updateBlurEffect()
    if glassEffect then
        glassEffect.Visible = MenuSettings.BlurEnabled
    end
    if glassBorder then
        glassBorder.Transparency = MenuSettings.BlurEnabled and 0.7 or 1
    end
    if rightPanel then
        rightPanel.BackgroundTransparency = MenuSettings.BlurEnabled and 0.15 or 0.05
    end
end

local function updateAccentColor()
    local reopenButton = screenGui:FindFirstChild("ReopenButton")
    if reopenButton then
        reopenButton.BackgroundColor3 = MenuSettings.AccentColor
    end
    
    for _, child in pairs(functionsContainer:GetChildren()) do
        if child:IsA("Frame") then
            local sliderBack = child:FindFirstChild("SliderBack")
            if sliderBack and sliderBack.BackgroundColor3 ~= Color3.fromRGB(100, 100, 100) then
                sliderBack.BackgroundColor3 = MenuSettings.AccentColor
            end
        end
    end
    
    for _, btn in pairs(leftPanel:GetChildren()) do
        if btn:IsA("TextButton") and btn.BackgroundColor3 == Color3.fromRGB(40, 40, 45) then
            local highlight = btn:FindFirstChild("Highlight")
            if highlight then
                highlight.BackgroundColor3 = MenuSettings.AccentColor
            end
        end
    end
end

local function updateAllTexts()
    if contentTitle then
        if selectedTab == "Main" then
            contentTitle.Text = getText("MainFunctions")
        elseif selectedTab == "YBA Hacks" then
            contentTitle.Text = getText("YBAHacks")
        elseif selectedTab == "Settings" then
            contentTitle.Text = getText("MenuSettings")
        end
    end
    
    showContent(selectedTab)
end

local YBAFreeCamera = {} do
    local RunService = game:GetService("RunService")
    local UserInputService = game:GetService("UserInputService")
    local Camera = workspace.CurrentCamera
    local Players = game:GetService("Players")
    local TweenService = game:GetService("TweenService")

    local fcRunning = false
    local targetStand = nil
    local cameraConnection = nil
    local standControlConnection = nil
    local originalCameraSubject = nil
    local originalCameraType = nil
    
    -- Камера переменные для плавности
    local cameraRotation = Vector2.new(0, 0)
    local cameraDistance = 15
    local targetCameraPosition = Vector3.new(0, 0, 0)
    local currentCameraPosition = Vector3.new(0, 0, 0)

    -- ПЛАВНОЕ управление стендом
    local function updateStand()
        if not targetStand or not targetStand.Root then return end
        
        local standRoot = targetStand.Root
        
        -- Управление стендом WASD
        local moveX = 0
        local moveZ = 0  
        local moveY = 0
        
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then moveZ = -1 end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then moveZ = 1 end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then moveX = -1 end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then moveX = 1 end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then moveY = 1 end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then moveY = -1 end
        
        -- Двигаем стенд ПЛАВНО
        local bodyVelocity = standRoot:FindFirstChild("BodyVelocity")
        if not bodyVelocity then
            bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
            bodyVelocity.Parent = standRoot
        end
        
        -- Убираем BodyPosition - он блокирует стенд
        
        if moveX ~= 0 or moveZ ~= 0 or moveY ~= 0 then
            -- Движение относительно камеры БЕЗ рывков
            local camera = workspace.CurrentCamera
            local cameraCFrame = camera.CFrame
            
            -- Вектор движения относительно камеры
            local moveVector = Vector3.new(0, 0, 0)
            if moveX ~= 0 then
                moveVector = moveVector + (cameraCFrame.RightVector * moveX)
            end
            if moveZ ~= 0 then
                moveVector = moveVector + (cameraCFrame.LookVector * -moveZ)
            end
            if moveY ~= 0 then
                moveVector = moveVector + (Vector3.new(0, 1, 0) * moveY)
            end
            
            local speed = 35
            if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then speed = speed * 2 end
            
            -- Нормализуем вектор и применяем скорость
            if moveVector.Magnitude > 0 then
                moveVector = moveVector.Unit * speed
            end
            
            -- ПЛАВНОЕ ускорение
            local currentVel = bodyVelocity.Velocity
            local lerpedVel = currentVel:Lerp(moveVector, 0.15)
            
            bodyVelocity.Velocity = lerpedVel
        else
            -- ПЛАВНОЕ торможение
            local currentVel = bodyVelocity.Velocity
            bodyVelocity.Velocity = currentVel:Lerp(Vector3.new(0, 0, 0), 0.25)
        end
    end

    -- НОВАЯ система камеры без anchor
    local function updateCamera()
        if not targetStand or not targetStand.Root then return end
        
        local standRoot = targetStand.Root
        local standPosition = standRoot.Position
        
        -- Вычисляем целевую позицию камеры
        local heightOffset = Vector3.new(0, 5, 0)
        local focusPoint = standPosition + heightOffset
        
        -- Камера вращается вокруг стенда
        local rotationCFrame = CFrame.Angles(0, cameraRotation.Y, 0) * CFrame.Angles(cameraRotation.X, 0, 0)
        targetCameraPosition = focusPoint + rotationCFrame:VectorToWorldSpace(Vector3.new(0, 0, cameraDistance))
        
        -- ПЛАВНАЯ интерполяция позиции камеры
        currentCameraPosition = currentCameraPosition:Lerp(targetCameraPosition, 0.08) -- МЕНЬШЕ рывков!
        
        -- Устанавливаем камеру БЕЗ агрессивной коррекции
        Camera.CFrame = CFrame.new(currentCameraPosition, focusPoint)
    end

    function YBAFreeCamera.Start(stand)
        if fcRunning then YBAFreeCamera.Stop() end
        if not stand or not stand.Root then 
            print("YBA: Ошибка - стенд не найден") 
            return false 
        end

        targetStand = stand
        print("YBA: Запускаем плавную камеру для стенда:", stand.Name)

        -- Сохраняем настройки ОДИН РАЗ
        if not originalCameraSubject then
            originalCameraSubject = Camera.CameraSubject
            originalCameraType = Camera.CameraType
        end
        
        -- Инициализация позиции камеры
        local standPos = stand.Root.Position
        currentCameraPosition = Camera.CFrame.Position
        targetCameraPosition = standPos + Vector3.new(0, 8, 15)
        
        -- ПЛАВНЫЙ переход к Scriptable камере
        Camera.CameraType = Enum.CameraType.Scriptable
        
        -- Плавная анимация к стенду
        local tweenInfo = TweenInfo.new(0.8, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
        local tween = TweenService:Create(Camera, tweenInfo, {
            CFrame = CFrame.new(targetCameraPosition, standPos + Vector3.new(0, 3, 0))
        })
        tween:Play()

        -- Отключаем автоповорот игрока
        local player = Players.LocalPlayer
        if player and player.Character then
            local humanoid = player.Character:FindFirstChild("Humanoid")
            if humanoid then humanoid.AutoRotate = false end
        end

        -- Управление мышью для камеры
        local rotating = false
        local mouseSensitivity = 0.003
        
        local mouseBeganConnection = UserInputService.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton2 then
                rotating = true
                UserInputService.MouseBehavior = Enum.MouseBehavior.LockCurrentPosition
            end
        end)
        
        local mouseEndedConnection = UserInputService.InputEnded:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton2 then
                rotating = false
                UserInputService.MouseBehavior = Enum.MouseBehavior.Default
            end
        end)
        
        local mouseMovedConnection = UserInputService.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement and rotating then
                local deltaX = -input.Delta.x * mouseSensitivity
                local deltaY = -input.Delta.y * mouseSensitivity
                
                cameraRotation = cameraRotation + Vector2.new(deltaY, deltaX)
                cameraRotation = Vector2.new(
                    math.clamp(cameraRotation.X, -math.rad(85), math.rad(85)),
                    cameraRotation.Y % (2 * math.pi)
                )
            elseif input.UserInputType == Enum.UserInputType.MouseWheel then
                cameraDistance = math.clamp(cameraDistance - input.Position.Z * 2, 5, 50)
            end
        end)

        -- ПЛАВНЫЕ соединения
        standControlConnection = RunService.Heartbeat:Connect(updateStand)
        cameraConnection = RunService.RenderStepped:Connect(updateCamera)
        
        -- Сохраняем соединения для отключения
        YBAFreeCamera.mouseConnections = {mouseBeganConnection, mouseEndedConnection, mouseMovedConnection}

        fcRunning = true
        print("YBA: Плавная камера активирована - ПКМ для вращения, колесико для зума")
        return true
    end

    function YBAFreeCamera.Stop()
        if not fcRunning then return end
        print("YBA: Отключаем плавную камеру")

        -- Останавливаем стенд ПЛАВНО
        if targetStand and targetStand.Root then
            local bodyVelocity = targetStand.Root:FindFirstChild("BodyVelocity")
            if bodyVelocity then 
                -- Плавная остановка
                bodyVelocity.Velocity = Vector3.new(0, 0, 0)
                game:GetService("Debris"):AddItem(bodyVelocity, 1)
            end
            
            -- BodyPosition больше не используется
        end

        -- Отключаем соединения
        if standControlConnection then standControlConnection:Disconnect() standControlConnection = nil end
        if cameraConnection then cameraConnection:Disconnect() cameraConnection = nil end
        
        -- Отключаем мышиные соединения
        if YBAFreeCamera.mouseConnections then
            for _, connection in pairs(YBAFreeCamera.mouseConnections) do
                if connection then connection:Disconnect() end
            end
            YBAFreeCamera.mouseConnections = nil
        end
        UserInputService.MouseBehavior = Enum.MouseBehavior.Default

        -- ПЛАВНОЕ возвращение камеры
        local player = Players.LocalPlayer
        if player and player.Character then
            local humanoid = player.Character:FindFirstChild("Humanoid")
            if humanoid then
                -- Плавная анимация возврата к игроку
                local playerPos = player.Character.HumanoidRootPart.Position
                local returnPos = playerPos + Vector3.new(0, 5, 10)
                
                local tweenInfo = TweenInfo.new(0.6, Enum.EasingStyle.Quart, Enum.EasingDirection.Out)
                local returnTween = TweenService:Create(Camera, tweenInfo, {
                    CFrame = CFrame.new(returnPos, playerPos)
                })
                
                returnTween:Play()
                returnTween.Completed:Connect(function()
                    Camera.CameraType = Enum.CameraType.Custom
                    Camera.CameraSubject = humanoid
                end)
                
                humanoid.AutoRotate = true
            end
        end

        -- Сброс
        targetStand = nil
        fcRunning = false
        originalCameraSubject = nil
        originalCameraType = nil

        print("YBA: Плавная камера отключена")
    end

    function YBAFreeCamera.Toggle(stand)
        if fcRunning then
            YBAFreeCamera.Stop()
            return false
        else
            return YBAFreeCamera.Start(stand)
        end
    end
    
    function YBAFreeCamera.IsRunning()
        return fcRunning
    end
end

local function startFly()
    local plr = Players.LocalPlayer
    local char = plr.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    local root = char and char:FindFirstChild("HumanoidRootPart")
    
    if not hum or not root then return end
    
    isFlying = true
    
    local flyOriginalJumpPower = hum.JumpPower
    local flyOriginalJumpHeight = hum.JumpHeight
    local flyOriginalGravity = workspace.Gravity
    local flyOriginalHipHeight = hum.HipHeight
    
    hum.JumpPower = 0
    hum.JumpHeight = 0
    workspace.Gravity = 0
    hum.HipHeight = 0
    
    local ctrl = {f = 0, b = 0, l = 0, r = 0, u = 0, d = 0}
    
    local inputDown = UserInputService.InputBegan:Connect(function(input, gp)
        if gp then return end
        if input.KeyCode == Enum.KeyCode.W then ctrl.f = 1
        elseif input.KeyCode == Enum.KeyCode.S then ctrl.b = -1
        elseif input.KeyCode == Enum.KeyCode.A then ctrl.l = -1
        elseif input.KeyCode == Enum.KeyCode.D then ctrl.r = 1
        elseif input.KeyCode == Enum.KeyCode.Space then ctrl.u = 1
        elseif input.KeyCode == Enum.KeyCode.LeftControl then ctrl.d = -1 end
    end)
    
    local inputUp = UserInputService.InputEnded:Connect(function(input, gp)
        if gp then return end
        if input.KeyCode == Enum.KeyCode.W then ctrl.f = 0
        elseif input.KeyCode == Enum.KeyCode.S then ctrl.b = 0
        elseif input.KeyCode == Enum.KeyCode.A then ctrl.l = 0
        elseif input.KeyCode == Enum.KeyCode.D then ctrl.r = 0
        elseif input.KeyCode == Enum.KeyCode.Space then ctrl.u = 0
        elseif input.KeyCode == Enum.KeyCode.LeftControl then ctrl.d = 0 end
    end)
    
    local renderConnection = RunService.RenderStepped:Connect(function()
        if not isFlying or not char or not char:FindFirstChild("Humanoid") or not root then
            if hum then
                hum.JumpPower = flyOriginalJumpPower
                hum.JumpHeight = flyOriginalJumpHeight
                hum.HipHeight = flyOriginalHipHeight
            end
            if not isNoClipping then
                workspace.Gravity = flyOriginalGravity
            end
            
            inputDown:Disconnect()
            inputUp:Disconnect()
            renderConnection:Disconnect()
            return
        end
        
        local cam = workspace.CurrentCamera
        if not cam then return end
        
        
        local forward = cam.CFrame.lookVector
        local right = cam.CFrame.rightVector
        local up = Vector3.new(0, 1, 0)
        
        local moveVector = Vector3.new(0, 0, 0)
        moveVector = moveVector + (forward * (ctrl.f + ctrl.b))
        moveVector = moveVector + (right * (ctrl.r + ctrl.l))
        moveVector = moveVector + (up * (ctrl.u + ctrl.d))
        
        if moveVector.Magnitude > 0 then
            moveVector = moveVector.Unit * (FlyConfig.Speed * 10)
            local bv = root:FindFirstChild("BodyVelocity")
            if not bv then
                bv = Instance.new("BodyVelocity", root)
                bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
            end
            bv.Velocity = moveVector
        else
            local bv = root:FindFirstChild("BodyVelocity")
            if bv then
                bv.Velocity = Vector3.new(0, 0, 0)
            end
        end
    end)
    
    table.insert(flyConnections, inputDown)
    table.insert(flyConnections, inputUp)
    table.insert(flyConnections, renderConnection)
end

local function stopFly()
    isFlying = false
    
    local char = Players.LocalPlayer.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    local root = char and char:FindFirstChild("HumanoidRootPart")
    
    if hum then
        
        hum.JumpPower = 50
        hum.JumpHeight = 7.2
        hum.HipHeight = 2
    end
    
    workspace.Gravity = 196.2
    
    
    if root then
        local bv = root:FindFirstChild("BodyVelocity")
        if bv then
            bv:Destroy()
        end
    end
    
    
    for _, connection in ipairs(flyConnections) do
        if connection then
            pcall(function() connection:Disconnect() end)
        end
    end
    flyConnections = {}
end

-- Anti Time Stop Functions
local function detectTimeStop()
    local players = Players:GetPlayers()
    local localPlayer = Players.LocalPlayer
    local localChar = localPlayer.Character
    local localRoot = localChar and localChar:FindFirstChild("HumanoidRootPart")
    
    if not localRoot then return false end
    
    for _, player in pairs(players) do
        if player ~= localPlayer then
            local char = player.Character
            if char then
                local stand = char:FindFirstChild("Stand")
                if stand then
                    local standAbilities = stand:FindFirstChild("Abilities")
                    if standAbilities then
                        for _, ability in pairs(standAbilities:GetChildren()) do
                            local abilityName = ability.Name:lower()
                            if abilityName:find("time") or 
                               abilityName:find("stop") or
                               abilityName:find("za warudo") or
                               abilityName:find("the world") or
                               abilityName:find("timestop") or
                               abilityName:find("time_stop") or
                               abilityName:find("za") or
                               abilityName:find("warudo") then
                                return true, player, ability
                            end
                        end
                    end
                    
                    local standName = stand.Name:lower()
                    if standName:find("the world") or 
                       standName:find("za warudo") or
                       standName:find("dio") or
                       standName:find("jotaro") or
                       standName:find("star platinum") or
                       standName:find("the world") then
                        return true, player, stand
                    end
                end
                
                for _, part in pairs(char:GetDescendants()) do
                    if part:IsA("BasePart") then
                        local partName = part.Name:lower()
                        if partName:find("time") or 
                           partName:find("stop") or
                           partName:find("freeze") or
                           partName:find("timestop") then
                            return true, player, part
                        end
                    end
                end
            end
        end
    end
    
    if localChar then
        local hum = localChar:FindFirstChildOfClass("Humanoid")
        if hum then
            for _, part in pairs(localChar:GetDescendants()) do
                if part:IsA("BasePart") and part.Anchored then
                    return true, nil, nil
                end
            end
        end
    end
    
    return false
end

local function createAntiTimeStopEffect()
    if not AntiTimeStopConfig.VisualEffect then return end
    
    local char = Players.LocalPlayer.Character
    if not char then return end
    
    local highlight = Instance.new("Highlight")
    highlight.Name = "AntiTimeStopEffect"
    highlight.FillColor = Color3.fromRGB(0, 255, 0)
    highlight.OutlineColor = Color3.fromRGB(0, 200, 0)
    highlight.FillTransparency = 0.3
    highlight.OutlineTransparency = 0
    highlight.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
    highlight.Parent = char
    
    antiTimeStopEffect = highlight
end

local function removeAntiTimeStopEffect()
    if antiTimeStopEffect then
        antiTimeStopEffect:Destroy()
        antiTimeStopEffect = nil
    end
end

local function startAntiTimeStop()
    local plr = Players.LocalPlayer
    local char = plr.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    local root = char and char:FindFirstChild("HumanoidRootPart")
    
    if not hum or not root then return end
    
    isAntiTimeStopEnabled = true
    timeStopDetected = false
    
    originalAntiTimeStopWalkSpeed = hum.WalkSpeed
    originalAntiTimeStopJumpPower = hum.JumpPower
    
    hum.WalkSpeed = AntiTimeStopConfig.WalkSpeed * AntiTimeStopConfig.MovementSpeed
    hum.JumpPower = AntiTimeStopConfig.JumpPower
    
    createAntiTimeStopEffect()
    
    local antiFreezeLoop = RunService.Heartbeat:Connect(function()
        if not isAntiTimeStopEnabled or not char or not char.Parent then
            return
        end
        
        for _, part in pairs(char:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Anchored = false
                part.CanCollide = true
            end
        end
        
        if hum then
            hum.WalkSpeed = AntiTimeStopConfig.WalkSpeed * AntiTimeStopConfig.MovementSpeed
            hum.JumpPower = AntiTimeStopConfig.JumpPower
            hum.AutoRotate = true
            hum.AutoJumpEnabled = true
        end
        
        if AntiTimeStopConfig.AutoActivate then
            local isFrozen = false
            for _, part in pairs(char:GetDescendants()) do
                if part:IsA("BasePart") and part.Anchored then
                    isFrozen = true
                    break
                end
            end
            
            if isFrozen and not timeStopDetected then
                timeStopDetected = true
                timeStopStartTime = tick()
                print("Auto-detected freeze! Activating Anti Time Stop...")
                
                for _, part in pairs(char:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.Anchored = false
                        part.CanCollide = true
                    end
                end
            end
        end
    end)
    
    local attackDetection = RunService.Heartbeat:Connect(function()
        if not isAntiTimeStopEnabled or not timeStopDetected or not char or not char.Parent then
            return
        end
        
        local isAttacking = false
        
        if UserInputService:IsKeyDown(Enum.KeyCode.F) or 
           UserInputService:IsKeyDown(Enum.KeyCode.E) or
           UserInputService:IsKeyDown(Enum.KeyCode.R) or
           UserInputService:IsKeyDown(Enum.KeyCode.T) or
           UserInputService:IsKeyDown(Enum.KeyCode.Y) or
           UserInputService:IsKeyDown(Enum.KeyCode.Q) then
            isAttacking = true
        end
        
        if isAttacking and antiTimeStopEffect then
            antiTimeStopEffect.FillColor = Color3.fromRGB(255, 255, 0)
        else
            if antiTimeStopEffect then
                antiTimeStopEffect.FillColor = Color3.fromRGB(0, 255, 0)
            end
        end
    end)
    
    local timeStopDetection = RunService.Heartbeat:Connect(function()
        if not isAntiTimeStopEnabled or not char or not char.Parent then
            return
        end
        
        local detected, timeStopPlayer, timeStopAbility = detectTimeStop()
        
        if detected and not timeStopDetected then
            timeStopDetected = true
            timeStopStartTime = tick()
            
            if AntiTimeStopConfig.AntiFreeze then
                for _, part in pairs(char:GetDescendants()) do
                    if part:IsA("BasePart") then
                        part.Anchored = false
                        part.CanCollide = true
                    end
                end
            end
            
            if AntiTimeStopConfig.MovementOverride then
                local bv = root:FindFirstChild("AntiTimeStopBodyVelocity")
                if not bv then
                    bv = Instance.new("BodyVelocity", root)
                    bv.Name = "AntiTimeStopBodyVelocity"
                    bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
                end
                
                local bg = root:FindFirstChild("AntiTimeStopBodyGyro")
                if not bg then
                    bg = Instance.new("BodyGyro", root)
                    bg.Name = "AntiTimeStopBodyGyro"
                    bg.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
                    bg.D = 1000
                    bg.P = 8000
                end
            end
            
            if AntiTimeStopConfig.SoundEffect then
                local sound = Instance.new("Sound", root)
                sound.SoundId = "rbxasset://sounds/electronicpingshort.wav"
                sound.Volume = 0.5
                sound:Play()
                game:GetService("Debris"):AddItem(sound, 2)
            end
            
        elseif not detected and timeStopDetected then
            timeStopDetected = false
            timeStopDuration = tick() - timeStopStartTime
            
            hum.WalkSpeed = originalAntiTimeStopWalkSpeed
            hum.JumpPower = originalAntiTimeStopJumpPower
            
            local bv = root:FindFirstChild("AntiTimeStopBodyVelocity")
            if bv then
                bv:Destroy()
            end
            
            local bg = root:FindFirstChild("AntiTimeStopBodyGyro")
            if bg then
                bg:Destroy()
            end
            
            removeAntiTimeStopEffect()
        end
    end)
    
    local movementOverride = RunService.Heartbeat:Connect(function()
        if not isAntiTimeStopEnabled or not timeStopDetected or not char or not char.Parent then
            return
        end
        
        if AntiTimeStopConfig.MovementOverride then
            local bv = root:FindFirstChild("AntiTimeStopBodyVelocity")
            local bg = root:FindFirstChild("AntiTimeStopBodyGyro")
            
            if bv and bg then
                local moveVector = Vector3.new(0, 0, 0)
                local cam = workspace.CurrentCamera
                
                if UserInputService:IsKeyDown(Enum.KeyCode.W) then
                    moveVector = moveVector + cam.CFrame.lookVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.S) then
                    moveVector = moveVector - cam.CFrame.lookVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.A) then
                    moveVector = moveVector - cam.CFrame.rightVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.D) then
                    moveVector = moveVector + cam.CFrame.rightVector
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
                    moveVector = moveVector + Vector3.new(0, 1, 0)
                end
                if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
                    moveVector = moveVector - Vector3.new(0, 1, 0)
                end
                
                if moveVector.Magnitude > 0 then
                    moveVector = moveVector.Unit * (AntiTimeStopConfig.WalkSpeed * AntiTimeStopConfig.MovementSpeed)
                    bv.Velocity = moveVector
                    
                    bg.CFrame = cam.CFrame
                    
                    if AntiTimeStopConfig.ServerSync then
                        local newCFrame = root.CFrame + (moveVector * 0.016)
                        root.CFrame = newCFrame
                        
                        local remoteEvent = game:GetService("ReplicatedStorage"):FindFirstChild("AntiTimeStopMovement")
                        if not remoteEvent then
                            remoteEvent = Instance.new("RemoteEvent")
                            remoteEvent.Name = "AntiTimeStopMovement"
                            remoteEvent.Parent = game:GetService("ReplicatedStorage")
                        end
                        
                        remoteEvent:FireServer(newCFrame)
                    end
                    
                    if AntiTimeStopConfig.VisualEffect and antiTimeStopEffect then
                        antiTimeStopEffect.FillColor = Color3.fromRGB(0, 255, 255)
                    end
                else
                    bv.Velocity = Vector3.new(0, 0, 0)
                    
                    if AntiTimeStopConfig.VisualEffect and antiTimeStopEffect then
                        antiTimeStopEffect.FillColor = Color3.fromRGB(0, 255, 0)
                    end
                end
            end
        end
    end)
    
    local damageProtection = char.Humanoid.Died:Connect(function()
    end)
    
    local healthChanged = hum.HealthChanged:Connect(function(health)
    end)
    
    table.insert(antiTimeStopConnections, antiFreezeLoop)
    table.insert(antiTimeStopConnections, attackDetection)
    table.insert(antiTimeStopConnections, timeStopDetection)
    table.insert(antiTimeStopConnections, movementOverride)
    table.insert(antiTimeStopConnections, damageProtection)
    table.insert(antiTimeStopConnections, healthChanged)
end

local function stopAntiTimeStop()
    isAntiTimeStopEnabled = false
    timeStopDetected = false
    
    local char = Players.LocalPlayer.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    local root = char and char:FindFirstChild("HumanoidRootPart")
    
    if hum then
        hum.WalkSpeed = originalAntiTimeStopWalkSpeed
        hum.JumpPower = originalAntiTimeStopJumpPower
        hum.AutoRotate = true
        hum.AutoJumpEnabled = true
    end
    
    if root then
        local bv = root:FindFirstChild("AntiTimeStopBodyVelocity")
        if bv then
            bv:Destroy()
        end
        
        local bg = root:FindFirstChild("AntiTimeStopBodyGyro")
        if bg then
            bg:Destroy()
        end
    end
    
    removeAntiTimeStopEffect()
    
    for _, connection in ipairs(antiTimeStopConnections) do
        if connection then
            pcall(function() connection:Disconnect() end)
        end
    end
    antiTimeStopConnections = {}
    
    print("Anti Time Stop disabled")
end


local function startNoClip()
    local char = Players.LocalPlayer.Character
    if not char then return end
    local root = char:FindFirstChild("HumanoidRootPart")
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if not root or not humanoid then return end
    
    isNoClipping = true
    
    -- Отключаем гравитацию для полета
    workspace.Gravity = 0
    
    -- Добавляем BodyVelocity для управления полетом
    local bodyVelocity = root:FindFirstChild("BodyVelocity")
    if not bodyVelocity then
        bodyVelocity = Instance.new("BodyVelocity")
        bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
        bodyVelocity.Velocity = Vector3.new(0, 0, 0)
        bodyVelocity.Parent = root
    end
    
    -- Отключаем коллизии
    for _, part in pairs(char:GetDescendants()) do
        if part:IsA("BasePart") and part.CanCollide then
            part.CanCollide = false
        end
    end
    
    local function noclip()
        if not char or not char.Parent then return end
        
        for _, part in pairs(char:GetDescendants()) do
            if part:IsA("BasePart") and part.CanCollide then
                part.CanCollide = false
            end
        end
    end
    
    -- Управление полетом клавишами
    local function updateMovement()
        if not isNoClipping or not root or not root.Parent then return end
        
        local bodyVel = root:FindFirstChild("BodyVelocity")
        if not bodyVel then return end
        
        local moveVector = Vector3.new(0, 0, 0)
        local camera = workspace.CurrentCamera
        local speed = 30 -- базовая скорость полета
        
        -- WASD + Space/Ctrl для полета
        if UserInputService:IsKeyDown(Enum.KeyCode.W) then
            moveVector = moveVector + camera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.S) then
            moveVector = moveVector - camera.CFrame.LookVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.A) then
            moveVector = moveVector - camera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.D) then
            moveVector = moveVector + camera.CFrame.RightVector
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.Space) then
            moveVector = moveVector + Vector3.new(0, 1, 0)
        end
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) then
            moveVector = moveVector - Vector3.new(0, 1, 0)
        end
        
        -- Применяем ускорение
        if UserInputService:IsKeyDown(Enum.KeyCode.LeftShift) then
            speed = speed * 2
        end
        
        -- Нормализуем и применяем скорость
        if moveVector.Magnitude > 0 then
            moveVector = moveVector.Unit * speed
        end
        
        -- Плавное изменение скорости
        bodyVel.Velocity = bodyVel.Velocity:Lerp(moveVector, 0.2)
    end
    
    local noClipLoop = RunService.Heartbeat:Connect(function()
        if not isNoClipping or not char or not char.Parent then
            return
        end
        noclip()
        updateMovement()
    end)
    
    table.insert(noClipConnections, noClipLoop)
    
    local function setupNoClipForPart(part)
        if part:IsA("BasePart") and part.CanCollide then
            part.CanCollide = false
        end
    end
    
    local descendantAdded = char.DescendantAdded:Connect(setupNoClipForPart)
    table.insert(noClipConnections, descendantAdded)
    
    print("🔥 NoClip включен с полетом! WASD + Space/Ctrl для движения")
    
    task.spawn(function()
        task.wait(0.5)
        if isNoClipping and char and char.Parent then
            noclip()
        end
    end)
end

local function stopNoClip()
    isNoClipping = false
    
    local char = Players.LocalPlayer.Character
    if not char then return end
    local root = char:FindFirstChild("HumanoidRootPart")
    
    -- Восстанавливаем гравитацию
    workspace.Gravity = 196.2
    
    -- Удаляем BodyVelocity
    if root then
        local bodyVelocity = root:FindFirstChild("BodyVelocity")
        if bodyVelocity then
            bodyVelocity:Destroy()
        end
    end
    
    -- Восстанавливаем коллизии
    for _, part in pairs(char:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = true
        end
    end
    
    -- Отключаем соединения
    for _, connection in ipairs(noClipConnections) do
        if connection then
            if typeof(connection) == "RBXScriptConnection" then
                pcall(function() connection:Disconnect() end)
            elseif typeof(connection) == "Instance" then
                pcall(function() connection:Destroy() end)
            end
        end
    end
    noClipConnections = {}
    
    print("🔥 NoClip отключен, гравитация восстановлена")
end

local function startSpeedHack()
    local char = Players.LocalPlayer.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    if not hum then return end
    
    isSpeedHacking = true
    originalWalkSpeed = hum.WalkSpeed
    originalJumpPower = hum.JumpPower
    
    hum.WalkSpeed = SpeedHackConfig.Speed * 16
    
    if SpeedHackConfig.UseJumpPower then
        hum.JumpPower = SpeedHackConfig.Speed * 50
    end
    
    local function onCharacterAdded(newChar)
        local newHum = newChar:WaitForChild("Humanoid")
        if isSpeedHacking then
            newHum.WalkSpeed = SpeedHackConfig.Speed * 16
            if SpeedHackConfig.UseJumpPower then
                newHum.JumpPower = SpeedHackConfig.Speed * 50
            end
        end
    end
    
    local characterAddedConnection = Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
    table.insert(speedHackConnections, characterAddedConnection)
    
    local speedLoop = RunService.Heartbeat:Connect(function()
        if not isSpeedHacking then return end
        
        local currentChar = Players.LocalPlayer.Character
        local currentHum = currentChar and currentChar:FindFirstChildOfClass("Humanoid")
        
        if currentHum then
            if currentHum.WalkSpeed ~= SpeedHackConfig.Speed * 16 then
                currentHum.WalkSpeed = SpeedHackConfig.Speed * 16
            end
            
            if SpeedHackConfig.UseJumpPower and currentHum.JumpPower ~= SpeedHackConfig.Speed * 50 then
                currentHum.JumpPower = SpeedHackConfig.Speed * 50
            end
        end
    end)
    
    table.insert(speedHackConnections, speedLoop)
end

local function stopSpeedHack()
    isSpeedHacking = false
    
    local char = Players.LocalPlayer.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.WalkSpeed = originalWalkSpeed
        hum.JumpPower = originalJumpPower
    end
    
    for _, connection in ipairs(speedHackConnections) do
        if connection then
            if typeof(connection) == "RBXScriptConnection" then
                pcall(function() connection:Disconnect() end)
            elseif typeof(connection) == "Instance" then
                pcall(function() connection:Destroy() end)
            end
        end
    end
    speedHackConnections = {}
end


local function startLongJump()
    local char = Players.LocalPlayer.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    if not hum then return end
    
    isLongJumping = true
    originalLongJumpPower = hum.JumpPower
    
    hum.JumpPower = LongJumpConfig.JumpPower
    
    
    local function onCharacterAdded(newChar)
        local newHum = newChar:WaitForChild("Humanoid")
        if isLongJumping then
            newHum.JumpPower = LongJumpConfig.JumpPower
        end
    end
    
    local characterAddedConnection = Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
    table.insert(longJumpConnections, characterAddedConnection)
    
    
    local longJumpLoop = RunService.Heartbeat:Connect(function()
        if not isLongJumping then return end
        
        local currentChar = Players.LocalPlayer.Character
        local currentHum = currentChar and currentChar:FindFirstChildOfClass("Humanoid")
        
        if currentHum and currentHum.JumpPower ~= LongJumpConfig.JumpPower then
            currentHum.JumpPower = LongJumpConfig.JumpPower
        end
    end)
    
    table.insert(longJumpConnections, longJumpLoop)
end

local function stopLongJump()
    isLongJumping = false
    
    local char = Players.LocalPlayer.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.JumpPower = originalLongJumpPower
    end
    
    
    for _, connection in ipairs(longJumpConnections) do
        if connection then
            if typeof(connection) == "RBXScriptConnection" then
                pcall(function() connection:Disconnect() end)
            elseif typeof(connection) == "Instance" then
                pcall(function() connection:Destroy() end)
            end
        end
    end
    longJumpConnections = {}
end


local function startInfiniteJump()
    local char = Players.LocalPlayer.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    local root = char and char:FindFirstChild("HumanoidRootPart")
    if not hum or not root then return end
    
    isInfiniteJumping = true
    lastJumpTime = 0
    
    
    local function onJumpRequest()
        if not isInfiniteJumping then return end
        
        local currentTime = tick()
        if currentTime - lastJumpTime < 0.1 then return end 
        
        lastJumpTime = currentTime
        
        
        local bv = Instance.new("BodyVelocity", root)
        bv.MaxForce = Vector3.new(0, math.huge, 0)
        bv.Velocity = Vector3.new(0, InfiniteJumpConfig.JumpPower, 0)
        
        
        task.spawn(function()
            task.wait(0.3)
            if bv and bv.Parent then
                bv:Destroy()
            end
        end)
    end
    
    
    local jumpConnection = hum.Jumping:Connect(onJumpRequest)
    table.insert(infiniteJumpConnections, jumpConnection)
    
    
    local function onInputBegan(input, gameProcessed)
        if gameProcessed then return end
        if input.KeyCode == Enum.KeyCode.Space then
            onJumpRequest()
        end
    end
    
    local inputConnection = UserInputService.InputBegan:Connect(onInputBegan)
    table.insert(infiniteJumpConnections, inputConnection)
    
    
    local function onCharacterAdded(newChar)
        if isInfiniteJumping then
            task.wait(1) 
            startInfiniteJump() 
        end
    end
    
    local characterAddedConnection = Players.LocalPlayer.CharacterAdded:Connect(onCharacterAdded)
    table.insert(infiniteJumpConnections, characterAddedConnection)
end

local function stopInfiniteJump()
    isInfiniteJumping = false
    lastJumpTime = 0
    
    
    for _, connection in ipairs(infiniteJumpConnections) do
        if connection then
            if typeof(connection) == "RBXScriptConnection" then
                pcall(function() connection:Disconnect() end)
            elseif typeof(connection) == "Instance" then
                pcall(function() connection:Destroy() end)
            end
        end
    end
    infiniteJumpConnections = {}
    
    
    local char = Players.LocalPlayer.Character
    local root = char and char:FindFirstChild("HumanoidRootPart")
    if root then
        for _, child in pairs(root:GetChildren()) do
            if child:IsA("BodyVelocity") then
                child:Destroy()
            end
        end
    end
end


local function createStealthTeleport()
    if not TeleportConfig.TargetPlayer then 
        return 
    end
    
    local char = Players.LocalPlayer.Character
    local targetChar = TeleportConfig.TargetPlayer.Character
    if not char or not targetChar then 
        return 
    end
    
    local root = char:FindFirstChild("HumanoidRootPart")
    local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")
    local humanoid = char:FindFirstChild("Humanoid")
    if not root or not targetRoot or not humanoid then 
        return 
    end
    
    isTeleporting = true
    speedResetTimer = 0
    lastSpeedCheck = tick()
    
    
    if not TeleportConfig.OriginalPosition then
        TeleportConfig.OriginalPosition = root.Position
    end
    
    
    if not isNoClipping then
        startNoClip()
    end
    
    
    task.spawn(function()
        task.wait(0.1) 
        if not isNoClipping then
            startNoClip()
        end
        
        
        local char = Players.LocalPlayer.Character
        if char then
            for _, part in pairs(char:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end)
    
    local stealthTeleportLoop = RunService.Heartbeat:Connect(function()
        if not isTeleporting or not targetChar or not targetChar.Parent then
            return
        end
        
        
        if isNoClipping and char and char.Parent then
            for _, part in pairs(char:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
        
        
        local currentTime = tick()
        speedResetTimer = speedResetTimer + (currentTime - lastSpeedCheck)
        lastSpeedCheck = currentTime
        
        if speedResetTimer >= TeleportConfig.MaxSpeedResetTime then
            speedResetTimer = 0
            
            local bv = root:FindFirstChild("BodyVelocity")
            local safeBehindDistance = lastBehindDistance or 0
            if bv and bv.Velocity.Magnitude > TeleportConfig.SpeedResetThreshold and safeBehindDistance > 5 then
                bv.Velocity = bv.Velocity * 0.8
            end

            if humanoid and humanoid.WalkSpeed > 16 and (safeBehindDistance > 5) then
                humanoid.WalkSpeed = math.max(humanoid.WalkSpeed - 1, 16)
            end
        end
        
        local now = tick()
        local dt = now - lastUpdateTime
        lastUpdateTime = now
        
        local currentTargetRoot = targetChar:FindFirstChild("HumanoidRootPart")
        if currentTargetRoot then
            local targetPos = currentTargetRoot.Position
            local currentPos = root.Position
            local distance = (targetPos - currentPos).Magnitude

                    if lastTeleportPosition then
                local targetMovement = (targetPos - lastTeleportPosition).Magnitude
                if targetMovement > 3 then
                    task.wait(0.02)
                end
            end
            lastTeleportPosition = targetPos
            
            local targetCFrame = currentTargetRoot.CFrame
            local behindPosition = targetCFrame * CFrame.new(0, 0, TeleportConfig.BehindPlayerDistance)
            local behindDistance = (behindPosition.Position - currentPos).Magnitude
            
            local bv = root:FindFirstChild("BodyVelocity")
            if not bv then
                bv = Instance.new("BodyVelocity", root)
                bv.MaxForce = Vector3.new(1e9, 1e9, 1e9)
                bv.Velocity = Vector3.new(0, 0, 0)
            else
                bv.MaxForce = Vector3.new(1e9, 1e9, 1e9)
            end
            
            local bg = root:FindFirstChild("BodyGyro")
            if not bg then
                bg = Instance.new("BodyGyro", root)
                bg.MaxTorque = Vector3.new(1e9, 1e9, 1e9)
                bg.D = 1000
                bg.P = 8000
            else
                bg.MaxTorque = Vector3.new(1e9, 1e9, 1e9)
                bg.D = 1000
                bg.P = 8000
            end
            
            local targetLookVector = targetCFrame.LookVector
            bg.CFrame = CFrame.lookAt(root.Position, root.Position + targetLookVector)
            
            local targetVelocity = currentTargetRoot.Velocity
            local targetSpeed = targetVelocity.Magnitude
            
            local predictionTime = math.clamp(0.05 + (targetSpeed / 300), 0.05, 0.25)
            local predictedPosition = behindPosition.Position + (targetVelocity * predictionTime)
            local predictedDistance = (predictedPosition - currentPos).Magnitude
            
            local adaptiveSpeed = TeleportConfig.TeleportSpeed
            if targetSpeed > 80 then
                adaptiveSpeed = TeleportConfig.TeleportSpeed * 2.5
            elseif targetSpeed > 50 then
                adaptiveSpeed = TeleportConfig.TeleportSpeed * 2.0
            elseif targetSpeed > 20 then
                adaptiveSpeed = TeleportConfig.TeleportSpeed * 1.4
            end
            
            if predictedDistance > 1.5 then
                isStabilizing = false
                stabilizationStartTime = nil
                local direction = (predictedPosition - currentPos).Unit
                local currentVelocity = bv.Velocity
                local targetVelocityVec = direction * adaptiveSpeed
                
                local accelerationFactor = 0.22
                if targetSpeed > 80 then
                    accelerationFactor = 0.5
                elseif targetSpeed > 50 then
                    accelerationFactor = 0.4
                elseif targetSpeed > 30 then
                    accelerationFactor = 0.3
                end
                
                local velocityDiff = targetVelocityVec - currentVelocity
                local acceleration = velocityDiff * accelerationFactor
                
                bv.Velocity = currentVelocity + acceleration
            else
                local direction = (predictedPosition - currentPos).Unit
                local maxCorr = TeleportConfig.MaxCorrectionSpeed or 180
                local correctionSpeed = math.min(predictedDistance * 45, maxCorr)
                
                if targetSpeed > 10 then
                    correctionSpeed = correctionSpeed * 1.15
                end
                
                bv.Velocity = direction * correctionSpeed
                
                if predictedDistance < 0.25 and targetSpeed < 12 then
                    if not isStabilizing then
                        isStabilizing = true
                        stabilizationStartTime = tick()
                    end
                    local elapsed = tick() - (stabilizationStartTime or tick())
                    local smoothFactor = math.clamp(elapsed / (TeleportConfig.StabilizationTime + 1e-6), 0, 1)
                    local smallSpeed = math.min(predictedDistance * 25, 15)
                    local desiredVel = direction * smallSpeed
                    bv.Velocity = bv.Velocity + (desiredVel - bv.Velocity) * math.max(0.55, 0.85 * smoothFactor)
                    if predictedDistance < 0.05 then
                        bv.Velocity = Vector3.new(0, 0, 0)
                    end
                else
                    isStabilizing = false
                    stabilizationStartTime = nil
                end
            end
            
            lastBehindDistance = behindDistance
        end
    end)
    
    table.insert(teleportConnections, stealthTeleportLoop)
end

local function startTeleport()
    if not TeleportConfig.TargetPlayer then 
        return 
    end
    
    local char = Players.LocalPlayer.Character
    local targetChar = TeleportConfig.TargetPlayer.Character
    if not char or not targetChar then 
        return 
    end
    
    local root = char:FindFirstChild("HumanoidRootPart")
    local targetRoot = targetChar:FindFirstChild("HumanoidRootPart")
    if not root or not targetRoot then 
        return 
    end
    
    isTeleporting = true
    lastTeleportPosition = nil
    speedResetTimer = 0
    lastSpeedCheck = tick()
    
    
    TeleportConfig.OriginalPosition = root.Position
    
    
    if not isNoClipping then
        startNoClip()
    end
    
    
    task.spawn(function()
        task.wait(0.1) 
        if not isNoClipping then
            startNoClip()
        end
        
        
        local char = Players.LocalPlayer.Character
        if char then
            for _, part in pairs(char:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end)
    
    if teleportBtn then
        teleportBtn.Text = getText("StopTeleport")
        teleportBtn.BackgroundColor3 = Color3.fromRGB(150,0,0)
    end
    
    createStealthTeleport()
    
    
    task.spawn(function()
        task.wait(0.2)
        if not isNoClipping then
            startNoClip()
        end
        
        
        local char = Players.LocalPlayer.Character
        if char then
            for _, part in pairs(char:GetDescendants()) do
                if part:IsA("BasePart") and part.CanCollide then
                    part.CanCollide = false
                end
            end
        end
    end)
end

local function stopTeleport()
    isTeleporting = false
    lastTeleportPosition = nil
    speedResetTimer = 0
    TeleportConfig.Enabled = false
    
    local char = Players.LocalPlayer.Character
    if not char then 
        return 
    end
    
    local root = char:FindFirstChild("HumanoidRootPart")
    local humanoid = char:FindFirstChild("Humanoid")
    
    
    for _, connection in ipairs(teleportConnections) do
        if connection then
            if typeof(connection) == "RBXScriptConnection" then
                pcall(function() connection:Disconnect() end)
            end
        end
    end
    teleportConnections = {}
    
    
    local bv = root and root:FindFirstChild("BodyVelocity")
    if bv then
        
        bv.Velocity = Vector3.new(0, 0, 0)
        task.wait(0.1) 
        bv:Destroy()
    end
    
    local bg = root and root:FindFirstChild("BodyGyro")
    if bg then
        bg:Destroy()
    end
    
    
    if humanoid then
        humanoid.WalkSpeed = 16
        humanoid.JumpPower = 50
    end
    
    
    if root and TeleportConfig.OriginalPosition then
        
        if not isNoClipping then
            startNoClip()
        end
        
        
        local returnConnections = {}
        
        local returnLoop = RunService.Heartbeat:Connect(function()
            if not root or not root.Parent then
                return
            end
            
            local currentPos = root.Position
            local returnPos = TeleportConfig.OriginalPosition
            local distance = (returnPos - currentPos).Magnitude
            
            if distance > 3 then
                local returnBv = root:FindFirstChild("BodyVelocity")
                if not returnBv then
                    returnBv = Instance.new("BodyVelocity", root)
                    returnBv.MaxForce = Vector3.new(1e6, 1e6, 1e6) 
                end
                
                local returnDirection = (returnPos - currentPos).Unit
                local returnSpeed = TeleportConfig.ReturnSpeed
                
                returnSpeed = returnSpeed + math.random(-5, 5)
                
                returnBv.Velocity = returnDirection * returnSpeed
            else
                
                local returnBv = root:FindFirstChild("BodyVelocity")
                if returnBv then
                    returnBv.Velocity = Vector3.new(0, 0, 0)
                    task.wait(0.5) 
                    returnBv:Destroy()
                end
                
                local returnBg = root:FindFirstChild("BodyGyro")
                if returnBg then
                    returnBg:Destroy()
                end
                
                
                root.CFrame = CFrame.new(TeleportConfig.OriginalPosition)
                TeleportConfig.OriginalPosition = nil
                
                
                local freezeBv = Instance.new("BodyVelocity", root)
                freezeBv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
                freezeBv.Velocity = Vector3.new(0, 0, 0)
                
                task.wait(2) 
                
                if freezeBv then
                    freezeBv:Destroy()
                end
                
                
                task.spawn(function()
                    task.wait(5)
                    if isNoClipping then
                        stopNoClip()
                    end
                end)
                
                
                for _, connection in ipairs(returnConnections) do
                    if connection then
                        pcall(function() connection:Disconnect() end)
                    end
                end
                
                if returnLoop then
                    returnLoop:Disconnect()
                end
            end
        end)
        
        table.insert(returnConnections, returnLoop)
    end
    
    
    local humanoid = char and char:FindFirstChild("Humanoid")
    if humanoid then
        humanoid.WalkSpeed = 16
        humanoid.JumpPower = 50
    end
    
    if teleportBtn then
        teleportBtn.Text = getText("StartTeleport")
        teleportBtn.BackgroundColor3 = Color3.fromRGB(0,150,0)
    end
end

local function findStands()
    local stands = {}
    local player = Players.LocalPlayer
    local playerChar = player.Character
    local playerRoot = playerChar and playerChar:FindFirstChild("HumanoidRootPart")
    if not playerRoot then 
        print("[findStands] playerRoot not found")
        return stands 
    end
    local standNames = {
        "Stand", "StandModel", "StandPart", "StandRoot", "HumanoidRootPart",
        "Star Platinum", "The World", "Hierophant Green", "Magician's Red",
        "Hermit Purple", "Silver Chariot", "Tower of Gray", "Dark Blue Moon",
        "Strength", "Wheel of Fortune", "Hanged Man", "Emperor", "Empress",
        "Judgment", "High Priestess", "Death Thirteen", "Lovers", "Sun",
        "Bastet", "Thunder McQueen", "Anubis", "Khnum", "Tohth", "Horus",
        "Atum", "Osiris", "Horus", "Anubis", "Bastet", "Khnum", "Tohth"
    }
    local foundCount = 0
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("Model") then
            local isStand = false
            for _, standName in ipairs(standNames) do
                if obj.Name:find(standName) or obj.Name:lower():find(standName:lower()) then
                    isStand = true
                    break
                end
            end
            if isStand then
                local standRoot = obj:FindFirstChild("HumanoidRootPart") or obj:FindFirstChild("StandRoot") or obj:FindFirstChild("RootPart")
                if standRoot then
                    local distance = (standRoot.Position - playerRoot.Position).Magnitude
                    if distance <= 4 then
                        foundCount = foundCount + 1
                        print("[findStands] Found stand:", obj.Name, "Root:", standRoot.Name, "Distance:", distance)
                        table.insert(stands, {
                            Model = obj,
                            Root = standRoot,
                            Distance = distance,
                            Name = obj.Name
                        })
                    end
                end
            end
        end
    end
    if #stands == 0 then
        print("[findStands] No stands found in first pass, trying fallback...")
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA("Model") and obj:FindFirstChild("Humanoid") then
                local standRoot = obj:FindFirstChild("HumanoidRootPart")
                if standRoot then
                    local distance = (standRoot.Position - playerRoot.Position).Magnitude
                    if distance <= 4 then
                        print("[findStands] Fallback found stand:", obj.Name, "Root:", standRoot.Name, "Distance:", distance)
                        table.insert(stands, {
                            Model = obj,
                            Root = standRoot,
                            Distance = distance,
                            Name = obj.Name
                        })
                    end
                end
            end
        end
    end
    print("[findStands] Total stands found:", #stands)
    for i, s in ipairs(stands) do
        print(string.format("[findStands] Stand #%d: %s (Root: %s, Distance: %.2f)", i, s.Name, s.Root and s.Root.Name or "nil", s.Distance or -1))
    end
    table.sort(stands, function(a, b) return a.Distance < b.Distance end)
    return stands
end



local function freezePlayer()
    local player = Players.LocalPlayer
    local char = player.Character
    if not char then return end
    
    local root = char:FindFirstChild("HumanoidRootPart")
    local humanoid = char:FindFirstChild("Humanoid")
    
    if root then
        originalPlayerPosition = root.Position
        originalPlayerCFrame = root.CFrame
        
        local bv = root:FindFirstChild("BodyVelocity")
        if not bv then
            bv = Instance.new("BodyVelocity", root)
            bv.MaxForce = Vector3.new(1e6, 1e6, 1e6)
        end
        bv.Velocity = Vector3.new(0, 0, 0)
        
        local gyro = root:FindFirstChild("BodyGyro")
        if not gyro then
            gyro = Instance.new("BodyGyro", root)
            gyro.MaxTorque = Vector3.new(1e6, 1e6, 1e6)
        end
        gyro.CFrame = root.CFrame
        
        local camera = workspace.CurrentCamera
        if camera then
            camera.CameraType = Enum.CameraType.Scriptable
        end
    end
    
    if humanoid then
        originalYBAWalkSpeed = humanoid.WalkSpeed
        originalYBAJumpPower = humanoid.JumpPower
        humanoid.WalkSpeed = 0
        humanoid.JumpPower = 0
        
        humanoid.AutoRotate = false
        humanoid.AutoJumpEnabled = false
    end
end

local function unfreezePlayer()
    local player = Players.LocalPlayer
    local char = player.Character
    if not char then return end
    
    local root = char:FindFirstChild("HumanoidRootPart")
    local humanoid = char:FindFirstChild("Humanoid")
    
    if root then
        local bv = root:FindFirstChild("BodyVelocity")
        if bv then
            bv:Destroy()
        end
        
        local gyro = root:FindFirstChild("BodyGyro")
        if gyro then
            gyro:Destroy()
        end
    end
    
    if humanoid then
        humanoid.WalkSpeed = originalYBAWalkSpeed
        humanoid.JumpPower = originalYBAJumpPower
        
        humanoid.AutoRotate = true
        humanoid.AutoJumpEnabled = true
    end
end

local function controlStand(stand)
    if not stand or not stand.Root then 
        print("YBA: Ошибка - стенд или его Root не найден")
        return 
    end
    
    print("YBA: Начинаем управление стендом: " .. stand.Name)
    controlledStand = stand

    if activateFreeCamera(stand) then
        print("YBA: Свободная камера активирована для стенда: " .. stand.Name)
    else
        print("YBA: Не удалось активировать свободную камеру для стенда: " .. stand.Name)
    end
end

-- Удаляем старую реализацию Stand Range Hack и горячие клавиши
local function startYBA()
    YBAConfig.Enabled = true
    print("YBA Stand Range: Включено")
end

local function stopYBA()
    YBAConfig.Enabled = false
    if standSwapActive then
        stopStandSwapMode()
    end
    print("YBA Stand Range: Отключено")
end
activateFreeCamera = nil
detachStandControl = nil
enableDetachedStandControl = nil
YBAFreeCamera = nil
if _G._detachStandConnection then _G._detachStandConnection:Disconnect() end
if _G._standSwapConn then _G._standSwapConn:Disconnect() end

-- Новая реализация Stand Range Hack через тумблер меню
local standFollowConn = nil
local standSwapActive = false
local standSwapYOffset = 30

-- Переменные для режима полета
local originalPlayerY = 0
local flightMode = false
local flightConnections = {}

-- РЕЖИМ ПОЛЕТА (БЕЗ АВТООПУСКАНИЯ)
local function startFlightMode()
    if flightMode then return end
    local player = Players.LocalPlayer
    local char = player.Character
    if not char then return end
    local root = char:FindFirstChild("HumanoidRootPart")
    local hum = char:FindFirstChildOfClass("Humanoid")
    if not root or not hum then return end
    
    print("🔥 РЕЖИМ ПОЛЕТА: Активирован!")
    flightMode = true
    
    -- Сохраняем оригинальную Y позицию
    originalPlayerY = root.Position.Y
    
    -- ВКЛЮЧАЕМ НОУКЛИП АВТОМАТИЧЕСКИ!
    if not isNoClipping then
        startNoClip()
        print("🔥 NoClip автоматически включен!")
    else
        print("🔥 NoClip уже был включен!")
    end
    
    -- Активируем флай
    local flyOriginalJumpPower = hum.JumpPower
    local flyOriginalJumpHeight = hum.JumpHeight
    local flyOriginalGravity = workspace.Gravity
    local flyOriginalHipHeight = hum.HipHeight
    
    hum.JumpPower = 0
    hum.JumpHeight = 0
    workspace.Gravity = 0
    hum.HipHeight = 0
    
    local ctrl = {f = 0, b = 0, l = 0, r = 0, u = 0, d = 0}
    
    local inputDown = UserInputService.InputBegan:Connect(function(input, gp)
        if gp then return end
        if input.KeyCode == Enum.KeyCode.W then ctrl.f = 1
        elseif input.KeyCode == Enum.KeyCode.S then ctrl.b = -1
        elseif input.KeyCode == Enum.KeyCode.A then ctrl.l = -1
        elseif input.KeyCode == Enum.KeyCode.D then ctrl.r = 1
        elseif input.KeyCode == Enum.KeyCode.Space then ctrl.u = 1
        elseif input.KeyCode == Enum.KeyCode.LeftControl then ctrl.d = -1 end
    end)
    
    local inputUp = UserInputService.InputEnded:Connect(function(input, gp)
        if gp then return end
        if input.KeyCode == Enum.KeyCode.W then ctrl.f = 0
        elseif input.KeyCode == Enum.KeyCode.S then ctrl.b = 0
        elseif input.KeyCode == Enum.KeyCode.A then ctrl.l = 0
        elseif input.KeyCode == Enum.KeyCode.D then ctrl.r = 0
        elseif input.KeyCode == Enum.KeyCode.Space then ctrl.u = 0
        elseif input.KeyCode == Enum.KeyCode.LeftControl then ctrl.d = 0 end
    end)
    
    local renderConnection = RunService.RenderStepped:Connect(function()
        if not flightMode or not char or not char:FindFirstChild("Humanoid") or not root then
            return
        end
        
        local cam = workspace.CurrentCamera
        if not cam then return end
        
        -- Используем ТОЧНО ТАКУЮ ЖЕ логику как в оригинальном полете
        local forward = cam.CFrame.lookVector
        local right = cam.CFrame.rightVector
        local up = Vector3.new(0, 1, 0)
        
        local moveVector = Vector3.new(0, 0, 0)
        moveVector = moveVector + (forward * (ctrl.f + ctrl.b))
        moveVector = moveVector + (right * (ctrl.r + ctrl.l))
        moveVector = moveVector + (up * (ctrl.u + ctrl.d))
        
        if moveVector.Magnitude > 0 then
            -- Используем Flight Speed для скорости как в оригинальном полете!
            local speed = (YBAConfig.UndergroundControl.FlightSpeed or 50)
            moveVector = moveVector.Unit * speed
            local bv = root:FindFirstChild("BodyVelocity")
            if not bv then
                bv = Instance.new("BodyVelocity", root)
                bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
            end
            bv.Velocity = moveVector
        else
            local bv = root:FindFirstChild("BodyVelocity")
            if bv then
                bv.Velocity = Vector3.new(0, 0, 0)
            end
        end
    end)
    
    -- Сохраняем соединения
    flightConnections = {inputDown, inputUp, renderConnection}
    
    print("🔥 РЕЖИМ ПОЛЕТА АКТИВИРОВАН! Управление: WASD + Space/Ctrl")
end

local function stopFlightMode()
    if not flightMode then return end
    print("🔥 РЕЖИМ ПОЛЕТА: Отключение!")
    
    flightMode = false
    
    local player = Players.LocalPlayer
    local char = player.Character
    if not char then 
        print("🔥 ПЕРСОНАЖ НЕ НАЙДЕН - БЕЗОПАСНЫЙ ВЫХОД")
        return 
    end
    local root = char:FindFirstChild("HumanoidRootPart")
    local hum = char:FindFirstChildOfClass("Humanoid")
    
    -- Отключаем соединения полета
    if flightConnections then
        for _, conn in pairs(flightConnections) do
            if conn then conn:Disconnect() end
        end
        flightConnections = nil
    end
    
    if root and hum and hum.Health > 0 then
        -- Восстанавливаем нормальные настройки
        hum.JumpPower = 50
        hum.JumpHeight = 7.2
        hum.HipHeight = 2
        workspace.Gravity = 196.2
        
        local bv = root:FindFirstChild("BodyVelocity")
        if bv then bv:Destroy() end
        
        print("🔥 РЕЖИМ ПОЛЕТА ОТКЛЮЧЕН!")
    end
end

-- Старые функции удалены - используется новый startFlightMode/stopFlightMode

-- Старые функции камеры удалены - используется YBAFreeCamera

local function startStandSwapMode(stand)
    if standSwapActive then return end
    local player = game.Players.LocalPlayer
    local char = player.Character
    if not char or not stand or not stand.Root then return end
    local root = char:FindFirstChild("HumanoidRootPart")
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if not root or not humanoid then return end
    standSwapActive = true
    
    print("🔥 STAND RANGE HACK: Стабильная активация...")
    
    -- ЭТАП 1: Просто включаем NoClip, БЕЗ телепортов игрока
    
    -- ЭТАП 2: Включаем НОРМАЛЬНЫЙ NoClip с полетом
    if not isNoClipping then
        startNoClip()
        print("🔥 NoClip включен с полетом для игрока!")
    end
    
    -- ЭТАП 3: ОЧИЩАЕМ СТАРЫЕ СОЕДИНЕНИЯ И ОТСОЕДИНЯЕМ стенд
    -- Отключаем все старые глобальные соединения
    if _G._detachStandConnection then 
        _G._detachStandConnection:Disconnect() 
        _G._detachStandConnection = nil
    end
    if _G._standSwapConn then 
        _G._standSwapConn:Disconnect() 
        _G._standSwapConn = nil
    end
    if _G._standRangeMenuConn then 
        _G._standRangeMenuConn:Disconnect() 
        _G._standRangeMenuConn = nil
    end
    -- Удаляем ВСЕ соединения из стенда
    for _, part in pairs(stand:GetDescendants()) do
        if part:IsA("BasePart") then
            for _, obj in pairs(part:GetChildren()) do
                if obj:IsA("Weld") or obj:IsA("Motor6D") or obj:IsA("Attachment") or obj:IsA("Constraint") or obj:IsA("BodyPosition") or obj:IsA("BodyVelocity") or obj:IsA("BodyAngularVelocity") then
                    obj:Destroy()
                end
            end
        end
    end
    
    -- Удаляем соединения из игрока к стенду
    for _, part in pairs(char:GetDescendants()) do
        if part:IsA("BasePart") then
            for _, obj in pairs(part:GetChildren()) do
                if obj:IsA("Weld") or obj:IsA("Motor6D") then
                    if obj.Part0 and obj.Part1 then
                        if obj.Part0.Parent == stand or obj.Part1.Parent == stand then
                            obj:Destroy()
                        end
                    end
                end
            end
        end
    end
    
    -- МГНОВЕННО перемещаем стенд на нужную высоту
    local originalStandPos = stand.Root.Position
    local targetStandPos = Vector3.new(originalStandPos.X, originalStandPos.Y + standSwapYOffset, originalStandPos.Z)
    stand.Root.CFrame = CFrame.new(targetStandPos)
    stand.Root.Anchored = false -- убеждаемся что стенд не закреплен
    
    -- НЕ добавляем BodyPosition - он мешает управлению стендом!
    
    print("🔥 Стенд ОТСОЕДИНЕН от игрока и перемещен на высоту:", targetStandPos.Y)
    
    -- ЭТАП 4: Ждем секунду для стабилизации
    task.wait(1)
    
    -- ЭТАП 5: Активируем камеру (с принудительной очисткой)
    
    -- Принудительно останавливаем старую камеру если была
    if YBAFreeCamera.IsRunning() then
        YBAFreeCamera.Stop()
        task.wait(0.1) -- даем время на очистку
    end
    
    -- Включаем камеру стенда
    if YBAFreeCamera.Start(stand) then
        print("🔥 КАМЕРА АКТИВИРОВАНА для стенда:", stand.Name)
    else
        print("🔥 ОШИБКА активации камеры для стенда:", stand.Name)
    end
    
    -- ЭТАП 6: Готово! Игрок летает сам через NoClip, стенд управляется через камеру
    
    print("🔥 ✅ RANGE HACK АКТИВИРОВАН!")
    print("🔥 🎮 Стенд: WASD + Space/Ctrl (управление через камеру)")
    print("🔥 ✈️  Игрок: WASD + Space/Ctrl (полет через NoClip)")
    print("🔥 🎥 Камера: ПКМ поворот, колесико зум")
    print("🔥 🔧 Все старые соединения очищены!")
    print("🔥 ❌ Стенд ПОЛНОСТЬЮ отсоединен от игрока!")
end

local function stopStandSwapMode()
    if not standSwapActive then return end
    standSwapActive = false
    
    print("🔥 STAND RANGE HACKS: Последовательность отключения...")
    
    -- ЭТАП 1: Отключаем камеру от стенда
    if YBAFreeCamera.IsRunning() then
        YBAFreeCamera.Stop()
        print("🔥 КАМЕРА ОТКЛЮЧЕНА от стенда")
    end
    
    -- ЭТАП 2: Больше нет следования - это было причиной багов
    
    -- ЭТАП 3: Отключаем ноуклип если нужно
    if isNoClipping then
        stopNoClip()
        print("🔥 NoClip отключен!")
    end
    
    print("🔥 ОТКЛЮЧЕН: Возвращение в исходное состояние...")
end

-- Подключаем к тумблеру меню
if _G._standRangeMenuConn then _G._standRangeMenuConn:Disconnect() end
_G._standRangeMenuConn = game:GetService("RunService").RenderStepped:Connect(function()
    -- Проверка на смерть персонажа для автоотключения
    local player = Players.LocalPlayer
    local char = player.Character
    local hum = char and char:FindFirstChildOfClass("Humanoid")
    
    if standSwapActive and (not char or not hum or hum.Health <= 0) then
        print("🔥 ПЕРСОНАЖ УМЕР - АВТООТКЛЮЧЕНИЕ STAND RANGE HACK")
        YBAConfig.Enabled = false
        stopStandSwapMode()
        return
    end
    
    -- Проверка режима полета убрана так как больше не используется отдельно
    
    if YBAConfig.Enabled and not standSwapActive then
        local stands = findStands()
        if #stands > 0 then
            startStandSwapMode(stands[1])
        end
    elseif not YBAConfig.Enabled and standSwapActive then
        stopStandSwapMode()
    end
end)

local function getAlivePlayers()
    local alivePlayers = {}
    
    if not Players then
        return alivePlayers
    end
    
    if not Players.LocalPlayer then
        return alivePlayers
    end
    
    local allPlayers = Players:GetPlayers()
    if not allPlayers then
        return alivePlayers
    end
    
    for i, player in ipairs(allPlayers) do
        if player then
            if player ~= Players.LocalPlayer then
                if player.Character then
                    local humanoid = player.Character:FindFirstChild("Humanoid")
                    if humanoid then
                        if humanoid.Health > 0 then
                            table.insert(alivePlayers, player)
                        end
                    end
                end
            end
        end
    end
    
    return alivePlayers
end


UserInputService.InputBegan:Connect(function(input, gp)
    if not gp then
        if FlyConfig.ToggleKey and input.KeyCode == FlyConfig.ToggleKey then
            FlyConfig.Enabled = not FlyConfig.Enabled
            if FlyConfig.Enabled then 
                startFly() 
            else 
                stopFly() 
            end
            
            if guiCallbacks.fly then
                guiCallbacks.fly.Text = "Fly: " .. (FlyConfig.Enabled and "ON" or "OFF")
            end
        elseif NoClipConfig.ToggleKey and input.KeyCode == NoClipConfig.ToggleKey then
            NoClipConfig.Enabled = not NoClipConfig.Enabled
            if NoClipConfig.Enabled then 
                startNoClip() 
            else 
                stopNoClip() 
            end
            
            if guiCallbacks.noClip then
                guiCallbacks.noClip.Text = "NoClip: " .. (NoClipConfig.Enabled and "ON" or "OFF")
            end
        elseif SpeedHackConfig.ToggleKey and input.KeyCode == SpeedHackConfig.ToggleKey then
            SpeedHackConfig.Enabled = not SpeedHackConfig.Enabled
            if SpeedHackConfig.Enabled then 
                startSpeedHack() 
            else 
                stopSpeedHack() 
            end
            
            if guiCallbacks.speedHack then
                guiCallbacks.speedHack.Text = "SpeedHack: " .. (SpeedHackConfig.Enabled and "ON" or "OFF")
            end
        elseif TeleportConfig.ToggleKey and input.KeyCode == TeleportConfig.ToggleKey then
            if TeleportConfig.Enabled then
                stopTeleport()
                TeleportConfig.Enabled = false
            else
                if TeleportConfig.TargetPlayer then
                    startTeleport()
                    TeleportConfig.Enabled = true
                else
                    print("Сначала выберите игрока для телепортации")
                end
            end
            
            if guiCallbacks.teleport then
                guiCallbacks.teleport.Text = "Выбранный игрок: " .. (TeleportConfig.SelectedPlayerName or "Не выбран")
            end
        elseif LongJumpConfig.ToggleKey and input.KeyCode == LongJumpConfig.ToggleKey then
            LongJumpConfig.Enabled = not LongJumpConfig.Enabled
            if LongJumpConfig.Enabled then 
                startLongJump() 
            else 
                stopLongJump() 
            end
            
            if guiCallbacks.longJump then
                guiCallbacks.longJump.Text = "Long Jump: " .. (LongJumpConfig.Enabled and "ON" or "OFF")
            end
        elseif InfiniteJumpConfig.ToggleKey and input.KeyCode == InfiniteJumpConfig.ToggleKey then
            InfiniteJumpConfig.Enabled = not InfiniteJumpConfig.Enabled
            if InfiniteJumpConfig.Enabled then 
                startInfiniteJump() 
            else 
                stopInfiniteJump() 
            end
            
            if guiCallbacks.infiniteJump then
                guiCallbacks.infiniteJump.Text = "Infinite Jump: " .. (InfiniteJumpConfig.Enabled and "ON" or "OFF")
            end
        elseif NoClipConfig.ForceToggleKey and input.KeyCode == NoClipConfig.ForceToggleKey then
            if isNoClipping then
                stopNoClip()
            else
                startNoClip()
            end
        elseif YBAConfig.ToggleKey and input.KeyCode == YBAConfig.ToggleKey then
            if YBAConfig.Enabled then
                stopYBA()
            else
                startYBA()
            end
            
            if guiCallbacks.yba then
                guiCallbacks.yba.Text = "Stand Range Hack: " .. (YBAConfig.Enabled and "ON" or "OFF")
            end

        elseif AntiTimeStopConfig.ToggleKey and input.KeyCode == AntiTimeStopConfig.ToggleKey then
            if not isAntiTimeStopEnabled then
                AntiTimeStopConfig.Enabled = true
                startAntiTimeStop()
                
                if guiCallbacks.antiTimeStop then
                    guiCallbacks.antiTimeStop.Text = "Anti Time Stop: ACTIVATING..."
                end
                
                spawn(function()
                    task.wait(0.5)
                    
                    AntiTimeStopConfig.Enabled = false
                    stopAntiTimeStop()
                    
                    if guiCallbacks.antiTimeStop then
                        guiCallbacks.antiTimeStop.Text = "Anti Time Stop: READY"
                    end
                end)
            else
                if guiCallbacks.antiTimeStop then
                    guiCallbacks.antiTimeStop.Text = "Anti Time Stop: ALREADY ACTIVE"
                    spawn(function()
                        task.wait(1)
                        guiCallbacks.antiTimeStop.Text = "Anti Time Stop: READY"
                    end)
                end
            end
        end
    end
end)

-- Обработчики клавиш для ускорения Ctrl в Stand Range Hack
UserInputService.InputBegan:Connect(function(input, gp)
    if not gp and input.KeyCode == Enum.KeyCode.LeftControl then
        isShiftPressed = true
        print("Ctrl нажат - ускорение активировано")
    end
end)

UserInputService.InputEnded:Connect(function(input, gp)
    if input.KeyCode == Enum.KeyCode.LeftControl then
        isShiftPressed = false
        print("Ctrl отпущен - ускорение деактивировано")
    end
end)


local ESPs, Lines = {}, {}
local FOVCircle

local FOVCircle = Drawing.new("Circle")
FOVCircle.Thickness = 2
FOVCircle.NumSides = 100
FOVCircle.Filled = false
FOVCircle.Visible = false


local function getName(p)
    return p.Name
end
local function getHealth(p)
    local h = p.Character and p.Character:FindFirstChild("Humanoid")
    return (h and h.Health>0) and math.floor(h.Health) or 0
end
local function isAlive(p) return getHealth(p)>0 end
local function getRainbow() return Color3.fromHSV((tick()%5)/5,1,1) end
local function getESPColor(p)
    if Config.ESP.Rainbow then return getRainbow() end
    if Config.ESP.TeamCheck then return (p.TeamColor==Players.LocalPlayer.TeamColor) and Config.ESP.TeamColor or Config.ESP.EnemyColor end
    return Config.ESP.FillColor
end
local function getOutlineColor(p)
    if Config.ESP.Rainbow then return getRainbow() end
    if Config.ESP.TeamCheck then return (p.TeamColor==Players.LocalPlayer.TeamColor) and Config.ESP.TeamColor or Config.ESP.EnemyColor end
    return Config.ESP.OutlineColor
end
local function rayVisible(p)
    if not Config.Aimbot.VisibilityCheck then return true end
    local cam=workspace.CurrentCamera
    local head=p.Character and p.Character:FindFirstChild("Head") if not head then return false end
    local rp=RaycastParams.new()
    rp.FilterType=Enum.RaycastFilterType.Blacklist
    rp.FilterDescendantsInstances={Players.LocalPlayer.Character,p.Character}
    return not workspace:Raycast(cam.CFrame.Position, head.Position-cam.CFrame.Position, rp)
end


local function createOrUpdateESP(p)
    if not ESPs[p] then
        local hl=Instance.new("Highlight"); hl.Adornee=p.Character; hl.DepthMode=Enum.HighlightDepthMode.AlwaysOnTop; hl.Parent=p.Character
        local bg=Instance.new("BillboardGui",p.Character); bg.AlwaysOnTop=true; bg.Size=UDim2.new(0,200,0,50); bg.StudsOffset=Vector3.new(0,2,0)
        local tl=Instance.new("TextLabel",bg); tl.Size=UDim2.new(1,0,1,0); tl.BackgroundTransparency=1; tl.Font=Config.ESP.Font; tl.TextSize=18
        ESPs[p]={hl=hl,bg=bg,tl=tl}
    end
    local d=ESPs[p]
    d.hl.FillColor=getESPColor(p); d.hl.FillTransparency=Config.ESP.FillTransparency
    d.hl.OutlineColor=getOutlineColor(p); d.hl.OutlineTransparency=Config.ESP.ShowOutline and Config.ESP.OutlineTransparency or 1
    d.tl.TextColor3=Config.ESP.TextColor
    
    local baseText = string.format("%s | HP:%d | %dm",getName(p),getHealth(p),math.floor((Players.LocalPlayer.Character.HumanoidRootPart.Position-p.Character.HumanoidRootPart.Position).Magnitude))
    
    local standInfo = ""
    local styleInfo = ""
    
    if userStandESPEnabled then
        local stand = getPlayerStand(p)
        if stand then
            standInfo = " | Stand: " .. stand
        else
            standInfo = " | Stand: None"
        end
    end
    
    if userStyleESPEnabled then
        local style = getPlayerStyle(p)
        if style then
            styleInfo = " | Style: " .. style
        else
            styleInfo = " | Style: None"
        end
    end
    
    d.tl.Text = baseText .. standInfo .. styleInfo
end

local function removeESP(p)
    if ESPs[p] then 
        if ESPs[p].hl and ESPs[p].hl.Parent then ESPs[p].hl:Destroy() end
        if ESPs[p].bg and ESPs[p].bg.Parent then ESPs[p].bg:Destroy() end
        ESPs[p]=nil 
    end
    if Lines[p] then Lines[p]:Remove(); Lines[p]=nil end
end


local function isPlayerAlive(player)
    if not player then 
        return false 
    end
    
    if not player.Name then
        return false
    end
    
    if not player.Character then 
        return false 
    end
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if not humanoid then 
        return false 
    end
    local isAlive = humanoid.Health > 0
    return isAlive
end

local function isPlayerOnServer(player)
    if not player or not player.Character then return false end
    local humanoid = player.Character:FindFirstChild("Humanoid")
    if not humanoid then return false end
    return humanoid.Health > 0 and humanoid.Parent ~= nil
end


local function onPlayerDied(player)
    removeESP(player)
end

local function onPlayerRespawned(player)
    if Config.ESP.Enabled and player ~= Players.LocalPlayer then
        spawn(function()
            wait(2) 
            if isPlayerAlive(player) then
                createOrUpdateESP(player)
            end
        end)
    end
end


local function setupPlayerESP(player)
    if player == Players.LocalPlayer then return end
    
    
    local function onCharacterAdded(char)
        local humanoid = char:WaitForChild("Humanoid")
        
        
        humanoid.Died:Connect(function()
            onPlayerDied(player)
        end)
        
        
        humanoid.StateChanged:Connect(function(_, new)
            if new == Enum.HumanoidStateType.Dead then
                onPlayerDied(player)
            elseif new == Enum.HumanoidStateType.Running then
                onPlayerRespawned(player)
            end
        end)
        
        
        char.AncestryChanged:Connect(function(_, parent)
            if not parent then
                onPlayerDied(player)
            end
        end)
    end
    
    if player.Character then
        onCharacterAdded(player.Character)
    end
    player.CharacterAdded:Connect(onCharacterAdded)
    player.CharacterRemoving:Connect(function()
        onPlayerDied(player)
    end)
end


for _, player in ipairs(Players:GetPlayers()) do
    setupPlayerESP(player)
end


Players.PlayerAdded:Connect(setupPlayerESP)



Players.PlayerRemoving:Connect(function(player)
    removeESP(player)
end)

local function getClosestTarget()
    local cam = workspace.CurrentCamera
    local closest, minDist = nil, Config.Aimbot.FOV

    for _, p in ipairs(Players:GetPlayers()) do
        if p == Players.LocalPlayer then continue end
        if Config.Aimbot.TeamCheck and p.Team == Players.LocalPlayer.Team then continue end
        if not isAlive(p) then continue end
        if Config.Aimbot.VisibilityCheck and not rayVisible(p) then continue end

        local head = p.Character and p.Character:FindFirstChild("Head")
        if not head then continue end
        local screenPos, onScreen = cam:WorldToViewportPoint(head.Position)
        if not onScreen then continue end

        local dist = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(cam.ViewportSize.X/2, cam.ViewportSize.Y/2)).Magnitude
        if dist < minDist then
            closest = head
            minDist = dist
        end
    end
    return closest
end


RunService.RenderStepped:Connect(function()
    local cam = workspace.CurrentCamera
    for _, player in ipairs(Players:GetPlayers()) do
        if player == Players.LocalPlayer then continue end
        
        local char = player.Character
        local hum = char and char:FindFirstChild("Humanoid")
        local root = char and char:FindFirstChild("HumanoidRootPart")
        
        if isPlayerAlive(player) and root then
            if Config.ESP.Enabled then
                createOrUpdateESP(player)
                if Config.ESP.ShowLines then
                    if not Lines[player] then
                        local ln = Drawing.new("Line")
                        ln.Thickness = 2
                        ln.Transparency = 1
                        Lines[player] = ln
                    end
                    local pos, onScreen = cam:WorldToViewportPoint(root.Position)
                    Lines[player].Visible = onScreen
                    if onScreen then
                        Lines[player].From = Vector2.new(cam.ViewportSize.X/2, cam.ViewportSize.Y)
                        Lines[player].To = Vector2.new(pos.X, pos.Y)
                        Lines[player].Color = getESPColor(player)
                    end
                elseif Lines[player] then
                    Lines[player].Visible = false
                end
            else
                removeESP(player)
            end
        else
            
            removeESP(player)
        end
    end

    
if Config.Aimbot.Enabled then
    local target = getClosestTarget()
    if target then
        local cam = workspace.CurrentCamera
        cam.CFrame = CFrame.lookAt(cam.CFrame.Position, target.Position)
    end
end


local cam = workspace.CurrentCamera
FOVCircle.Visible = Config.Aimbot.Enabled
FOVCircle.Position = Vector2.new(cam.ViewportSize.X/2, cam.ViewportSize.Y/2)
FOVCircle.Color = Config.Aimbot.FOVRainbow and getRainbow() or Config.Aimbot.FOVColor
FOVCircle.Radius = Config.Aimbot.FOV


    
end)


UserInputService.InputBegan:Connect(function(inp, gp)
    if gp then return end
    if inp.UserInputType == Enum.UserInputType.Keyboard then
        if Config.ESP.ToggleKey and inp.KeyCode == Config.ESP.ToggleKey then
            Config.ESP.Enabled = not Config.ESP.Enabled
            print("ESP toggled:", Config.ESP.Enabled)
        elseif Config.Aimbot.ToggleKey and inp.KeyCode == Config.Aimbot.ToggleKey then
            Config.Aimbot.Enabled = not Config.Aimbot.Enabled
            print("Aimbot toggled:", Config.Aimbot.Enabled)
        end
    end
end)


local itemESPEnabled = false
local itemESPConnections = {}
local itemESPElements = {}

local YBA_ITEM_NAMES = {
    ["Mysterious Arrow"] = true,
    ["Rokakaka"] = true,
    ["Pure Rokakaka"] = true,
    ["Diamond"] = true,
    ["Gold Coin"] = true,
    ["Steel Ball"] = true,
    ["Clackers"] = true,
    ["Caesar's Headband"] = true,
    ["Zeppeli's Hat"] = true,
    ["Zeppeli's Scarf"] = true,
    ["Ancient Scroll"] = true,
    ["Quinton's Glove"] = true,
    ["Stone Mask"] = true,
    ["Lucky Arrow"] = true,
    ["Lucky Stone Mask"] = true,

    ["Rib Cage of The Saint's Corpse"] = true,
    
    ["Ancient Scroll"] = true,
    ["DIO's Diary"] = true,
    ["Lucky Stone Mask"] = true,
}

local function findYBAItems()
    local items = {}
    local player = Players.LocalPlayer
    local playerChar = player.Character
    local playerRoot = playerChar and playerChar:FindFirstChild("HumanoidRootPart")
    if not playerRoot then 
        return items 
    end

    local foundFolders = {}
    
    local targetFolder = workspace:FindFirstChild("Item_Spawns")
    if targetFolder then
        local itemsFolder = targetFolder:FindFirstChild("Items")
        if itemsFolder then
            table.insert(foundFolders, itemsFolder)
        end
    end
    
    if #foundFolders == 0 then
        local possibleFolders = {
            workspace:FindFirstChild("Items"),
            workspace:FindFirstChild("items"),
            workspace:FindFirstChild("ItemSpawns"),
            workspace:FindFirstChild("itemspawns"),
            workspace:FindFirstChild("ItemSpawn"),
            workspace:FindFirstChild("itemspawn"),
            workspace:FindFirstChild("Spawns"),
            workspace:FindFirstChild("spawns"),
            workspace:FindFirstChild("World"),
            workspace:FindFirstChild("world"),
            workspace:FindFirstChild("Map"),
            workspace:FindFirstChild("map"),
            workspace:FindFirstChild("Game"),
            workspace:FindFirstChild("game")
        }
        
        for _, folder in ipairs(possibleFolders) do
            if folder then
                table.insert(foundFolders, folder)
            end
        end
    end
    
    if #foundFolders == 0 then 
        return items 
    end
    
    local foundCount = 0
    local searchedModels = {}
    local debugCount = 0

    for _, folder in ipairs(foundFolders) do
        local function searchInFolder(currentFolder, depth)
            if depth > 3 then return end
            
            for _, child in ipairs(currentFolder:GetChildren()) do
                debugCount = debugCount + 1
                
                if child:IsA("Model") then
                    if not searchedModels[child] then
                        searchedModels[child] = true
                        
                        local proximityPrompt = child:FindFirstChild("ProximityPrompt")
                        local itemName = child.Name
                        
                        if proximityPrompt then
                            itemName = proximityPrompt.ObjectText or proximityPrompt.ActionText or child.Name
                        end
                        
                        if YBA_ITEM_NAMES[itemName] and YBAConfig.ItemESP.Items[itemName] then
                            for _, part in ipairs(child:GetDescendants()) do
                                if part:IsA("MeshPart") or part:IsA("Part") then
                                    local distance = (part.Position - playerRoot.Position).Magnitude
                                    
                                    foundCount = foundCount + 1
                                    
                                    table.insert(items, {
                                        Object = part,
                                        Root = part,
                                        Distance = distance,
                                        Name = itemName,
                                        Type = "YBA_Item",
                                        Folder = currentFolder.Name
                                    })
                                    break
                                end
                            end
                        -- Дополнительная проверка для дневника ДИО
                        elseif string.find(string.lower(itemName), "diary") and YBAConfig.ItemESP.Items["DIO's Diary"] then
                            for _, part in ipairs(child:GetDescendants()) do
                                if part:IsA("MeshPart") or part:IsA("Part") then
                                    local distance = (part.Position - playerRoot.Position).Magnitude
                                    
                                    foundCount = foundCount + 1
                                    
                                    table.insert(items, {
                                        Object = part,
                                        Root = part,
                                        Distance = distance,
                                        Name = "DIO's Diary", -- Стандартизируем название
                                        Type = "YBA_Item",
                                        Folder = currentFolder.Name
                                    })
                                    break
                                end
                            end
                        end
                    end
                elseif child:IsA("Folder") and depth < 2 then
                    searchInFolder(child, depth + 1)
                end
            end
        end
        
        searchInFolder(folder, 0)
    end
    
    table.sort(items, function(a, b) return a.Distance < b.Distance end)
    
    return items
end

local function findYBAItemsFast()
    local items = {}
    local player = Players.LocalPlayer
    local playerChar = player.Character
    local playerRoot = playerChar and playerChar:FindFirstChild("HumanoidRootPart")
    if not playerRoot then 
        return items 
    end
    
    local targetFolder = workspace:FindFirstChild("Item_Spawns")
    if not targetFolder then
        return items
    end
    
    local itemsFolder = targetFolder:FindFirstChild("Items")
    if not itemsFolder then
        return items
    end
    
    local foundCount = 0
    local debugCount = 0

    for _, child in ipairs(itemsFolder:GetChildren()) do
        debugCount = debugCount + 1
        
        if child:IsA("Model") then
            local proximityPrompt = child:FindFirstChild("ProximityPrompt")
            local itemName = child.Name
            
            if proximityPrompt then
                itemName = proximityPrompt.ObjectText or proximityPrompt.ActionText or child.Name
            end
            
            if YBA_ITEM_NAMES[itemName] and YBAConfig.ItemESP.Items[itemName] then
                for _, part in ipairs(child:GetDescendants()) do
                    if part:IsA("MeshPart") or part:IsA("Part") then
                        local distance = (part.Position - playerRoot.Position).Magnitude
                        
                        foundCount = foundCount + 1
                        print("YBA Item ESP: Найден предмет", itemName, "на расстоянии", math.floor(distance), "м")
                        
                        table.insert(items, {
                            Object = part,
                            Root = part,
                            Distance = distance,
                            Name = itemName,
                            Type = "YBA_Item",
                            Folder = "Item_Spawns.Items"
                        })
                        break
                    end
                end
            elseif string.find(string.lower(itemName), "diary") and YBAConfig.ItemESP.Items["DIO's Diary"] then
                for _, part in ipairs(child:GetDescendants()) do
                    if part:IsA("MeshPart") or part:IsA("Part") then
                        local distance = (part.Position - playerRoot.Position).Magnitude
                        
                        foundCount = foundCount + 1
                        print("YBA Item ESP: Найден дневник (по поиску)", itemName, "на расстоянии", math.floor(distance), "м")
                        
                        table.insert(items, {
                            Object = part,
                            Root = part,
                            Distance = distance,
                            Name = "DIO's Diary",
                            Type = "YBA_Item",
                            Folder = "Item_Spawns.Items"
                        })
                        break
                    end
                end
            else
                local lowerName = string.lower(itemName)
                if string.find(lowerName, "arrow") or 
                   string.find(lowerName, "rokakaka") or
                   string.find(lowerName, "diamond") or
                   string.find(lowerName, "coin") or
                   string.find(lowerName, "corpse") or
                   string.find(lowerName, "diary") or
                   string.find(lowerName, "mask") or
                   string.find(lowerName, "scroll") or
                   string.find(lowerName, "glove") or
                   string.find(lowerName, "headband") or
                   string.find(lowerName, "ball") then
                    
                    for _, part in ipairs(child:GetDescendants()) do
                        if part:IsA("MeshPart") or part:IsA("Part") then
                            local distance = (part.Position - playerRoot.Position).Magnitude
                            
                            if distance <= YBAConfig.ItemESP.MaxDistance then
                                foundCount = foundCount + 1
                                print("YBA Item ESP: Быстрый поиск - найден возможный предмет", itemName, "на расстоянии", math.floor(distance), "м")
                                
                                table.insert(items, {
                                    Object = part,
                                    Root = part,
                                    Distance = distance,
                                    Name = itemName,
                                    Type = "YBA_Item",
                                    Folder = "Item_Spawns.Items"
                                })
                                break
                            end
                        end
                    end
                end
            end
        end
    end
    
    table.sort(items, function(a, b) return a.Distance < b.Distance end)
    
    return items
end

local function findYBAItemsAlternative()
    local items = {}
    local player = Players.LocalPlayer
    local playerChar = player.Character
    local playerRoot = playerChar and playerChar:FindFirstChild("HumanoidRootPart")
    if not playerRoot then 
        print("YBA Item ESP: Игрок не найден (альтернативный поиск)")
        return items 
    end

    print("YBA Item ESP: Альтернативный поиск по всему workspace...")
    
    local foundCount = 0
    local searchedModels = {}
    local debugCount = 0

    local function searchInWorkspace(parent, depth)
        if depth > 10 then return end
        
        for _, child in ipairs(parent:GetChildren()) do
            debugCount = debugCount + 1
            if debugCount % 500 == 0 then
                print("YBA Item ESP: Альтернативный поиск - проверено объектов:", debugCount)
            end
            
            if child:IsA("Model") then
                if not searchedModels[child] then
                    searchedModels[child] = true

                    if YBA_ITEM_NAMES[child.Name] and YBAConfig.ItemESP.Items[child.Name] then
                        print("YBA Item ESP: Альтернативный поиск - найдена модель предмета:", child.Name)

                        for _, part in ipairs(child:GetDescendants()) do
                            if part:IsA("MeshPart") or part:IsA("Part") then
                                local distance = (part.Position - playerRoot.Position).Magnitude
                                
                                if distance <= YBAConfig.ItemESP.MaxDistance then
                                    foundCount = foundCount + 1
                                    print("YBA Item ESP: Альтернативный поиск - найден предмет", child.Name, "на расстоянии", math.floor(distance), "м")
                                    
                                    table.insert(items, {
                                        Object = part,
                                        Root = part,
                                        Distance = distance,
                                        Name = child.Name,
                                        Type = "YBA_Item",
                                        Folder = "Workspace"
                                    })
                                    break
                                end
                            end
                        end
                    elseif string.find(string.lower(child.Name), "diary") and YBAConfig.ItemESP.Items["DIO's Diary"] then
                        print("YBA Item ESP: Альтернативный поиск - найден дневник:", child.Name)

                        for _, part in ipairs(child:GetDescendants()) do
                            if part:IsA("MeshPart") or part:IsA("Part") then
                                local distance = (part.Position - playerRoot.Position).Magnitude
                                
                                if distance <= YBAConfig.ItemESP.MaxDistance then
                                    foundCount = foundCount + 1
                                    print("YBA Item ESP: Альтернативный поиск - найден дневник", child.Name, "на расстоянии", math.floor(distance), "м")
                                    
                                    table.insert(items, {
                                        Object = part,
                                        Root = part,
                                        Distance = distance,
                                        Name = "DIO's Diary",
                                        Type = "YBA_Item",
                                        Folder = "Workspace"
                                    })
                                    break
                                end
                            end
                        end
                    else
                        if string.find(string.lower(child.Name), "arrow") or 
                           string.find(string.lower(child.Name), "rokakaka") or
                           string.find(string.lower(child.Name), "diamond") or
                           string.find(string.lower(child.Name), "coin") then
                            print("YBA Item ESP: Альтернативный поиск - найдена неизвестная модель (возможно предмет):", child.Name)
                        end
                    end
                end
            elseif child:IsA("Folder") and depth < 5 then
                searchInWorkspace(child, depth + 1)
            end
        end
    end

    searchInWorkspace(workspace, 0)

    table.sort(items, function(a, b) return a.Distance < b.Distance end)
    
    print("YBA Item ESP: Альтернативный поиск - всего проверено объектов:", debugCount)
    print("YBA Item ESP: Альтернативный поиск - всего найдено предметов:", foundCount)
    
    return items
end

local function debugWorkspaceStructure()
    print("YBA Item ESP: === ОТЛАДКА СТРУКТУРЫ WORKSPACE ===")
    
    local function printFolderStructure(parent, prefix, maxDepth)
        if maxDepth <= 0 then return end
        
        for _, child in ipairs(parent:GetChildren()) do
            local childType = child.ClassName
            local childName = child.Name
            
            print(prefix .. "├─ " .. childName .. " (" .. childType .. ")")

            if child:IsA("Folder") then
                printFolderStructure(child, prefix .. "│  ", maxDepth - 1)
            end

            if child:IsA("Model") then
                local hasMeshPart = false
                local hasPart = false
                for _, descendant in ipairs(child:GetDescendants()) do
                    if descendant:IsA("MeshPart") then
                        hasMeshPart = true
                    elseif descendant:IsA("Part") then
                        hasPart = true
                    end
                end
                if hasMeshPart or hasPart then
                    print(prefix .. "│  └─ [Содержит MeshPart/Part]")
                end
            end
        end
    end
    
    print("YBA Item ESP: Структура workspace (первые 3 уровня):")
    printFolderStructure(workspace, "", 3)
    
    print("YBA Item ESP: === КОНЕЦ ОТЛАДКИ ===")
end

local function createItemESP(item)
    if itemESPElements[item.Object] then
        return itemESPElements[item.Object]
    end
    
    if not item.Object or not item.Object.Parent then
        return nil
    end

    if item.Distance > YBAConfig.ItemESP.MaxRenderDistance then
        return nil
    end
    
    print("YBA Item ESP: Создаем ESP для предмета:", item.Name)
    
    local esp = {}
    esp.itemName = item.Name 

    local function getItemColor(itemName)
        if string.find(itemName, "Arrow") then
            return Color3.fromRGB(255, 215, 0) 
        elseif string.find(itemName, "Rokakaka") then
            return Color3.fromRGB(255, 0, 255) 
        elseif string.find(itemName, "Diamond") then
            return Color3.fromRGB(0, 255, 255) 
        elseif string.find(itemName, "Corpse") then
            return Color3.fromRGB(255, 0, 0) 
        elseif string.find(itemName, "Diary") then
            return Color3.fromRGB(255, 165, 0)
        else
            return YBAConfig.ItemESP.FillColor 
        end
    end
    
    local itemColor = getItemColor(item.Name)

    if YBAConfig.ItemESP.ShowOutline or YBAConfig.ItemESP.ShowFill then
        local success, highlight = pcall(function()
            local hl = Instance.new("Highlight")
            hl.Adornee = item.Object
            hl.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
            hl.FillColor = YBAConfig.ItemESP.ShowFill and itemColor or Color3.fromRGB(0, 0, 0)
            hl.FillTransparency = YBAConfig.ItemESP.ShowFill and YBAConfig.ItemESP.FillTransparency or 1
            hl.OutlineColor = YBAConfig.ItemESP.ShowOutline and YBAConfig.ItemESP.OutlineColor or Color3.fromRGB(0, 0, 0)
            hl.OutlineTransparency = YBAConfig.ItemESP.ShowOutline and YBAConfig.ItemESP.OutlineTransparency or 1
            hl.Parent = item.Object

            local pulseConnection
            pulseConnection = RunService.Heartbeat:Connect(function()
                if not hl.Parent then
                    pulseConnection:Disconnect()
                    return
                end
                
                local time = tick()
                local pulse = math.sin(time * 4) * 0.4 + 0.6
                hl.FillTransparency = YBAConfig.ItemESP.FillTransparency + (1 - pulse) * 0.4
                hl.OutlineTransparency = YBAConfig.ItemESP.OutlineTransparency + (1 - pulse) * 0.2
            end)
            
            esp.pulseConnection = pulseConnection
            
            return hl
        end)
        
        if success and highlight then
            esp.highlight = highlight
            print("YBA Item ESP: Highlight создан для:", item.Name)
        else
            print("YBA Item ESP: Ошибка при создании Highlight для:", item.Name)
        end
    end

    if YBAConfig.ItemESP.ShowText then
        local success, billboard = pcall(function()
            local bg = Instance.new("BillboardGui")
            bg.AlwaysOnTop = true
            bg.Size = UDim2.new(0, 200, 0, 50) 
            bg.StudsOffset = Vector3.new(0, 3, 0) 
            bg.Parent = item.Object

            local background = Instance.new("Frame", bg)
            background.Size = UDim2.new(1, 0, 1, 0)
            background.Position = UDim2.new(0, 0, 0, 0)
            background.BackgroundColor3 = YBAConfig.ItemESP.TextBackgroundColor
            background.BackgroundTransparency = YBAConfig.ItemESP.TextBackgroundTransparency
            background.BorderSizePixel = 0
            background.ZIndex = 1
            
            local corner = Instance.new("UICorner", background)
            corner.CornerRadius = UDim.new(0, 6) 

            local border = Instance.new("Frame", bg)
            border.Size = UDim2.new(1, 2, 1, 2)
            border.Position = UDim2.new(0, -1, 0, -1)
            border.BackgroundColor3 = itemColor
            border.BorderSizePixel = 0
            border.ZIndex = 0
            
            local borderCorner = Instance.new("UICorner", border)
            borderCorner.CornerRadius = UDim.new(0, 8) 

            local tl = Instance.new("TextLabel", bg)
            tl.Size = UDim2.new(1, -6, 0.6, 0) 
            tl.Position = UDim2.new(0, 3, 0, 2)
            tl.BackgroundTransparency = 1
            tl.Font = YBAConfig.ItemESP.Font
            tl.TextSize = YBAConfig.ItemESP.TextSize
            tl.TextColor3 = YBAConfig.ItemESP.TextColor
            tl.TextXAlignment = Enum.TextXAlignment.Center
            tl.TextYAlignment = Enum.TextYAlignment.Center
            tl.Text = string.format("🎯 %s", item.Name)
            tl.ZIndex = 3

            local distanceLabel = Instance.new("TextLabel", bg)
            distanceLabel.Size = UDim2.new(1, -6, 0.4, 0) 
            distanceLabel.Position = UDim2.new(0, 3, 0.6, 0) 
            distanceLabel.BackgroundTransparency = 1
            distanceLabel.Font = Enum.Font.Gotham
            distanceLabel.TextSize = YBAConfig.ItemESP.DistanceTextSize
            distanceLabel.TextColor3 = YBAConfig.ItemESP.TextColor
            distanceLabel.TextXAlignment = Enum.TextXAlignment.Center
            distanceLabel.TextYAlignment = Enum.TextYAlignment.Center
            distanceLabel.Text = string.format("📏 %dm", math.floor(item.Distance)) 
            distanceLabel.ZIndex = 3
            
            return {
                billboard = bg, 
                text = tl, 
                distanceLabel = distanceLabel,
                background = background,
                border = border
            }
        end)
        
        if success and billboard then
            esp.billboard = billboard.billboard
            esp.text = billboard.text
            esp.distanceLabel = billboard.distanceLabel
            esp.background = billboard.background
            esp.border = billboard.border
            print("YBA Item ESP: BillboardGui создан для:", item.Name)
        else
            print("YBA Item ESP: Ошибка при создании BillboardGui для:", item.Name)
        end
    end
    
    itemESPElements[item.Object] = esp
    return esp
end

local function updateItemESP(item)
    local esp = itemESPElements[item.Object]
    if not esp then return end

    if true then
        if not item.Object or not item.Object.Parent then
            print("YBA Item ESP: Предмет больше не существует, удаляем ESP:", item.Name)
            removeItemESP(item)
            return
        end

        local currentParent = item.Object.Parent
        while currentParent and currentParent ~= workspace do
            if currentParent.Name == "Items" and currentParent.Parent and currentParent.Parent.Name == "Item_Spawns" then
                break
            end
            currentParent = currentParent.Parent
        end
        
        if not currentParent or currentParent == workspace then
            print("YBA Item ESP: Предмет перемещен из папки Items, удаляем ESP:", item.Name)
            removeItemESP(item)
            return
        end
    end

    local function getItemColor(itemName)
        if string.find(itemName, "Arrow") then
            return Color3.fromRGB(255, 215, 0) 
        elseif string.find(itemName, "Rokakaka") then
            return Color3.fromRGB(255, 0, 255)
        elseif string.find(itemName, "Diamond") then
            return Color3.fromRGB(0, 255, 255)
        elseif string.find(itemName, "Corpse") then
            return Color3.fromRGB(255, 0, 0) 
        elseif string.find(itemName, "Diary") then
            return Color3.fromRGB(255, 165, 0)
        else
            return YBAConfig.ItemESP.FillColor 
        end
    end
    
    local itemColor = getItemColor(item.Name)

    if esp.text and esp.text.Parent then
        pcall(function()
            esp.text.Text = string.format("🎯 %s", item.Name)
        end)
    end

    if esp.distanceLabel and esp.distanceLabel.Parent then
        pcall(function()
            esp.distanceLabel.Text = string.format("📏 %dm", math.floor(item.Distance)) 
        end)
    end

    if esp.highlight and esp.highlight.Parent then
        pcall(function()
            esp.highlight.FillColor = YBAConfig.ItemESP.ShowFill and itemColor or Color3.fromRGB(0, 0, 0)
            esp.highlight.FillTransparency = YBAConfig.ItemESP.ShowFill and YBAConfig.ItemESP.FillTransparency or 1
            esp.highlight.OutlineColor = YBAConfig.ItemESP.ShowOutline and YBAConfig.ItemESP.OutlineColor or Color3.fromRGB(0, 0, 0)
            esp.highlight.OutlineTransparency = YBAConfig.ItemESP.ShowOutline and YBAConfig.ItemESP.OutlineTransparency or 1
        end)
    end

    if esp.border and esp.border.Parent then
        pcall(function()
            esp.border.BackgroundColor3 = itemColor
        end)
    end
end

local function removeItemESP(item)
    local esp = itemESPElements[item.Object]
    if not esp then return end

    if esp.pulseConnection then
        esp.pulseConnection:Disconnect()
        esp.pulseConnection = nil
    end

    pcall(function()
        if esp.highlight and esp.highlight.Parent then
            esp.highlight:Destroy()
        end
    end)

    pcall(function()
        if esp.billboard and esp.billboard.Parent then
            esp.billboard:Destroy()
        end
    end)

    esp.highlight = nil
    esp.billboard = nil
    esp.text = nil
    esp.distanceLabel = nil
    esp.background = nil
    esp.border = nil
    
    itemESPElements[item.Object] = nil
end

local function startItemESP()
    if itemESPEnabled then 
        print("YBA Item ESP: Уже активирован!")
        return 
    end
    itemESPEnabled = true
    
    print("YBA Item ESP: Активирован!")
    print("YBA Item ESP: Максимальная дистанция:", YBAConfig.ItemESP.MaxDistance)
    print("YBA Item ESP: Показывать обводку:", YBAConfig.ItemESP.ShowOutline)
    print("YBA Item ESP: Показывать текст:", YBAConfig.ItemESP.ShowText)

    local testItems = findYBAItems()
    print("YBA Item ESP: Активирован! Найдено предметов:", #testItems)
    
    local lastUpdate = 0
    local updateInterval = YBAConfig.ItemESP.UpdateInterval 

    local itemESPLoop = RunService.Heartbeat:Connect(function()
        if not YBAConfig.ItemESP.Enabled then
            stopItemESP()
            return
        end

        local currentTime = tick()
        if currentTime - lastUpdate < updateInterval then
            return
        end
        lastUpdate = currentTime

        local success, items = pcall(findYBAItemsFast)
        local currentItems = {}

        if not success or not items or #items == 0 then
            local success2, items2 = pcall(findYBAItems)
            if success2 and items2 and #items2 > 0 then
                items = items2
                success = true
                print("YBA Item ESP: Используем обычный поиск, найдено предметов:", #items)
            else
                local success3, items3 = pcall(findYBAItemsAlternative)
                if success3 and items3 and #items3 > 0 then
                    items = items3
                    success = true
                    print("YBA Item ESP: Используем альтернативный поиск, найдено предметов:", #items)
                end
            end
        end
        
        if success and items then
            for i = 1, math.min(100, #items) do 
                local item = items[i]
                if item and item.Object and item.Object.Parent then
                    if YBAConfig.ItemESP.Items[item.Name] then
                        currentItems[item.Object] = true

                        if not itemESPElements[item.Object] then
                            pcall(createItemESP, item)
                        else
                            pcall(updateItemESP, item)
                        end
                    else
                        if itemESPElements[item.Object] then
                            pcall(removeItemESP, item)
                        end
                    end
                end
            end

            if math.floor(currentTime) % 5 == 0 then
                print("YBA Item ESP: Активных ESP:", #items, "| Максимальная дистанция:", YBAConfig.ItemESP.MaxDistance)
            end
        end

        for obj, esp in pairs(itemESPElements) do
            if not currentItems[obj] then
                pcall(removeItemESP, {Object = obj})
            end
        end
    end)
    
    table.insert(itemESPConnections, itemESPLoop)

    local cleanupLoop = RunService.Heartbeat:Connect(function()
        if not YBAConfig.ItemESP.Enabled then
            return
        end
        
        for obj, esp in pairs(itemESPElements) do
            if not obj or not obj.Parent then
                pcall(removeItemESP, {Object = obj})
            end
        end
    end)
    
    table.insert(itemESPConnections, cleanupLoop)
end

local function stopItemESP()
    if not itemESPEnabled then return end
    itemESPEnabled = false
    
    print("YBA Item ESP: Деактивирован!")

    for obj, esp in pairs(itemESPElements) do
        pcall(removeItemESP, {Object = obj})
    end

    for _, connection in ipairs(itemESPConnections) do
        if connection then
            pcall(function() connection:Disconnect() end)
        end
    end
    itemESPConnections = {}
end

-- Простые функции управления Player ESP





local function startUserStandESP()
    if userStandESPEnabled then return end
    userStandESPEnabled = true
    print("Player ESP: User Stand ESP activated")
end

local function stopUserStandESP()
    if not userStandESPEnabled then return end
    userStandESPEnabled = false
    print("Player ESP: User Stand ESP deactivated")
end

local function startUserStyleESP()
    if userStyleESPEnabled then return end
    userStyleESPEnabled = true
    print("Player ESP: User Style ESP activated")
end

local function stopUserStyleESP()
    if not userStyleESPEnabled then return end
    userStyleESPEnabled = false
    
    print("Player ESP: User Style ESP deactivated")
end


local screenGui = Instance.new("ScreenGui", CoreGui)
screenGui.Name = "SslkinGui"
screenGui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Name = "MainFrame"
mainFrame.Position = UDim2.new(0, 20, 0.5, -250)
mainFrame.Size = UDim2.new(0, 400, 0, 500)
mainFrame.BackgroundTransparency = 1
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true

local minWidth = 200
local minHeight = 150

local mainCorner = Instance.new("UICorner", mainFrame)
mainCorner.CornerRadius = UDim.new(0, 8)

local leftPanel = Instance.new("Frame", mainFrame)
leftPanel.Name = "LeftPanel"
leftPanel.Size = UDim2.new(0, 120, 1, 0)
leftPanel.Position = UDim2.new(0, 0, 0, 0)
leftPanel.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
leftPanel.BackgroundTransparency = 0
leftPanel.BorderSizePixel = 0

local leftCorner = Instance.new("UICorner", leftPanel)
leftCorner.CornerRadius = UDim.new(0, 8)

local logoFrame = Instance.new("Frame", leftPanel)
logoFrame.Name = "LogoFrame"
logoFrame.Size = UDim2.new(1, 0, 0, 80)
logoFrame.Position = UDim2.new(0, 0, 0, 0)
logoFrame.BackgroundTransparency = 1

local logoText = Instance.new("TextLabel", logoFrame)
logoText.Name = "LogoText"
logoText.Size = UDim2.new(1, 0, 0, 40)
logoText.Position = UDim2.new(0, 0, 0, 10)
logoText.Text = "SSLKIN"
logoText.Font = Enum.Font.GothamBold
logoText.TextSize = 18
logoText.TextColor3 = Color3.new(1, 1, 1)
logoText.BackgroundTransparency = 1
logoText.TextXAlignment = Enum.TextXAlignment.Center

local versionText = Instance.new("TextLabel", logoFrame)
versionText.Name = "VersionText"
versionText.Size = UDim2.new(1, 0, 0, 20)
versionText.Position = UDim2.new(0, 0, 0, 50)
versionText.Text = "UNIVERSAL SCRIPT"
versionText.Font = Enum.Font.Gotham
versionText.TextSize = 10
versionText.TextColor3 = Color3.new(1, 1, 1)
versionText.BackgroundTransparency = 1
versionText.TextXAlignment = Enum.TextXAlignment.Center

local navButtons = {
    {name = "Main", icon = "🏠"},
    {name = "YBA Hacks", icon = "⚔️"},
    {name = "Settings", icon = "⚙️"}
}

local selectedTab = "Main"

-- Scroll position for each tab
local tabScrollPositions = {
    ["Main"] = 0,
    ["YBA Hacks"] = 0,
    ["Settings"] = 0
}

for i, buttonData in ipairs(navButtons) do
    local navButton = Instance.new("TextButton", leftPanel)
    navButton.Name = buttonData.name .. "Button"
    navButton.Size = UDim2.new(1, -20, 0, 40)
    navButton.Position = UDim2.new(0, 10, 0, 100 + (i-1) * 50)
    navButton.Text = buttonData.icon .. " " .. buttonData.name
    navButton.Font = Enum.Font.Gotham
    navButton.TextSize = 14
    navButton.TextColor3 = Color3.new(1, 1, 1)
    navButton.BackgroundColor3 = buttonData.name == selectedTab and Color3.fromRGB(40, 40, 45) or Color3.fromRGB(30, 30, 35)
    navButton.BorderSizePixel = 0
    navButton.AutoButtonColor = false
    
    local buttonCorner = Instance.new("UICorner", navButton)
    buttonCorner.CornerRadius = UDim.new(0, 6)
    
    -- Подсветка выбранной вкладки
    if buttonData.name == selectedTab then
        local highlight = Instance.new("Frame", navButton)
        highlight.Name = "Highlight"
        highlight.Size = UDim2.new(0, 3, 1, 0)
        highlight.Position = UDim2.new(0, 0, 0, 0)
        highlight.BackgroundColor3 = MenuSettings.AccentColor
        highlight.BorderSizePixel = 0
        
        local highlightCorner = Instance.new("UICorner", highlight)
        highlightCorner.CornerRadius = UDim.new(0, 2)
    end
    
    navButton.MouseButton1Click:Connect(function()
        -- Обновляем выбранную вкладку
        for _, btn in pairs(leftPanel:GetChildren()) do
            if btn:IsA("TextButton") then
                btn.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
                local highlight = btn:FindFirstChild("Highlight")
                if highlight then
                    highlight:Destroy()
                end
            end
        end
        
        navButton.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
        selectedTab = buttonData.name
        
        local highlight = Instance.new("Frame", navButton)
        highlight.Name = "Highlight"
        highlight.Size = UDim2.new(0, 3, 1, 0)
        highlight.Position = UDim2.new(0, 0, 0, 0)
        highlight.BackgroundColor3 = MenuSettings.AccentColor
        highlight.BorderSizePixel = 0
        
        local highlightCorner = Instance.new("UICorner", highlight)
        highlightCorner.CornerRadius = UDim.new(0, 2)
        
        showContent(buttonData.name)
    end)
end

local rightPanel = Instance.new("Frame", mainFrame)
rightPanel.Name = "RightPanel"
rightPanel.Size = UDim2.new(1, -120, 1, 0)
rightPanel.Position = UDim2.new(0, 120, 0, 0)
rightPanel.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
rightPanel.BackgroundTransparency = 0.15
rightPanel.BorderSizePixel = 0

local glassEffect = Instance.new("Frame", rightPanel)
glassEffect.Name = "GlassEffect"
glassEffect.Size = UDim2.new(1, 0, 1, 0)
glassEffect.Position = UDim2.new(0, 0, 0, 0)
glassEffect.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
glassEffect.BackgroundTransparency = 0.92
glassEffect.BorderSizePixel = 0
glassEffect.ZIndex = -1

local glassGradient = Instance.new("UIGradient", glassEffect)
glassGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(200, 200, 220)),
    ColorSequenceKeypoint.new(0.5, Color3.fromRGB(150, 150, 170)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(100, 100, 120))
}
glassGradient.Rotation = 45

local glassBorder = Instance.new("UIStroke", rightPanel)
glassBorder.Color = Color3.fromRGB(200, 200, 220)
glassBorder.Transparency = 0.7
glassBorder.Thickness = 1

local rightCorner = Instance.new("UICorner", rightPanel)
rightCorner.CornerRadius = UDim.new(0, 8)

local glassCorner = Instance.new("UICorner", glassEffect)
glassCorner.CornerRadius = UDim.new(0, 8)

local closeButton = Instance.new("TextButton", rightPanel)
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -35, 0, 5)
closeButton.Text = "X"
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 16
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
closeButton.BorderSizePixel = 0
closeButton.AutoButtonColor = false

local closeCorner = Instance.new("UICorner", closeButton)
closeCorner.CornerRadius = UDim.new(0, 6)

closeButton.MouseButton1Click:Connect(function()
    mainFrame.Visible = false
    createReopenButton()
end)

local resizeHandle = Instance.new("Frame", mainFrame)
resizeHandle.Name = "ResizeHandle"
resizeHandle.Size = UDim2.new(0, 15, 0, 15)
resizeHandle.Position = UDim2.new(1, -15, 1, -15)
resizeHandle.BackgroundColor3 = Color3.fromRGB(120, 120, 120)
resizeHandle.BackgroundTransparency = 0.2
resizeHandle.BorderSizePixel = 0
resizeHandle.ZIndex = 15

local line1 = Instance.new("Frame", resizeHandle)
line1.Size = UDim2.new(0, 2, 0, 10)
line1.Position = UDim2.new(0, 8, 0, 2)
line1.BackgroundColor3 = Color3.new(0.8, 0.8, 0.8)
line1.BorderSizePixel = 0
line1.Rotation = 45

local line2 = Instance.new("Frame", resizeHandle)
line2.Size = UDim2.new(0, 2, 0, 6)
line2.Position = UDim2.new(0, 5, 0, 6)
line2.BackgroundColor3 = Color3.new(0.8, 0.8, 0.8)
line2.BorderSizePixel = 0
line2.Rotation = 45

local line3 = Instance.new("Frame", resizeHandle)
line3.Size = UDim2.new(0, 2, 0, 2)
line3.Position = UDim2.new(0, 2, 0, 10)
line3.BackgroundColor3 = Color3.new(0.8, 0.8, 0.8)
line3.BorderSizePixel = 0
line3.Rotation = 45

-- Функция изменения размера (свободное изменение как в Windows)
local isResizing = false
local startMousePos = Vector2.new(0, 0)
local startFrameSize = UDim2.new(0, 400, 0, 500)

resizeHandle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        isResizing = true
        startMousePos = UserInputService:GetMouseLocation()
        startFrameSize = mainFrame.Size
        
        -- Отключаем перетаскивание основного фрейма
        mainFrame.Draggable = false
        
        -- Меняем визуал handle при использовании
        resizeHandle.BackgroundTransparency = 0.1
    end
end)

UserInputService.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 and isResizing then
        isResizing = false
        mainFrame.Draggable = true
        resizeHandle.BackgroundTransparency = 0.2
    end
end)

RunService.RenderStepped:Connect(function()
    if isResizing then
        local currentMousePos = UserInputService:GetMouseLocation()
        local deltaX = currentMousePos.X - startMousePos.X
        local deltaY = currentMousePos.Y - startMousePos.Y
        
        -- Свободное изменение размера (как в Windows)
        local newWidth = math.max(minWidth, startFrameSize.X.Offset + deltaX)
        local newHeight = math.max(minHeight, startFrameSize.Y.Offset + deltaY)
        
        mainFrame.Size = UDim2.new(0, newWidth, 0, newHeight)
    end
end)

function createReopenButton()
    local existingButton = screenGui:FindFirstChild("ReopenButton")
    if existingButton then
        existingButton:Destroy()
    end
    
    local reopenButton = Instance.new("TextButton", screenGui)
    reopenButton.Name = "ReopenButton"
    reopenButton.Size = UDim2.new(0, 50, 0, 50)
    reopenButton.Position = UDim2.new(1, -70, 0, 20)
    reopenButton.Text = "🔧"
    reopenButton.Font = Enum.Font.GothamBold
    reopenButton.TextSize = 20
    reopenButton.TextColor3 = Color3.new(1, 1, 1)
    reopenButton.BackgroundColor3 = MenuSettings.AccentColor
    reopenButton.BorderSizePixel = 0
    reopenButton.AutoButtonColor = false
    
    local reopenCorner = Instance.new("UICorner", reopenButton)
    reopenCorner.CornerRadius = UDim.new(0.5, 0)
    
    reopenButton.MouseButton1Click:Connect(function()
        mainFrame.Visible = true
        reopenButton:Destroy()
    end)
end

local contentTitle = Instance.new("TextLabel", rightPanel)
contentTitle.Name = "ContentTitle"
contentTitle.Size = UDim2.new(1, -20, 0, 40)
contentTitle.Position = UDim2.new(0, 10, 0, 10)
contentTitle.Text = "MAIN FUNCTIONS"
contentTitle.Font = Enum.Font.GothamBold
contentTitle.TextSize = 18
contentTitle.TextColor3 = Color3.new(1, 1, 1)
contentTitle.BackgroundTransparency = 1
contentTitle.TextXAlignment = Enum.TextXAlignment.Center

local scrollFrame = Instance.new("ScrollingFrame", rightPanel)
scrollFrame.Name = "ScrollFrame"
scrollFrame.Size = UDim2.new(1, -20, 1, -100)
scrollFrame.Position = UDim2.new(0, 10, 0, 60)
scrollFrame.BackgroundTransparency = 1
scrollFrame.ScrollBarThickness = 6
scrollFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y

local functionsContainer = Instance.new("Frame", scrollFrame)
functionsContainer.Name = "FunctionsContainer"
functionsContainer.Size = UDim2.new(1, 0, 0, 0)
functionsContainer.Position = UDim2.new(0, 0, 0, 0)
functionsContainer.BackgroundTransparency = 1
functionsContainer.AutomaticSize = Enum.AutomaticSize.Y

local currentY = 0
local padding = 8

local function createSectionHeader(text)
    currentY = currentY + padding
    local spacer = Instance.new("Frame", functionsContainer)
    spacer.Size = UDim2.new(1, 0, 0, 10)
    spacer.Position = UDim2.new(0, 0, 0, currentY)
    spacer.BackgroundTransparency = 1
    currentY = currentY + 10
    
    local lbl = Instance.new("TextLabel", functionsContainer)
    lbl.Text = text
    lbl.Size = UDim2.new(1, -10, 0, 30)
    lbl.Position = UDim2.new(0, 5, 0, currentY)
    lbl.Font = Enum.Font.GothamBold
    lbl.TextSize = 16
    lbl.TextColor3 = Color3.fromRGB(255,255,255)
    lbl.BackgroundTransparency = 1
    currentY = currentY + 30 + padding
    return lbl
end

local function createToggle(label, default, callback)
    local btn = Instance.new("TextButton", functionsContainer)
    btn.Size = UDim2.new(1, -10, 0, 28)
    btn.Position = UDim2.new(0, 5, 0, currentY)
    btn.Text = label .. ": " .. (default and "ON" or "OFF")
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.TextColor3 = Color3.new(1,1,1)
    btn.BackgroundColor3 = Color3.fromRGB(40,40,40)
    btn.AutoButtonColor = false
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)

    btn.MouseButton1Click:Connect(function()
        default = not default
        btn.Text = label .. ": " .. (default and "ON" or "OFF")
        callback(default)
    end)
    
    currentY = currentY + 28 + padding
    return btn
end

local function createToggleSlider(label, default, callback)
    local container = Instance.new("Frame", functionsContainer)
    container.Size = UDim2.new(1, -10, 0, 40)
    container.Position = UDim2.new(0, 5, 0, currentY)
    container.BackgroundTransparency = 1

    local lbl = Instance.new("TextLabel", container)
    lbl.Text = label
    lbl.Size = UDim2.new(0.7, 0, 1, 0)
    lbl.Position = UDim2.new(0, 0, 0, 0)
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 14
    lbl.TextColor3 = Color3.new(1,1,1)
    lbl.BackgroundTransparency = 1
    lbl.TextXAlignment = Enum.TextXAlignment.Left

    -- Ползунок фон
    local sliderBack = Instance.new("Frame", container)
    sliderBack.Position = UDim2.new(0.7, 5, 0.3, 0)
    sliderBack.Size = UDim2.new(0, 50, 0, 20)
    sliderBack.BackgroundColor3 = default and MenuSettings.AccentColor or Color3.fromRGB(100, 100, 100)
    sliderBack.BorderSizePixel = 0
    sliderBack.Name = "SliderBack" -- Добавляем имя для поиска
    Instance.new("UICorner", sliderBack).CornerRadius = UDim.new(1, 0)

    -- Ползунок кружок
    local sliderKnob = Instance.new("Frame", sliderBack)
    sliderKnob.Size = UDim2.new(0, 16, 0, 16)
    sliderKnob.Position = default and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
    sliderKnob.BackgroundColor3 = Color3.new(1, 1, 1)
    sliderKnob.BorderSizePixel = 0
    Instance.new("UICorner", sliderKnob).CornerRadius = UDim.new(1, 0)

    -- Анимация и клик
    local isEnabled = default
    sliderBack.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isEnabled = not isEnabled
            
            -- Анимация
            local targetPos = isEnabled and UDim2.new(1, -18, 0.5, -8) or UDim2.new(0, 2, 0.5, -8)
            local targetColor = isEnabled and MenuSettings.AccentColor or Color3.fromRGB(100, 100, 100)
            
            local tween1 = TweenService:Create(sliderKnob, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {Position = targetPos})
            local tween2 = TweenService:Create(sliderBack, TweenInfo.new(0.2, Enum.EasingStyle.Quad), {BackgroundColor3 = targetColor})
            
            tween1:Play()
            tween2:Play()
            
            callback(isEnabled)
        end
    end)
    
    currentY = currentY + 40 + padding
    return container
end

local function createSlider(label, min, max, value, callback)
    local container = Instance.new("Frame", functionsContainer)
    container.Size = UDim2.new(1, -10, 0, 36)
    container.Position = UDim2.new(0, 5, 0, currentY)
    container.BackgroundTransparency = 1

    local lbl = Instance.new("TextLabel", container)
    lbl.Text = label .. ": " .. math.floor(value)
    lbl.Size = UDim2.new(1, 0, 0.5, 0)
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 13
    lbl.TextColor3 = Color3.new(1,1,1)
    lbl.BackgroundTransparency = 1

    local sliderBack = Instance.new("Frame", container)
    sliderBack.Position = UDim2.new(0,0,0.5,4)
    sliderBack.Size = UDim2.new(1, 0, 0, 6)
    sliderBack.BackgroundColor3 = Color3.fromRGB(50,50,50)
    Instance.new("UICorner", sliderBack).CornerRadius = UDim.new(1,0)

    local sliderFill = Instance.new("Frame", sliderBack)
    sliderFill.Size = UDim2.new((math.floor(value) - min) / (max - min), 0, 1, 0)
    sliderFill.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Instance.new("UICorner", sliderFill).CornerRadius = UDim.new(1,0)

    local dragging = false
    sliderBack.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)
    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
    RunService.RenderStepped:Connect(function()
        if dragging then
            local pos = UserInputService:GetMouseLocation().X
            local abs = sliderBack.AbsolutePosition.X
            local width = sliderBack.AbsoluteSize.X
            local pct = math.clamp((pos - abs) / width, 0, 1)
            local newVal = math.floor(min + (max - min) * pct)
            sliderFill.Size = UDim2.new(pct, 0, 1, 0)
            lbl.Text = label .. ": " .. newVal
            callback(newVal)
        end
    end)
    
    currentY = currentY + 36 + padding
end

local function createColorPicker(labelText, currentColor, callback)
    local lbl = Instance.new("TextLabel", functionsContainer)
    lbl.Text = labelText
    lbl.TextColor3 = Color3.new(1,1,1)
    lbl.BackgroundTransparency = 1
    lbl.Size = UDim2.new(1, -10, 0, 20)
    lbl.Position = UDim2.new(0, 5, 0, currentY)
    lbl.Font = Enum.Font.SourceSans
    lbl.TextSize = 14
    currentY = currentY + 20 + padding

    local colors = {
        Color3.fromRGB(255, 255, 255),
        Color3.fromRGB(255, 0, 0),
        Color3.fromRGB(0, 255, 0),
        Color3.fromRGB(0, 0, 255),
        Color3.fromRGB(255, 255, 0),
        Color3.fromRGB(255, 0, 255),
        Color3.fromRGB(0, 255, 255),
        Color3.fromRGB(128, 128, 128),
        Color3.fromRGB(255, 165, 0),
    }

    local row = Instance.new("Frame", functionsContainer)
    row.Size = UDim2.new(1, -10, 0, 28)
    row.Position = UDim2.new(0, 5, 0, currentY)
    row.BackgroundTransparency = 1

    local layout = Instance.new("UIListLayout", row)
    layout.FillDirection = Enum.FillDirection.Horizontal
    layout.HorizontalAlignment = Enum.HorizontalAlignment.Left
    layout.Padding = UDim.new(0, 4)

    for _, clr in pairs(colors) do
        local btn = Instance.new("TextButton", row)
        btn.Size = UDim2.new(0, 24, 0, 24)
        btn.BackgroundColor3 = clr
        btn.Text = ""
        btn.AutoButtonColor = false
        btn.MouseButton1Click:Connect(function()
            callback(clr)
        end)
    end
    
    currentY = currentY + 28 + padding
end

local function createSpeedInput(label, currentSpeed, callback)
    local container = Instance.new("Frame", functionsContainer)
    container.Size = UDim2.new(1, -10, 0, 36)
    container.Position = UDim2.new(0, 5, 0, currentY)
    container.BackgroundTransparency = 1

    local lbl = Instance.new("TextLabel", container)
    lbl.Text = label .. ": " .. currentSpeed
    lbl.Size = UDim2.new(0.7, 0, 0.5, 0)
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 13
    lbl.TextColor3 = Color3.new(1,1,1)
    lbl.BackgroundTransparency = 1

    local inputBox = Instance.new("TextBox", container)
    inputBox.Position = UDim2.new(0.7, 5, 0.25, 0)
    inputBox.Size = UDim2.new(0.3, -5, 0.5, 0)
    inputBox.Text = tostring(currentSpeed)
    inputBox.Font = Enum.Font.Gotham
    inputBox.TextSize = 12
    inputBox.TextColor3 = Color3.new(1,1,1)
    inputBox.BackgroundColor3 = Color3.fromRGB(40,40,40)
    inputBox.PlaceholderText = "Speed"
    Instance.new("UICorner", inputBox).CornerRadius = UDim.new(0,4)

    inputBox.FocusLost:Connect(function()
        local newSpeed = tonumber(inputBox.Text)
        if newSpeed and newSpeed > 0 then
            callback(newSpeed)
            lbl.Text = label .. ": " .. newSpeed
        else
            inputBox.Text = tostring(currentSpeed)
        end
    end)

    currentY = currentY + 36 + padding
    return lbl, inputBox
end

local function createKeyBindButton(name, currentKey, callback)
    local btn = Instance.new("TextButton", functionsContainer)
    btn.Size = UDim2.new(1, -10, 0, 24)
    btn.Position = UDim2.new(0, 5, 0, currentY)
    btn.Text = name .. " Hotkey: [" .. (currentKey and tostring(currentKey.Name) or "None") .. "]"
    btn.BackgroundColor3 = Color3.fromRGB(40,40,40)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 13
    btn.AutoButtonColor = false
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0,6)

    btn.MouseButton1Click:Connect(function()
        btn.Text = name .. " Hotkey: [Press any key]"
        local conn
        conn = UserInputService.InputBegan:Connect(function(input, gp)
            if not gp and input.UserInputType == Enum.UserInputType.Keyboard then
                conn:Disconnect()
                callback(input.KeyCode)
                btn.Text = name .. " Hotkey: [" .. tostring(input.KeyCode.Name) .. "]"
            end
        end)
    end)
    
    currentY = currentY + 24 + padding
end

local function createDivider()
    local divider = Instance.new("Frame", functionsContainer)
    divider.Size = UDim2.new(1, -10, 0, 2)
    divider.Position = UDim2.new(0, 5, 0, currentY)
    divider.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    divider.BorderSizePixel = 0
    currentY = currentY + 2 + padding
end

local function createDropdown(label, options, currentValue, callback)
    local container = Instance.new("Frame", functionsContainer)
    container.Size = UDim2.new(1, -10, 0, 50)
    container.Position = UDim2.new(0, 5, 0, currentY)
    container.BackgroundTransparency = 1

    local lbl = Instance.new("TextLabel", container)
    lbl.Text = label
    lbl.Size = UDim2.new(1, 0, 0, 20)
    lbl.Position = UDim2.new(0, 0, 0, 0)
    lbl.Font = Enum.Font.Gotham
    lbl.TextSize = 14
    lbl.TextColor3 = Color3.new(1,1,1)
    lbl.BackgroundTransparency = 1
    lbl.TextXAlignment = Enum.TextXAlignment.Left

    local dropdown = Instance.new("TextButton", container)
    dropdown.Size = UDim2.new(1, 0, 0, 25)
    dropdown.Position = UDim2.new(0, 0, 0, 25)
    dropdown.Text = currentValue .. " ▼"
    dropdown.Font = Enum.Font.Gotham
    dropdown.TextSize = 12
    dropdown.TextColor3 = Color3.new(1,1,1)
    dropdown.BackgroundColor3 = Color3.fromRGB(50,50,50)
    dropdown.AutoButtonColor = false
    Instance.new("UICorner", dropdown).CornerRadius = UDim.new(0,4)

    local isOpen = false
    local optionsFrame = Instance.new("Frame", container)
    optionsFrame.Size = UDim2.new(1, 0, 0, #options * 25)
    optionsFrame.Position = UDim2.new(0, 0, 0, 50)
    optionsFrame.BackgroundColor3 = Color3.fromRGB(45,45,45)
    optionsFrame.BorderSizePixel = 0
    optionsFrame.Visible = false
    optionsFrame.ZIndex = 20
    Instance.new("UICorner", optionsFrame).CornerRadius = UDim.new(0,4)

    for i, option in ipairs(options) do
        local optionBtn = Instance.new("TextButton", optionsFrame)
        optionBtn.Size = UDim2.new(1, 0, 0, 25)
        optionBtn.Position = UDim2.new(0, 0, 0, (i-1) * 25)
        optionBtn.Text = option
        optionBtn.Font = Enum.Font.Gotham
        optionBtn.TextSize = 12
        optionBtn.TextColor3 = Color3.new(1,1,1)
        optionBtn.BackgroundColor3 = Color3.fromRGB(45,45,45)
        optionBtn.AutoButtonColor = false
        optionBtn.BorderSizePixel = 0
        optionBtn.ZIndex = 21

        optionBtn.MouseButton1Click:Connect(function()
            dropdown.Text = option .. " ▼"
            optionsFrame.Visible = false
            isOpen = false
            callback(option)
        end)

        optionBtn.MouseEnter:Connect(function()
            optionBtn.BackgroundColor3 = Color3.fromRGB(60,60,60)
        end)

        optionBtn.MouseLeave:Connect(function()
            optionBtn.BackgroundColor3 = Color3.fromRGB(45,45,45)
        end)
    end

    dropdown.MouseButton1Click:Connect(function()
        isOpen = not isOpen
        optionsFrame.Visible = isOpen
        dropdown.Text = currentValue .. (isOpen and " ▲" or " ▼")
    end)

    currentY = currentY + 50 + padding + (isOpen and (#options * 25) or 0)
    return container
end

-- Функция для показа контента
function showContent(tabName)
    -- Сохраняем текущую позицию прокрутки
    if selectedTab and scrollFrame then
        tabScrollPositions[selectedTab] = scrollFrame.CanvasPosition.Y
    end
    
    -- Очищаем контейнер и сбрасываем позицию
    for _, child in pairs(functionsContainer:GetChildren()) do
        child:Destroy()
    end
    currentY = 0
    
    if tabName == "Main" then
        contentTitle.Text = getText("MainFunctions")
        
        -- Hotkeys
        createKeyBindButton("ESP", Config.ESP.ToggleKey, function(newKey)
            Config.ESP.ToggleKey = newKey
        end)
        
        createKeyBindButton("Aimbot", Config.Aimbot.ToggleKey, function(newKey)
            Config.Aimbot.ToggleKey = newKey
        end)
        
        createKeyBindButton("Fly", FlyConfig.ToggleKey, function(newKey)
            FlyConfig.ToggleKey = newKey
        end)
        
        createKeyBindButton("NoClip", NoClipConfig.ToggleKey, function(newKey)
            NoClipConfig.ToggleKey = newKey
        end)
        
        createKeyBindButton("SpeedHack", SpeedHackConfig.ToggleKey, function(newKey)
            SpeedHackConfig.ToggleKey = newKey
        end)
        
        createKeyBindButton("Teleport", TeleportConfig.ToggleKey, function(newKey)
            TeleportConfig.ToggleKey = newKey
        end)
        
        createDivider()
        
        createSectionHeader("🔷ESP Settings")
        createToggleSlider(getText("ESP"), Config.ESP.Enabled, function(v) Config.ESP.Enabled = v end)
        createToggleSlider(getText("TeamCheck"), Config.ESP.TeamCheck, function(v) Config.ESP.TeamCheck = v end)
        createToggleSlider(getText("ShowOutline"), Config.ESP.ShowOutline, function(v) Config.ESP.ShowOutline = v end)
        createToggleSlider(getText("ShowLines"), Config.ESP.ShowLines, function(v) Config.ESP.ShowLines = v end)
        createToggleSlider(getText("RainbowColors"), Config.ESP.Rainbow, function(v) Config.ESP.Rainbow = v end)
        
        createColorPicker("Fill Color", Config.ESP.FillColor, function(c) Config.ESP.FillColor = c end)
        createColorPicker("Outline Color", Config.ESP.OutlineColor, function(c) Config.ESP.OutlineColor = c end)
        createColorPicker("Text Color", Config.ESP.TextColor, function(c) Config.ESP.TextColor = c end)
        createSlider("Fill Transparency", 0, 1, Config.ESP.FillTransparency, function(v) Config.ESP.FillTransparency = v end)
        createSlider("Outline Transparency", 0, 1, Config.ESP.OutlineTransparency, function(v) Config.ESP.OutlineTransparency = v end)
        
        createDivider()
        
        createSectionHeader("🔷Aimbot Settings")
        createToggleSlider(getText("Aimbot"), Config.Aimbot.Enabled, function(v) Config.Aimbot.Enabled = v end)
        createToggleSlider(getText("TeamCheck"), Config.Aimbot.TeamCheck, function(v) Config.Aimbot.TeamCheck = v end)
        createToggleSlider(getText("VisibilityCheck"), Config.Aimbot.VisibilityCheck, function(v) Config.Aimbot.VisibilityCheck = v end)
        createSlider("FOV Radius", 10, 500, Config.Aimbot.FOV, function(v) Config.Aimbot.FOV = v end)
        createToggleSlider(getText("FOVRainbow"), Config.Aimbot.FOVRainbow, function(v) Config.Aimbot.FOVRainbow = v end)
        createColorPicker("Aimbot FOV Color", Config.Aimbot.FOVColor, function(c) Config.Aimbot.FOVColor = c end)
        
        createDivider()
        
        createSectionHeader("🟨 Fly Settings")
        createToggleSlider("Fly", FlyConfig.Enabled, function(v)
            FlyConfig.Enabled = v
            if v then startFly() else stopFly() end
        end)
        
        createSlider("Fly Speed", 0.1, 10, FlyConfig.Speed, function(v)
            FlyConfig.Speed = v
        end)
        
        createSpeedInput("Custom Fly Speed", FlyConfig.Speed, function(v)
            FlyConfig.Speed = v
        end)
        
        createDivider()
        
        createSectionHeader("🟪 NoClip Settings")
        local noClipStatusLabel = Instance.new("TextLabel", functionsContainer)
        noClipStatusLabel.Size = UDim2.new(1, -10, 0, 20)
        noClipStatusLabel.Position = UDim2.new(0, 5, 0, currentY)
        noClipStatusLabel.Text = "NoClip Status: OFF"
        noClipStatusLabel.Font = Enum.Font.GothamBold
        noClipStatusLabel.TextSize = 12
        noClipStatusLabel.TextColor3 = Color3.fromRGB(255,100,100)
        noClipStatusLabel.BackgroundTransparency = 1
        noClipStatusLabel.TextXAlignment = Enum.TextXAlignment.Left
        currentY = currentY + 20 + padding
        
        local forceNoClipToggle = createToggleSlider("Force NoClip", isNoClipping, function(v)
            if v then
                startNoClip()
                noClipStatusLabel.Text = "NoClip Status: ON"
                noClipStatusLabel.TextColor3 = Color3.fromRGB(100,255,100)
            else
                stopNoClip()
                noClipStatusLabel.Text = "NoClip Status: OFF"
                noClipStatusLabel.TextColor3 = Color3.fromRGB(255,100,100)
            end
        end)
        
        createDivider()
        
        createSectionHeader("🟦 SpeedHack Settings")
        createToggleSlider("SpeedHack", SpeedHackConfig.Enabled, function(v)
            SpeedHackConfig.Enabled = v
            if v then startSpeedHack() else stopSpeedHack() end
        end)
        
        createToggleSlider("Use JumpPower Method", SpeedHackConfig.UseJumpPower, function(v)
            SpeedHackConfig.UseJumpPower = v
            if SpeedHackConfig.Enabled then
                stopSpeedHack()
                startSpeedHack()
            end
        end)
        
        createSlider("SpeedHack Speed", 0.1, 10, SpeedHackConfig.Speed, function(v)
            SpeedHackConfig.Speed = v
            if SpeedHackConfig.Enabled then
                local char = Players.LocalPlayer.Character
                local hum = char and char:FindFirstChildOfClass("Humanoid")
                if hum then
                    hum.WalkSpeed = v * 16
                    if SpeedHackConfig.UseJumpPower then
                        hum.JumpPower = v * 50
                    end
                end
            end
        end)
        
        createSpeedInput("Custom SpeedHack Speed", SpeedHackConfig.Speed, function(v)
            SpeedHackConfig.Speed = v
            if SpeedHackConfig.Enabled then
                local char = Players.LocalPlayer.Character
                local hum = char and char:FindFirstChildOfClass("Humanoid")
                if hum then
                    hum.WalkSpeed = v * 16
                    if SpeedHackConfig.UseJumpPower then
                        hum.JumpPower = v * 50
                    end
                end
            end
        end)
        
        createDivider()
        
        -- Jump Settings
        createSectionHeader("🦘 Jump Settings")
        createToggleSlider(getText("LongJump"), LongJumpConfig.Enabled, function(v)
            LongJumpConfig.Enabled = v
            if v then startLongJump() else stopLongJump() end
        end)
        
        createSlider("Long Jump Power", 50, 500, LongJumpConfig.JumpPower, function(v)
            LongJumpConfig.JumpPower = v
            if LongJumpConfig.Enabled then
                local char = Players.LocalPlayer.Character
                local hum = char and char:FindFirstChildOfClass("Humanoid")
                if hum then
                    hum.JumpPower = v
                end
            end
        end)
        
        createToggleSlider(getText("InfiniteJump"), InfiniteJumpConfig.Enabled, function(v)
            InfiniteJumpConfig.Enabled = v
            if v then startInfiniteJump() else stopInfiniteJump() end
        end)
        
        createSlider("Infinite Jump Power", 20, 150, InfiniteJumpConfig.JumpPower, function(v)
            InfiniteJumpConfig.JumpPower = v
        end)
        
        createDivider()
        
        -- Teleport Settings
        createSectionHeader("🟩 Teleport Settings")
        
        local selectedPlayerLabel = Instance.new("TextLabel", functionsContainer)
        selectedPlayerLabel.Size = UDim2.new(1, -10, 0, 24)
        selectedPlayerLabel.Position = UDim2.new(0, 5, 0, currentY)
        selectedPlayerLabel.Text = getText("SelectedPlayer") .. ": " .. (TeleportConfig.SelectedPlayerName or "None")
        selectedPlayerLabel.Font = Enum.Font.GothamBold
        selectedPlayerLabel.TextSize = 14
        selectedPlayerLabel.TextColor3 = Color3.new(1,1,1)
        selectedPlayerLabel.BackgroundTransparency = 1
        selectedPlayerLabel.TextXAlignment = Enum.TextXAlignment.Left
        currentY = currentY + 24 + padding
        
        teleportBtn = Instance.new("TextButton", functionsContainer)
        teleportBtn.Size = UDim2.new(1, -10, 0, 28)
        teleportBtn.Position = UDim2.new(0, 5, 0, currentY)
        teleportBtn.Text = getText("StartTeleport")
        teleportBtn.Font = Enum.Font.GothamBold
        teleportBtn.TextSize = 14
        teleportBtn.TextColor3 = Color3.new(1,1,1)
        teleportBtn.BackgroundColor3 = Color3.fromRGB(0,150,0)
        teleportBtn.AutoButtonColor = false
        Instance.new("UICorner", teleportBtn).CornerRadius = UDim.new(0,6)
        currentY = currentY + 28 + padding
        
        teleportBtn.MouseButton1Click:Connect(function()
            if not TeleportConfig.TargetPlayer then
                teleportBtn.Text = "Select player first!"
                task.wait(2)
                teleportBtn.Text = "START TELEPORT"
                return
            end
            
            if TeleportConfig.Enabled then
                stopTeleport()
                TeleportConfig.Enabled = false
                teleportBtn.Text = getText("StartTeleport")
                teleportBtn.BackgroundColor3 = Color3.fromRGB(0,150,0)
            else
                startTeleport()
                TeleportConfig.Enabled = true
                teleportBtn.Text = getText("StopTeleport")
                teleportBtn.BackgroundColor3 = Color3.fromRGB(150,0,0)
            end
        end)
        
        local playerListLabel = Instance.new("TextLabel", functionsContainer)
        playerListLabel.Size = UDim2.new(1, -10, 0, 20)
        playerListLabel.Position = UDim2.new(0, 5, 0, currentY)
        playerListLabel.Text = getText("SelectPlayerForTeleport") .. ":"
        playerListLabel.Font = Enum.Font.GothamBold
        playerListLabel.TextSize = 12
        playerListLabel.TextColor3 = Color3.new(1,1,1)
        playerListLabel.BackgroundTransparency = 1
        playerListLabel.TextXAlignment = Enum.TextXAlignment.Left
        currentY = currentY + 20 + padding
        
        local playerButtons = {}
        local playerListStartY = currentY
        
        local function createPlayerList()
            for _, btn in pairs(playerButtons) do
                if btn and btn.Parent then
                    btn:Destroy()
                end
            end
            playerButtons = {}
            
            currentY = playerListStartY
            
            local allPlayers = Players:GetPlayers()
            local playerList = {}
            
            for _, player in ipairs(allPlayers) do
                if player ~= Players.LocalPlayer then
                    table.insert(playerList, player)
                end
            end
            
            table.sort(playerList, function(a, b)
                return string.lower(a.Name) < string.lower(b.Name)
            end)
            
            for _, player in ipairs(playerList) do
                local playerBtn = Instance.new("TextButton", functionsContainer)
                playerBtn.Size = UDim2.new(1, -10, 0, 24)
                playerBtn.Position = UDim2.new(0, 5, 0, currentY)
                playerBtn.Text = player.Name
                playerBtn.Font = Enum.Font.Gotham
                playerBtn.TextSize = 12
                playerBtn.TextColor3 = Color3.new(1,1,1)
                playerBtn.BackgroundColor3 = Color3.fromRGB(40,40,40)
                playerBtn.AutoButtonColor = false
                Instance.new("UICorner", playerBtn).CornerRadius = UDim.new(0,4)
                currentY = currentY + 24 + padding
                
                table.insert(playerButtons, playerBtn)
                
                playerBtn.MouseButton1Click:Connect(function()
                    TeleportConfig.TargetPlayer = player
                    TeleportConfig.SelectedPlayerName = player.Name
                    selectedPlayerLabel.Text = getText("SelectedPlayer") .. ": " .. player.Name
                    
                    for _, child in pairs(functionsContainer:GetChildren()) do
                        if child:IsA("TextButton") and child.Text == player.Name then
                            child.BackgroundColor3 = Color3.fromRGB(0,255,0)
                        elseif child:IsA("TextButton") and child.Text ~= "START TELEPORT" and child.Text ~= "STOP TELEPORT" and child.Text ~= player.Name then
                            child.BackgroundColor3 = Color3.fromRGB(40,40,40)
                        end
                    end
                end)
            end
        end
        
        createPlayerList()
        
        spawn(function()
            while true do
                task.wait(2)
                if selectedTab == "Main" then
                    createPlayerList()
                end
            end
        end)
        
    elseif tabName == "YBA Hacks" then
        contentTitle.Text = getText("YBAHacks")
        
        local standRangeLabel = Instance.new("TextLabel", functionsContainer)
        standRangeLabel.Size = UDim2.new(1, -10, 0, 20)
        standRangeLabel.Position = UDim2.new(0, 5, 0, currentY)
        standRangeLabel.Text = getText("YBAStandRange")
        standRangeLabel.Font = Enum.Font.Gotham
        standRangeLabel.TextSize = 12
        standRangeLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
        standRangeLabel.BackgroundTransparency = 1
        standRangeLabel.TextXAlignment = Enum.TextXAlignment.Left
        currentY = currentY + 20 + padding
        
        local ybaToggleBtn = createToggleSlider(getText("YBAStandRange"), YBAConfig.Enabled, function(v)
            YBAConfig.Enabled = v
            if v then 
                startYBA() 
            else 
                stopYBA() 
            end
        end)
        
        -- Удален тумблер Stand Speed - теперь скорость регулируется только ползунком
        
        local ybaNoClipStatusLabel = Instance.new("TextLabel", functionsContainer)
        ybaNoClipStatusLabel.Size = UDim2.new(1, -10, 0, 20)
        ybaNoClipStatusLabel.Position = UDim2.new(0, 5, 0, currentY)
        ybaNoClipStatusLabel.Text = "NoClip Status: " .. (isNoClipping and "ON" or "OFF")
        ybaNoClipStatusLabel.Font = Enum.Font.GothamBold
        ybaNoClipStatusLabel.TextSize = 12
        ybaNoClipStatusLabel.TextColor3 = isNoClipping and Color3.fromRGB(100,255,100) or Color3.fromRGB(255,100,100)
        ybaNoClipStatusLabel.BackgroundTransparency = 1
        ybaNoClipStatusLabel.TextXAlignment = Enum.TextXAlignment.Left
        currentY = currentY + 20 + padding
        
        local ybaNoClipToggle = createToggleSlider(getText("ForceNoClip"), isNoClipping, function(v)
            if v then
                startNoClip()
                ybaNoClipStatusLabel.Text = "NoClip Status: ON"
                ybaNoClipStatusLabel.TextColor3 = Color3.fromRGB(100,255,100)
            else
                stopNoClip()
                ybaNoClipStatusLabel.Text = "NoClip Status: OFF"
                ybaNoClipStatusLabel.TextColor3 = Color3.fromRGB(255,100,100)
            end
        end)
        
        createSlider("Flight Speed", 1, 200, YBAConfig.UndergroundControl.FlightSpeed or 50, function(v)
            YBAConfig.UndergroundControl.FlightSpeed = v
            print("🔥 Flight Speed изменена на:", v)
        end)
        

        
        local antiTimeStopLabel = Instance.new("TextLabel", functionsContainer)
        antiTimeStopLabel.Size = UDim2.new(1, -10, 0, 20)
        antiTimeStopLabel.Position = UDim2.new(0, 5, 0, currentY)
        antiTimeStopLabel.Text = getText("AntiTimeStop")
        antiTimeStopLabel.Font = Enum.Font.Gotham
        antiTimeStopLabel.TextSize = 12
        antiTimeStopLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
        antiTimeStopLabel.BackgroundTransparency = 1
        antiTimeStopLabel.TextXAlignment = Enum.TextXAlignment.Left
        currentY = currentY + 20 + padding
        
        local         antiTimeStopBtn = Instance.new("TextButton", functionsContainer)
        antiTimeStopBtn.Size = UDim2.new(1, -10, 0, 28)
        antiTimeStopBtn.Position = UDim2.new(0, 5, 0, currentY)
        antiTimeStopBtn.Text = getText("AntiTimeStop")
        antiTimeStopBtn.Font = Enum.Font.GothamBold
        antiTimeStopBtn.TextSize = 14
        antiTimeStopBtn.TextColor3 = Color3.new(1,1,1)
        antiTimeStopBtn.BackgroundColor3 = Color3.fromRGB(255,100,100)
        antiTimeStopBtn.AutoButtonColor = false
        Instance.new("UICorner", antiTimeStopBtn).CornerRadius = UDim.new(0,6)
        currentY = currentY + 28 + padding
        
        antiTimeStopBtn.MouseButton1Click:Connect(function()
            if not isAntiTimeStopEnabled then
                AntiTimeStopConfig.Enabled = true
                startAntiTimeStop()
                antiTimeStopBtn.Text = "ANTI TIME STOP ACTIVE"
                antiTimeStopBtn.BackgroundColor3 = Color3.fromRGB(0,255,0)
                
                spawn(function()
                    task.wait(0.3)
                    
                    AntiTimeStopConfig.Enabled = false
                    stopAntiTimeStop()
                    antiTimeStopBtn.Text = "ANTI TIME STOP"
                    antiTimeStopBtn.BackgroundColor3 = Color3.fromRGB(255,100,100)
                end)
            end
        end)
        
        createDivider()
    
    local playerESPLabel = Instance.new("TextLabel", functionsContainer)
        playerESPLabel.Size = UDim2.new(1, -10, 0, 25)
        playerESPLabel.Position = UDim2.new(0, 5, 0, currentY)
        playerESPLabel.Text = "👥 PLAYER ESP"
        playerESPLabel.Font = Enum.Font.GothamBold
        playerESPLabel.TextSize = 14
        playerESPLabel.TextColor3 = Color3.fromRGB(0, 255, 255)
        playerESPLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
        playerESPLabel.BorderSizePixel = 1
        playerESPLabel.BorderColor3 = Color3.fromRGB(100, 100, 120)
        playerESPLabel.TextXAlignment = Enum.TextXAlignment.Left
        Instance.new("UICorner", playerESPLabel).CornerRadius = UDim.new(0,4)
        currentY = currentY + 25 + padding
        
        local userStandToggleBtn = createToggleSlider("User Stand", false, function(v)
            if v then
                startUserStandESP()
            else
                stopUserStandESP()
            end
        end)
        
        local userStyleToggleBtn = createToggleSlider("User Style", false, function(v)
            if v then
                startUserStyleESP()
            else
                stopUserStyleESP()
            end
        end)
        
        local itemESPLabel = Instance.new("TextLabel", functionsContainer)
        itemESPLabel.Size = UDim2.new(1, -10, 0, 20)
        itemESPLabel.Position = UDim2.new(0, 5, 0, currentY)
        itemESPLabel.Text = getText("ItemESP")
        itemESPLabel.Font = Enum.Font.Gotham
        itemESPLabel.TextSize = 12
        itemESPLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
        itemESPLabel.BackgroundTransparency = 1
        itemESPLabel.TextXAlignment = Enum.TextXAlignment.Left
        currentY = currentY + 20 + padding
        
        local itemESPToggleBtn = createToggleSlider(getText("ItemESP"), YBAConfig.ItemESP.Enabled, function(v)
            YBAConfig.ItemESP.Enabled = v
            if v then 
                startItemESP() 
            else 
                stopItemESP() 
            end
        end)
        
        local itemSelectionHeader = Instance.new("TextLabel", functionsContainer)
        itemSelectionHeader.Size = UDim2.new(1, -10, 0, 25)
        itemSelectionHeader.Position = UDim2.new(0, 5, 0, currentY)
        itemSelectionHeader.Text = "📦 ITEM SELECTION"
        itemSelectionHeader.Font = Enum.Font.GothamBold
        itemSelectionHeader.TextSize = 14
        itemSelectionHeader.TextColor3 = Color3.fromRGB(255, 255, 0)
        itemSelectionHeader.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
        itemSelectionHeader.BorderSizePixel = 1
        itemSelectionHeader.BorderColor3 = Color3.fromRGB(100, 100, 120)
        itemSelectionHeader.TextXAlignment = Enum.TextXAlignment.Left
        Instance.new("UICorner", itemSelectionHeader).CornerRadius = UDim.new(0,4)
        currentY = currentY + 25 + padding
        
        local function createItemToggle(itemName, defaultState)
            local btn = createToggleSlider(itemName, defaultState, function(v)
                YBAConfig.ItemESP.Items[itemName] = v
                print("YBA Item ESP: Предмет", itemName, "установлен в", v and "ON" or "OFF")
                
                if YBAConfig.ItemESP.Enabled then
                    if not v then
                        for obj, esp in pairs(itemESPElements) do
                            if esp.itemName == itemName then
                                pcall(removeItemESP, {Object = obj})
                            end
                        end
                    end
                end
            end)
            return btn
        end
        
        createItemToggle(getText("MysteriousArrow"), YBAConfig.ItemESP.Items["Mysterious Arrow"])
        createItemToggle(getText("Rokakaka"), YBAConfig.ItemESP.Items["Rokakaka"])
        createItemToggle(getText("PureRokakaka"), YBAConfig.ItemESP.Items["Pure Rokakaka"])
        createItemToggle(getText("Diamond"), YBAConfig.ItemESP.Items["Diamond"])
        createItemToggle(getText("GoldCoin"), YBAConfig.ItemESP.Items["Gold Coin"])
        createItemToggle(getText("SteelBall"), YBAConfig.ItemESP.Items["Steel Ball"])
        createItemToggle(getText("Clackers"), YBAConfig.ItemESP.Items["Clackers"])
        createItemToggle(getText("CaesarsHeadband"), YBAConfig.ItemESP.Items["Caesar's Headband"])
        createItemToggle(getText("ZeppeliHat"), YBAConfig.ItemESP.Items["Zeppeli's Hat"])
        createItemToggle(getText("ZeppeliScarf"), YBAConfig.ItemESP.Items["Zeppeli's Scarf"])
        createItemToggle(getText("QuintonsGlove"), YBAConfig.ItemESP.Items["Quinton's Glove"])
        createItemToggle(getText("StoneMask"), YBAConfig.ItemESP.Items["Stone Mask"])
        createItemToggle(getText("RibCage"), YBAConfig.ItemESP.Items["Rib Cage of The Saint's Corpse"])
        createItemToggle(getText("AncientScroll"), YBAConfig.ItemESP.Items["Ancient Scroll"])
        createItemToggle(getText("DiosDiary"), YBAConfig.ItemESP.Items["DIO's Diary"])
        createItemToggle(getText("LuckyStoneMask"), YBAConfig.ItemESP.Items["Lucky Stone Mask"])
        createItemToggle(getText("LuckyArrow"), YBAConfig.ItemESP.Items["Lucky Arrow"])
        
    
        
    elseif tabName == "Settings" then
        contentTitle.Text = getText("MenuSettings")
        

        
        createDivider()
        
        local accentColorLabel = Instance.new("TextLabel", functionsContainer)
        accentColorLabel.Text = getText("AccentColor")
        accentColorLabel.TextColor3 = Color3.new(1,1,1)
        accentColorLabel.BackgroundTransparency = 1
        accentColorLabel.Size = UDim2.new(1, -10, 0, 20)
        accentColorLabel.Position = UDim2.new(0, 5, 0, currentY)
        accentColorLabel.Font = Enum.Font.Gotham
        accentColorLabel.TextSize = 14
        accentColorLabel.TextXAlignment = Enum.TextXAlignment.Left
        currentY = currentY + 20 + padding

        local accentColors = {
            Color3.fromRGB(0, 150, 0),
            Color3.fromRGB(0, 100, 255),
            Color3.fromRGB(255, 0, 100),
            Color3.fromRGB(255, 150, 0),
            Color3.fromRGB(150, 0, 255),
            Color3.fromRGB(255, 255, 0),
            Color3.fromRGB(0, 255, 255),
            Color3.fromRGB(255, 50, 50),
        }

        local colorRow = Instance.new("Frame", functionsContainer)
        colorRow.Size = UDim2.new(1, -10, 0, 35)
        colorRow.Position = UDim2.new(0, 5, 0, currentY)
        colorRow.BackgroundTransparency = 1

        local colorLayout = Instance.new("UIListLayout", colorRow)
        colorLayout.FillDirection = Enum.FillDirection.Horizontal
        colorLayout.HorizontalAlignment = Enum.HorizontalAlignment.Left
        colorLayout.Padding = UDim.new(0, 8)

        for _, color in pairs(accentColors) do
            local colorBtn = Instance.new("TextButton", colorRow)
            colorBtn.Size = UDim2.new(0, 30, 0, 30)
            colorBtn.BackgroundColor3 = color
            colorBtn.Text = ""
            colorBtn.AutoButtonColor = false
            colorBtn.BorderSizePixel = 0
            
            local colorCorner = Instance.new("UICorner", colorBtn)
            colorCorner.CornerRadius = UDim.new(0, 6)
            
            if MenuSettings.AccentColor == color then
                local highlight = Instance.new("UIStroke", colorBtn)
                highlight.Color = Color3.new(1, 1, 1)
                highlight.Thickness = 2
            end
            
            colorBtn.MouseButton1Click:Connect(function()
                MenuSettings.AccentColor = color
                updateAccentColor()
                
                for _, btn in pairs(colorRow:GetChildren()) do
                    if btn:IsA("TextButton") then
                        local stroke = btn:FindFirstChild("UIStroke")
                        if stroke then stroke:Destroy() end
                        
                        if btn.BackgroundColor3 == color then
                            local highlight = Instance.new("UIStroke", btn)
                            highlight.Color = Color3.new(1, 1, 1)
                            highlight.Thickness = 2
                        end
                    end
                end
                
                showContent(selectedTab)
            end)
        end
        
        currentY = currentY + 35 + padding
        
        createDivider()
        
        createDropdown(getText("Language"), {"English", "Russian"}, MenuSettings.Language, function(selectedLanguage)
            MenuSettings.Language = selectedLanguage
            updateAllTexts()
        end)
    end
    
    functionsContainer.Size = UDim2.new(1, 0, 0, currentY)
    
    selectedTab = tabName
    
    if scrollFrame and tabScrollPositions[tabName] then
        scrollFrame.CanvasPosition = Vector2.new(0, tabScrollPositions[tabName])
    end
end

showContent("Main")

UserInputService.InputBegan:Connect(function(input, gp)
    if not gp and input.KeyCode == Enum.KeyCode.Insert then
        mainFrame.Visible = not mainFrame.Visible
        if mainFrame.Visible then
            local existingButton = screenGui:FindFirstChild("ReopenButton")
            if existingButton then
                existingButton:Destroy()
            end
        else
            createReopenButton()
        end
    end
end)

local function detachStandControl(stand)
    if not stand or not stand.Root then
        print("[detachStandControl] Нет валидного стенда!")
        return
    end
    print("[detachStandControl] Открепляю стенд:", stand.Name)
    -- Отключаем привязку стенда к игроку (например, убираем Weld/Attachment, если есть)
    -- Даем управление через BodyVelocity
    local bv = stand.Root:FindFirstChild("BodyVelocity")
    if not bv then
        bv = Instance.new("BodyVelocity", stand.Root)
        bv.MaxForce = Vector3.new(1e6, 1e6, 1e6)
    end
    bv.Velocity = Vector3.new(0,0,0)
    -- Можно добавить свою физику управления, если нужно
end

-- Горячие клавиши удалены по просьбе пользователя
-- Отключаем существующие соединения если они есть
if _G._detachStandConnection then 
    _G._detachStandConnection:Disconnect() 
    _G._detachStandConnection = nil
end

local detachedStand = nil
local heartbeatConn = nil

local function updateDetachedStandVelocity()
    if not detachedStand or not detachedStand.Root then return end
    local UserInputService = game:GetService("UserInputService")
    local moveX = (UserInputService:IsKeyDown(Enum.KeyCode.D) and 1 or 0) - (UserInputService:IsKeyDown(Enum.KeyCode.A) and 1 or 0)
    local moveZ = (UserInputService:IsKeyDown(Enum.KeyCode.S) and 1 or 0) - (UserInputService:IsKeyDown(Enum.KeyCode.W) and 1 or 0)
    local moveY = (UserInputService:IsKeyDown(Enum.KeyCode.Space) and 1 or 0) - (UserInputService:IsKeyDown(Enum.KeyCode.LeftControl) and 1 or 0)
    local move = Vector3.new(moveX, moveY, moveZ)
    local speed = 50
    local bv = detachedStand.Root:FindFirstChild("BodyVelocity")
    if not bv then
        bv = Instance.new("BodyVelocity", detachedStand.Root)
        bv.MaxForce = Vector3.new(1e6, 1e6, 1e6)
    end
    if move.Magnitude > 0 then
        bv.Velocity = move.Unit * speed
    else
        bv.Velocity = Vector3.new(0,0,0)
    end
end

local function enableDetachedStandControl(stand)
    detachedStand = stand
    if heartbeatConn then heartbeatConn:Disconnect() end
    heartbeatConn = game:GetService("RunService").Heartbeat:Connect(function()
        updateDetachedStandVelocity()
    end)
end

local function detachStandControl(stand)
    if not stand or not stand.Root then
        print("[detachStandControl] Нет валидного стенда!")
        return
    end
    print("[detachStandControl] Открепляю стенд:", stand.Name)
    local bv = stand.Root:FindFirstChild("BodyVelocity")
    if not bv then
        bv = Instance.new("BodyVelocity", stand.Root)
        bv.MaxForce = Vector3.new(1e6, 1e6, 1e6)
    end
    bv.Velocity = Vector3.new(0,0,0)
    enableDetachedStandControl(stand)
end

-- Дублированный код удален - используется версия выше

-- Горячая клавиша H удалена по просьбе пользователя
-- Отключаем существующие соединения если они есть
if _G._standSwapConn then 
    _G._standSwapConn:Disconnect() 
    _G._standSwapConn = nil
end
